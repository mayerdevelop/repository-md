{"version":3,"file":"po-ui-ng-templates.mjs","sources":["../../../projects/templates/src/lib/utils/util.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.html","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.html","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","../../../projects/templates/src/lib/components/po-page-background/po-page-background.component.html","../../../projects/templates/src/lib/components/po-page-background/po-page-background.component.ts","../../../projects/templates/src/lib/components/po-page-background/po-page-background.module.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password-base.component.ts","../../../projects/templates/src/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.service.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.component.html","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.component.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.module.ts","../../../projects/templates/src/lib/services/po-page-dynamic/po-page-dynamic.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail-actions.service.ts","../../../projects/templates/src/lib/services/po-page-customization/po-page-customization.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","../../../projects/templates/src/lib/services/po-page-dynamic/po-page-dynamic.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit-actions.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","../../../projects/templates/src/lib/services/po-page-customization/po-page-customization.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table-literals.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table-actions.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","../../../projects/templates/src/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.service.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login-base.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.html","../../../projects/templates/src/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.component.html","../../../projects/templates/src/lib/components/po-page-login/po-page-login.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.module.ts","../../../projects/templates/src/lib/components/components.module.ts","../../../projects/templates/src/lib/services/services.module.ts","../../../projects/templates/src/lib/po-templates.module.ts","../../../projects/templates/src/po-ui-ng-templates.ts"],"sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { poLocales, poLocaleDefault } from '@po-ui/ng-components';\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  return navigator.language || navigator['userLanguage'];\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador não estiver dentro dos idiomas suportados pelo PO,\n * será retornado a linguagem padrão (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\n\n  if (!poLocales.includes(language)) {\n    return poLocaleDefault;\n  }\n\n  return language;\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return val === 'true' || val === 'on' || val === '';\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn Função que será executada dentro do contexto. Podendo ser o nome da função\n * ou a referência da mesma.\n *\n * @param context Contexto do qual a função será executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string, start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    const dateString = date.toString();\n\n    if (time) {\n      return year + '-' + month + '-' + day + time;\n    } else {\n      return (\n        year +\n        '-' +\n        month +\n        '-' +\n        day +\n        'T' +\n        dateString.substring(16, 24) +\n        dateString.substring(28, 31) +\n        ':' +\n        dateString.substring(31, 33)\n      );\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n *\n * @param year Ano\n */\nexport function formatYear(year: number) {\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n *\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) {\n      continue;\n    }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no começo da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que não comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * Método responsável por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se será em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  if (ascending) {\n    if (leftSide < rightSide) {\n      return -1;\n    } else if (leftSide > rightSide) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (leftSide < rightSide) {\n      return 1;\n    } else if (leftSide > rightSide) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return date >= dateStart && date <= dateEnd;\n  } else if (dateStart && !dateEnd) {\n    return date >= dateStart;\n  } else if (!dateStart && dateEnd) {\n    return date <= dateEnd;\n  } else {\n    return true;\n  }\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o método é \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'São Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'São Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({\n    ...selectedProperties,\n    [property]: object[property]\n  });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versão typescrit for atualizada.\n *\n * @param object Objeto de onde será pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * adiciona 0 no tempo informado, caso menor q 10\n *\n * @param time\n */\nexport function addZero(time: number) {\n  if (!time) {\n    return '00';\n  }\n\n  if (time < 10) {\n    return `0${time}`;\n  }\n\n  return time;\n}\n\n/**\n * Remove do objeto as propriedades especificadas.\n *\n * Exemplo:\n *\n * ```\n * key: ['id', 'cpf']\n * newItemValue: { id: '123', cpf: '456', name: 'Test' }\n * Resultado: { name: 'Test' }\n * ```\n *\n * @param keys lista de propriedades para ser removida do objeto.\n * @param newItemValue objeto que se deseja remover as propriedades.\n * @returns objeto sem as propriedades especificadas.\n */\nexport function removeKeysProperties(keys: Array<any>, newItemValue: any) {\n  keys.forEach(key => delete newItemValue[key]);\n  return newItemValue;\n}\n\n/**\n * Remove objetos duplicados.\n *\n * Exemplo:\n *\n * ```\n * item: [{country: 'japao'}, {country: 'brasil'} , {country: 'china'}]\n * item2: [{country: 'chile'}, {country: 'brasil'}, {country: 'canada'}]\n * key: 'country'\n * Resultado:\n *    item2 = [{country: 'chile'}, {country: 'canada'} ]\n * ```\n *\n * @param item lista comparada.\n * @param item2 lista para remover items duplicados.\n * @param key propriedade que será utilizada para realizar a comparação.\n */\nexport function removeDuplicateItems(item, item2, key) {\n  for (let i = 0, len = item.length; i < len; i++) {\n    for (let j = 0, len2 = item2.length; j < len2; j++) {\n      if (item[i][key] === item2[j][key]) {\n        item2.splice(j, 1);\n        len2 = item2.length;\n      }\n    }\n  }\n}\n","export const poModalPasswordRecoveryLiterals = {\n  en: <any>{\n    cancelButton: 'Cancel',\n    closeButton: 'Close',\n    continueButton: 'Continue',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Invalid e-mail format',\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\n    emailSentTitle: 'E-mail sent',\n    forgotPasswordTitle: 'Forgot your password?',\n    insertCode: 'Type the code',\n    insertEmail: 'Enter your e-mail',\n    insertPhone: 'Enter your mobile number',\n    phoneErrorMessagePhrase: 'Invalid phone number',\n    prepositionIn: 'in',\n    prepositionOr: 'or',\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\n    resendEmailButton: 'Resend',\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\n    sendAgain: 'send again.',\n    sendButton: 'Submit',\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\n    supportContact: 'If you do not have access to {0} contact support',\n    telephone: 'telephone',\n    typeCodeTitle: 'Enter sent code'\n  },\n  es: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Cerrar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de correo electrónico no válido',\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creación de nueva contraseña para su correo electrónico.\n    Si no ha recibido después de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Olvidaste tu contraseña?',\n    insertCode: 'Introduzca el código',\n    insertEmail: 'Introduce tu e-mail',\n    insertPhone: 'Introduce tu número de celular',\n    phoneErrorMessagePhrase: 'Número de teléfono no válido',\n    prepositionIn: 'en',\n    prepositionOr: 'u',\n    recoveryPasswordPhrase: 'Para recuperar su contraseña vamos a enviar un {0} con instrucciones.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Si el código no llega dentro de unos minutos, vuelva a enviar.',\n    sendAgain: 'envíe de nuevo.',\n    sendAgainPhrase: 'Si el código no llega dentro de unos minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos un código para su celular.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Código no válido. Escriba de nuevo o póngase en contacto con el soporte',\n    supportContact: 'Si no tiene acceso a {0} póngase en contacto con el soporte',\n    telephone: 'teléfono',\n    typeCodeTitle: 'Escribir código enviado'\n  },\n  pt: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Fechar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de e-mail inválido',\n    emailSentConfirmationPhrase: `Enviamos as instruções e link de criação de nova senha para o seu e-mail.\n    Caso não tenha recebido após alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Esqueceu sua senha?',\n    insertCode: 'Digite o código',\n    insertEmail: 'Insira seu e-mail',\n    insertPhone: 'Insira seu número de celular',\n    phoneErrorMessagePhrase: 'Número de telefone inválido',\n    prepositionIn: 'em',\n    prepositionOr: 'ou',\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruções.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Se o código não chegar dentro de alguns minutos envie novamente',\n    sendAgain: 'envie novamente.',\n    sendAgainPhrase: 'Se o código não chegar dentro de alguns minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos um código para seu celular cadastrado.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Código inválido. Digite novamente ou contacte o suporte',\n    supportContact: 'Se não tiver acesso ao {0} contacte o suporte',\n    telephone: 'telefone',\n    typeCodeTitle: 'Digitar código enviado'\n  },\n  ru: <any>{\n    cancelButton: 'отменить',\n    closeButton: 'близко',\n    continueButton: 'близко',\n    email: 'по электронной почте',\n    emailErrorMessagePhrase: 'Неверный формат электронной почты',\n    emailSentConfirmationPhrase: `Мы отправили инструкции и новую ссылку для создания пароля для вашей электронной почты.\nЕсли вы не получили его в течение нескольких минут, установите флажок Спам или нажмите Далее.`,\n    emailSentTitle: 'Письмо отправлено',\n    forgotPasswordTitle: 'Забыли пароль?',\n    insertCode: 'Введите код',\n    insertEmail: 'Введите адрес электронной почты',\n    insertPhone: 'Введите номер вашего мобильного телефона',\n    phoneErrorMessagePhrase: 'Неверный номер телефона',\n    prepositionIn: 'в',\n    prepositionOr: 'или',\n    recoveryPasswordPhrase: 'Для восстановления вашего пароля мы вышлем {0} с инструкциями.',\n    resendEmailButton: 'Отправить еще раз',\n    resendSmsCodePhrase: 'Если код не приходит через несколько минут, попробуйте еще раз.',\n    sendAgain: 'отправить снова.',\n    sendAgainPhrase: 'Если код не приходит через несколько минут',\n    sendButton: 'послать',\n    sentSmsCodePhrase: 'Мы отправляем код на ваш зарегистрированный мобильный телефон.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Неверный код. Повторите или обратитесь в службу поддержки',\n    supportContact: 'Если у вас нет доступа к {0}, обратитесь в службу поддержки',\n    telephone: 'телефон',\n    typeCodeTitle: 'Введите отправленный код'\n  }\n};\n","/**\n * @usedBy PoModalPasswordRecoveryComponent\n *\n * @description\n *\n * *Enum* para especificação do tipo de recuperação de senha.\n */\nexport enum PoModalPasswordRecoveryType {\n  /** Possibilita ao usuário optar por envio via email ou SMS */\n  All = 'all',\n\n  /** Definição para recuperação apenas por email */\n  Email = 'email',\n\n  /** Definição para recuperação apenas por SMS */\n  SMS = 'sms'\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\n\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\n\n/**\n * @description\n *\n * O componente `po-modal-password-recovery` é utilizado como template para solicitação de troca de senha.\n *\n * É composto por uma modal que possui três telas, cada uma com as seguintes características:\n *\n * - A primeira possui campos para preenchimento de email ou número de telefone;\n * - Tela com campo para preenchimento de código SMS enviado para o número de telefone enviado;\n * - A terceira se trata de uma confirmação de envio de link para a caixa de email do usuário.\n *\n *\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\n * para recuperação de senha, bastando definir uma url para requisição dos recursos.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\n *\n *\n * Para a modal de digitação de código SMS, é possível definir uma mensagem de erro\n * customizada com a propriedade `p-code-error` e há um link para\n * reenvio de código por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuário e a quantidade\n * de vezes em que o usuário fez a solicitação de reenvio.\n *\n * > É indicada a utilização da tela de digitação para envio de código SMS apenas\n * se a opção por envio SMS for disponibilizada para o usuário.\n *\n *\n * A modal de confirmação contém uma ação de reenvio e o evento `p-submit`\n * é quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\n *\n * > A tela de confirmação é indicada para quando o usuário solicitar a troca através do email.\n *\n * > Os textos das modals são pré-definidos, imutáveis e são traduzidos de acordo com o idioma do *browser* (pt, en e es)\n *\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@po-ui/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\n@Directive()\nexport abstract class PoModalPasswordRecoveryBaseComponent {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Definição de mensagem de erro customizada para quando o usuário passar um código SMS inválido ou errado.\n   */\n  @Input('p-code-error') codeError: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisição do recurso. Quando preenchido,\n   * o métodos `p-submit` e `p-submit-code` serão ignorados e o componente adquirirá automatização\n   * para o processo de solicitação de troca de senha.\n   *\n   * ### Processos\n   * Ao digitar um valor válido no campo de email/telefone e pressionar **enviar**,\n   * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário.\n   *\n   * ```\n   * body {\n   *  email: email,\n   *  retry?: retry\n   * }\n   * ```\n   *\n   *\n   * #### Recuperação por email\n   * Para a recuperação de senha por **email**, o código de resposta HTTP de status esperado é `204`.\n   *\n   * Em caso de **sucesso**, será exibida a modal de confirmação de e-mail para o usuário.\n   *\n   *\n   * > A ação **Reenviar** na tela de confirmação efetua uma nova requisição\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\n   *\n   * *Processo finalizado.*\n   *\n   *\n   * #### Recuperação por SMS\n   * Se a opção de recuperação for por **SMS**, o código de status de sucesso deve ser `200`.\n   * Em caso de **sucesso**, abre-se a modal de digitação de código SMS e a resposta\n   * desta requisição deve retornar uma definição de dados abaixo:\n   *\n   * ```\n   * 200:\n   *  {\n   *    hash: hash,\n   *    urlValidationCode?: url\n   *  }\n   * ```\n   *\n   *\n   * - O **hash** será o código de validação da solicitação do SMS para ser enviado juntamente com o código de verificação do SMS;\n   * - **urlValidationCode** é a url usada para validação do código enviado por SMS.\n   *\n   *\n   * > Caso não seja passado urlValidationCode, o endpoint usado para validação do código será `<p-url-recovery>/validation`.\n   *\n   *\n   * #### Validação do código SMS\n   * Ao digitar um valor válido no campo de código SMS e pressionar **continuar**, o componente fará uma requisição `POST` contendo:\n   *\n   * ```\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\n   * Body {\n   *  hash: hash,\n   *  code: code\n   * }\n   * ```\n   *\n   *\n   * O código de resposta HTTP de status esperado é `200`.\n   *\n   * Em caso de **erro** na validação do código SMS, a modal se mantém com o campo para digitação\n   * de código SMS\n   *\n   *\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    error {\n   *      message: 'Error Message'\n   *    }\n   *  }\n   * ```\n   *\n   *\n   * Em caso de **sucesso**, espera-se a resposta desta requisição retornando a seguinte definição:\n   *\n   * ```\n   * 200:\n   *  {\n   *    token: token,\n   *    urlChangePassword?: url\n   *  }\n   * ```\n   *\n   *\n   * - **token**: Token de alteração de senha;\n   * - **urlChangePassword**: url para o formulário de alteração de senha.\n   *\n   *\n   * O componente está configurado para redirecionar para a url estabelecida em `urlChangePassword`.\n   *\n   * > Caso não seja passado valor para urlChangePassword,\n   * a url usada para validação será a `<p-url-recovery>/changePassword?token=<token>`.\n   *\n   * *Processo finalizado.*\n   */\n  @Input('p-url-recovery') urlRecovery?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ação contendo como parâmetro o código enviado por SMS e digitado pelo usuário.\n   *\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ação contendo o email como parâmetro e que é executada quando o usuário clica sobres os botões de 'enviar' e 'reenviar' e-mail.\n   *\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-submit') submit = new EventEmitter<any>();\n\n  email: string;\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\n  modalPasswordRecoveryTypeAll: boolean;\n  phone: string;\n  smsCode: string;\n  smsCodeErrorMessage: string;\n\n  literals: {\n    cancelButton: string;\n    closeButton: string;\n    continueButton: string;\n    email: string;\n    emailErrorMessagePhrase: string;\n    emailSentConfirmationPhrase: string;\n    emailSentTitle: string;\n    forgotPasswordTitle: string;\n    insertCode: string;\n    insertEmail: string;\n    insertPhone: string;\n    phoneErrorMessagePhrase: string;\n    prepositionIn: string;\n    prepositionOr: string;\n    recoveryPasswordPhrase: string;\n    resendEmailButton: string;\n    resendSmsCodePhrase: string;\n    sendAgain: string;\n    sendAgainPhrase: string;\n    sendButton: string;\n    sms: string;\n    smsCode: string;\n    smsCodeErrorMessagePhrase: string;\n    sentSmsCodePhrase: string;\n    supportContact: string;\n    telephone: string;\n    typeCodeTitle: string;\n  } = poModalPasswordRecoveryLiterals[poLocaleDefault];\n\n  private _contactEmail: string;\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Definição do e-mail que é exibido na mensagem para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\n  }\n\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Definição da mascara do campo de telefone.\n   *\n   * @default `(99) 99999-9999`\n   */\n  @Input('p-phone-mask') set phoneMask(value: string) {\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\n    this.minLength = this.maxLength = this._phoneMask.length;\n  }\n\n  get phoneMask() {\n    return this._phoneMask;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de recuperação de senha que será exibido.\n   *\n   * @default `PoModalPasswordRecoveryType.Email`\n   *\n   */\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value)\n      ? value\n      : PoModalPasswordRecoveryTypeDefault;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  constructor(languageService: PoLanguageService) {\n    this.literals = {\n      ...this.literals,\n      ...poModalPasswordRecoveryLiterals[languageService.getShortLanguage()]\n    };\n  }\n\n  private concatenateSMSErrorMessage(value: string) {\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\n\n    return value && value !== ''\n      ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.`\n      : literalCodeErrorMessage;\n  }\n\n  /**\n   * Acão para conclusão de processo e fechamento da modal. Indica-se sua utilização\n   * para após o envio e validação do código SMS enviado pelo usuário.\n   *\n   * > Nas modals em que há a ação de 'cancelar' dispensa-se o uso desta ação pois o componente já trata o fechamento da modal.\n   */\n  abstract completed(): void;\n\n  /**\n   * Abre a modal de preenchimento de email ou número de telefone para solicitação de troca de senha.\n   */\n  abstract open(): void;\n\n  /**\n   * Abre a modal de confirmação de envio de email.\n   */\n  abstract openConfirmation(): void;\n\n  /**\n   * Abre a modal de preenchimento do código SMS enviado ao usuário.\n   */\n  abstract openSmsCode(): void;\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum para definição do tipo de conteúdo exibido na modal.\n */\nexport enum PoModalPasswordRecoveryModalContent {\n  /** Exibição de modal contendo campo para preenchimento de email ou número de telefone */\n  Email = 'email',\n\n  /** Exibição de modal contendo campo para inserção de código enviado por SMS */\n  SMSCode = 'smsCode',\n\n  /** Exibição de modal de confirmação de envio */\n  Confirmation = 'confirmation'\n}\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\n\n@Injectable()\nexport class PoModalPasswordRecoveryService {\n  constructor(private http: HttpClient) {}\n\n  post(\n    urlRecovery: string,\n    item: PoModalPasswordRecovery,\n    params?: HttpParams | { [param: string]: string | Array<string> }\n  ): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente utilizado para exibição da mensagem customizada de erro em um campo de formulário.\n */\n@Component({\n  selector: 'po-modal-password-recovery-error-message',\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\n})\nexport class PoModalPasswordRecoveryErrorMessageComponent {\n  /** Texto exibido na mensagem de erro. */\n  @Input('p-text') text: string;\n}\n","<div class=\"po-field-container-bottom-text-error po-field-container-error-item\">\n  <span class=\"po-icon po-icon-exclamation\"></span>\n  <span class=\"po-field-container-error-text\">{{ text }}</span>\n</div>\n","<po-modal\n  #recoveryModal\n  p-hide-close\n  p-size=\"auto\"\n  [ngSwitch]=\"modalType\"\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"modalTitle\"\n>\n  <div class=\"po-modal-password-recovery-wrapper\">\n    <div *ngSwitchCase=\"'email'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">\n        {{ emailModalPhrases.firstPhrase }}\n      </div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #emailForm=\"ngForm\">\n          <div *ngIf=\"modalPasswordRecoveryTypeAll\">\n            <po-radio-group\n              name=\"type\"\n              [(ngModel)]=\"chosenTypeFormOption\"\n              [p-options]=\"typeFormOptions\"\n              (p-change)=\"getInputType($event)\"\n            >\n            </po-radio-group>\n          </div>\n\n          <div class=\"po-mt-1\">\n            <po-email\n              *ngIf=\"type === 'email' || type === 'all'\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              p-required\n              [p-label]=\"literals.insertEmail\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\n            >\n            </po-email>\n\n            <po-input\n              *ngIf=\"type === 'sms'\"\n              name=\"sms\"\n              [(ngModel)]=\"phone\"\n              p-icon=\"po-icon-telephone\"\n              p-required\n              [p-label]=\"literals.insertPhone\"\n              [p-mask]=\"phoneMask\"\n              [p-maxlength]=\"maxLength\"\n              [p-minlength]=\"minLength\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\n            >\n            </po-input>\n          </div>\n\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message\n              *ngIf=\"invalidEmail && control.dirty\"\n              [p-text]=\"type === 'sms' ? literals.phoneErrorMessagePhrase : literals.emailErrorMessagePhrase\"\n            >\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">\n        {{ emailModalPhrases.secondPhrase }}\n        <span *ngIf=\"contactEmail\">\n          {{ literals.prepositionIn }}\n          <a class=\"po-modal-password-recovery-link\" href=\"mailto:{{ contactEmail }}\" target=\"_self\">\n            {{ contactEmail }}\n          </a>\n        </span>\n        {{ endpoint }}\n      </div>\n    </div>\n\n    <div #smsCodeModal *ngSwitchCase=\"'smsCode'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">{{ literals.sentSmsCodePhrase }}</div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #smsCodeForm=\"ngForm\">\n          <po-input\n            name=\"sms\"\n            [(ngModel)]=\"smsCode\"\n            p-maxlength=\"11\"\n            p-minlength=\"11\"\n            p-required\n            [p-label]=\"literals.insertCode\"\n            [p-mask]=\"codeMask\"\n            (p-change-model)=\"formModelChangesCheck(smsCodeForm)\"\n          >\n          </po-input>\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message\n              *ngIf=\"invalidEmail\"\n              [p-text]=\"smsCodeErrorMessage || this.literals.smsCodeErrorMessagePhrase\"\n            >\n            </po-modal-password-recovery-error-message>\n            <po-modal-password-recovery-error-message *ngIf=\"showCustomCodeError\" [p-text]=\"codeError\">\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">\n        {{ literals.sendAgainPhrase }}\n        <span class=\"po-modal-password-recovery-link\" (click)=\"resendSmsCode()\">{{ literals.sendAgain }}</span>\n      </div>\n    </div>\n\n    <div #confirmationModal *ngSwitchCase=\"'confirmation'\" class=\"po-modal-password-recovery-content po-row\">\n      <img class=\"po-modal-password-recovery-user-image po-mb-2\" src=\"./assets/images/email-sent.svg\" />\n      <div class=\"po-modal-password-recovery-text\">\n        {{ literals.emailSentConfirmationPhrase }}\n      </div>\n    </div>\n  </div>\n</po-modal>\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport {\n  PoI18nPipe,\n  PoLanguageService,\n  PoModalAction,\n  PoModalComponent,\n  PoRadioGroupOption\n} from '@po-ui/ng-components';\n\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\n/**\n * @docsExtends PoModalPasswordRecoveryBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-password-recovery-basic\" title=\"PO Modal Password Recovery Basic\">\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-labs\" title=\"PO Modal Password Recovery Labs\">\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-request\" title=\"PO Modal Password Recovery Request\">\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal-password-recovery',\n  templateUrl: './po-modal-password-recovery.component.html'\n})\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\n  @ViewChild('emailForm') emailForm: NgForm;\n\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\n\n  @ViewChild('smsCodeForm') smsCodeForm: NgForm;\n\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\n  codeMask: string = '9 9 9 9 9 9';\n  control: AbstractControl;\n  emailModal: boolean = true;\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\n  endpoint: string = '.';\n  invalidCode: boolean = false;\n  invalidEmail: boolean = false;\n  modalTitle: string;\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\n  showCustomCodeError: boolean;\n  smsCodeErrorMessagePhrase: string;\n  submittedCodeValue = {} as PoModalPasswordRecovery;\n  submittedContactValue = {} as PoModalPasswordRecovery;\n\n  primaryAction: PoModalAction = { label: undefined, action: () => {} };\n\n  secondaryAction: PoModalAction = { label: undefined, action: () => {} };\n\n  typeFormOptions: Array<PoRadioGroupOption> = [\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\n  ];\n\n  private passwordRecoverySubscription: Subscription;\n  private smsBodyResponse;\n  private smsCodeSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private poI18nPipe: PoI18nPipe,\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService,\n    poLanguageService: PoLanguageService\n  ) {\n    super(poLanguageService);\n  }\n\n  ngOnDestroy() {\n    if (this.passwordRecoverySubscription) {\n      this.passwordRecoverySubscription.unsubscribe();\n    }\n\n    if (this.smsCodeSubscription) {\n      this.smsCodeSubscription.unsubscribe();\n    }\n  }\n\n  completed() {\n    this.cancelAction();\n  }\n\n  formModelChangesCheck(form: NgForm) {\n    const invalidForm = form.invalid;\n    this.invalidEmail = invalidForm && form.dirty;\n    this.primaryAction.disabled = invalidForm;\n\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\n      this.showCustomCodeError = codeError && form.pristine;\n    }\n  }\n\n  getInputType(type) {\n    this.type = type;\n    this.pipeModalPhrases();\n    setTimeout(() => {\n      this.control = this.emailForm.controls[type];\n      this.formModelChangesCheck(this.emailForm);\n      this.resetFormFields(this.control);\n    });\n  }\n\n  open() {\n    const control = this.checkFormType(this.type);\n    this.control = this.emailForm.controls[control];\n    this.setEmailModalPhrasesAndActions();\n    this.formModelChangesCheck(this.emailForm);\n    this.recoveryModalElement.open();\n  }\n\n  openConfirmation() {\n    this.modalTitle = this.literals.emailSentTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\n    this.setActions(\n      this.cancelAction,\n      this.literals.closeButton,\n      this.submitAction,\n      this.literals.resendEmailButton,\n      false\n    );\n  }\n\n  openSmsCode() {\n    this.modalTitle = this.literals.typeCodeTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\n    this.setActions(\n      this.submitSmsCodeAction,\n      this.literals.continueButton,\n      this.cancelAction,\n      this.literals.cancelButton,\n      true\n    );\n\n    setTimeout(() => {\n      this.control = this.smsCodeForm.controls['sms'];\n      this.formModelChangesCheck(this.smsCodeForm);\n    });\n  }\n\n  resendSmsCode() {\n    this.incrementRetryAttempts();\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private assignSmsResponse(responseObj) {\n    this.smsBodyResponse = Object.assign({}, { hash: responseObj.hash });\n    if (responseObj.urlValidationCode) {\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, { urlValidationCode: responseObj.urlValidationCode });\n    }\n  }\n\n  private cancelAction() {\n    this.resetFormFields(this.control);\n    this.submittedContactValue = {};\n\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\n    this.recoveryModalElement.close();\n  }\n\n  private checkFormType(type: PoModalPasswordRecoveryType) {\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\n  }\n\n  private formReset(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\n  }\n\n  private incrementRetryAttempts() {\n    this.submittedContactValue.retry = this.submittedContactValue.retry + 1 || 1;\n  }\n\n  private openExternalLink(url, queryParam) {\n    window.open(`${url}?token=${queryParam}`, '_self');\n  }\n\n  private openInternalLink(url, endpoint, queryParam) {\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\n  }\n\n  private pipeModalPhrases() {\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(\n        this.literals.recoveryPasswordPhrase,\n        this.literals.sms\n      );\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(\n        this.literals.supportContact,\n        this.literals.telephone\n      );\n    } else {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(\n        this.literals.recoveryPasswordPhrase,\n        this.literals.email\n      );\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\n    }\n  }\n\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\n    const urlChangePassword = recoveryToken.urlChangePassword;\n    if (urlChangePassword) {\n      isExternalLink(urlChangePassword)\n        ? this.openExternalLink(urlChangePassword, recoveryToken.token)\n        : this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\n    } else {\n      const changePasswordEndpoint = 'changePassword';\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\n    }\n  }\n\n  private resetFormFields(control) {\n    this.formReset(control);\n    this.email = undefined;\n    this.phone = undefined;\n    this.smsCode = undefined;\n  }\n\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\n    this.primaryAction.action = () => primaryAction.call(this);\n    this.primaryAction.label = primarylabel;\n    this.secondaryAction.action = () => secondaryAction.call(this);\n    this.secondaryAction.label = secondaryLabel;\n    this.primaryAction.disabled = disabled;\n  }\n\n  private setEmailModalPhrasesAndActions() {\n    this.modalTitle = this.literals.forgotPasswordTitle;\n    this.pipeModalPhrases();\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\n  }\n\n  private setRequestEndpoint(urlValidationCode?: string) {\n    const endpoint = urlValidationCode || 'validation';\n\n    return `${this.urlRecovery}/${endpoint}`;\n  }\n\n  private setPipeArguments(literalAttr: string, arg: string) {\n    return this.poI18nPipe.transform(literalAttr, arg);\n  }\n\n  private submitAction() {\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation\n      ? this.incrementRetryAttempts()\n      : this.formReset(this.control);\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\n\n    this.passwordRecoverySubscription = this.poModalPasswordRecoveryService\n      .post(this.urlRecovery, data, params)\n      .subscribe(response => {\n        if (\n          (modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) &&\n          response.status === 204\n        ) {\n          this.openConfirmation();\n        } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\n          this.assignSmsResponse(response.body);\n          this.openSmsCode();\n        }\n      });\n  }\n\n  private submitSmsCodeAction() {\n    this.submittedCodeValue.code = this.smsCode;\n\n    if (this.urlRecovery) {\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, { hash: this.smsBodyResponse.hash });\n      this.submitSmsCodeRequest(this.submittedCodeValue);\n    } else {\n      this.codeSubmit.emit(this.submittedCodeValue);\n    }\n    this.resetFormFields(this.control);\n  }\n\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\n      .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\n      .subscribe(\n        response => {\n          const successStatus = response.status === 200;\n          if (successStatus) {\n            this.completed();\n            this.redirectToChangePassword(response.body);\n          }\n        },\n        error => {\n          this.codeError = error.error.message;\n          this.openSmsCode();\n        }\n      );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@po-ui/ng-components';\n\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryErrorMessageComponent } from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\n\n/**\n * @description\n *\n * Módulo do template do po-modal-password-recovery.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, PoFieldModule, PoModalModule],\n  declarations: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],\n  exports: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\n})\nexport class PoModalPasswordRecoveryModule {}\n","<div class=\"po-page-login-container\">\n  <div class=\"po-page-login-panel\">\n    <img\n      *ngIf=\"logo\"\n      class=\"po-page-background-main-logo\"\n      [class.po-page-background-hide-logo]=\"hideLogo\"\n      alt=\"main-logo\"\n      [src]=\"logo\"\n    />\n\n    <div class=\"po-page-login-body\">\n      <div class=\"po-page-login-panel-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"po-page-background-footer po-sm-12\">\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\n\n      <div class=\"po-page-background-footer-content\">\n        <div *ngIf=\"showSelectLanguage\" class=\"po-page-background-footer-select\">\n          <po-select\n            name=\"selectedLanguageOption\"\n            [(ngModel)]=\"selectedLanguageOption\"\n            [p-options]=\"selectLanguageOptions\"\n            (p-change)=\"onChangeLanguage()\"\n          >\n          </po-select>\n        </div>\n\n        <div\n          class=\"po-page-background-secondary-logo\"\n          [ngClass]=\"\n            showSelectLanguage\n              ? 'po-page-background-secondary-logo-right'\n              : 'po-page-background-secondary-logo-centered'\n          \"\n        >\n          <img\n            *ngIf=\"secondaryLogo\"\n            class=\"po-page-background-secondary-logo-image\"\n            alt=\"secondary-logo\"\n            [src]=\"secondaryLogo\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"background\"\n    [ngClass]=\"background ? 'po-page-login-highlight-image' : 'po-page-login-highlight-image-off'\"\n    [style.background-image]=\"'url(' + background + ')'\"\n  >\n    <div class=\"po-page-login-highlight-text\">\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { PoSelectOption, PoLanguageService, PoLanguage, poLanguageDefault } from '@po-ui/ng-components';\n\nimport { convertToBoolean, isTypeof } from './../../utils/util';\n\n@Component({\n  selector: 'po-page-background',\n  templateUrl: './po-page-background.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates\n * de `po-page-login` e demais templates de login.\n */\nexport class PoPageBackgroundComponent implements OnInit {\n  /** Insere uma imagem de destaque ao lado direito do container. */\n  @Input('p-background') background?: string;\n\n  /** Idioma inicial selecionado no combo */\n  @Input('p-initial-language') initialSelectLanguage?: string;\n\n  /** Designa se o logotipo deve desaparecer em resoluções menores. */\n  @Input('p-hide-logo') hideLogo?: boolean;\n\n  /** Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`. */\n  @Input('p-highlight-info') highlightInfo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao selecionar alguma opção no seletor de idiomas.\n   * Para este evento será passado como parâmetro o valor de idioma selecionado.\n   */\n  @Output('p-selected-language') selectedLanguage: EventEmitter<string> = new EventEmitter<string>();\n\n  selectedLanguageOption: string;\n\n  private _logo?: string;\n  private _secondaryLogo?: string;\n  private _showSelectLanguage?: boolean = false;\n  private _languagesList: Array<PoLanguage>;\n  private _selectLanguageOptions: Array<PoSelectOption>;\n\n  /** Lista de idiomas para o combo box */\n  @Input('p-languages') set languagesList(value: Array<PoLanguage>) {\n    this._languagesList = value;\n    this.setLanguageOptions();\n  }\n\n  get languagesList(): Array<PoLanguage> {\n    if (this._languagesList?.length) {\n      return this._languagesList;\n    }\n    return poLanguageDefault;\n  }\n\n  /** Caminho para a logomarca localizada na parte superior. */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapé.\n   */\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get secondaryLogo() {\n    return this._secondaryLogo;\n  }\n\n  /** Define se o seletor de idiomas deve ser exibido. */\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\n  }\n  get showSelectLanguage() {\n    return this._showSelectLanguage;\n  }\n\n  constructor(public poLanguageService: PoLanguageService) {}\n\n  ngOnInit() {\n    this.selectedLanguageOption = this.initialSelectLanguage || this.poLanguageService.getShortLanguage();\n  }\n\n  onChangeLanguage() {\n    this.selectedLanguage.emit(this.selectedLanguageOption);\n  }\n\n  get selectLanguageOptions(): Array<PoSelectOption> {\n    return this._selectLanguageOptions;\n  }\n\n  private setLanguageOptions() {\n    this._selectLanguageOptions = this.languagesList.map<PoSelectOption>(language => ({\n      label: language.description,\n      value: language.language\n    }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDividerModule, PoFieldModule } from '@po-ui/ng-components';\n\nimport { PoPageBackgroundComponent } from './po-page-background.component';\n\n/**\n * @description\n *\n * Módulo do template do po-page-background.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule, PoDividerModule, PoFieldModule],\n  declarations: [PoPageBackgroundComponent],\n  exports: [PoPageBackgroundComponent]\n})\nexport class PoPageBackgroundModule {}\n","/**\n * @usedBy PoPageBlockedUserComponent\n *\n * @description\n *\n * *Enum* para os tipos de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado pelo desenvolvedor.\n */\nexport enum PoPageBlockedUserReason {\n  /** Sem definição; a tela exibirá conteúdo de bloqueio genérico. */\n  None = 'none',\n\n  /** Definição para tentativas de acesso esgotadas. */\n  ExceededAttempts = 'exceededAttempts',\n\n  /** Definição para senha expirada. */\n  ExpiredPassword = 'expiredPassword'\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\n\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\n\n/**\n * @description\n *\n * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.\n * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.\n *\n * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.\n * Os textos das telas são pré-definidos e imutáveis, porém,\n * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.\n *\n * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.\n *\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@po-ui/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n *\n * _______________\n *\n * #### Praticidade\n * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,\n * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica\n * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n *\n *\n * ```\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';\n *\n *   ...\n *   const routes: Routes = [\n *     {\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n *         contactEmail: 'dev.po@po-ui.com',\n *         contactPhone: '0800 1234 000',\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\n *         urlBack: '/home'\n *       }\n *     }\n *     ...\n *   ];\n *\n *   @NgModule({\n *     imports: [RouterModule.forRoot(routes)],\n *     exports: [RouterModule]\n *   })\n *   export class AppRoutingModule { }\n * ```\n *\n * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n *\n */\n@Directive()\nexport class PoPageBlockedUserBaseComponent {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir\n   * tanto rotas internas quanto externas.\n   */\n  @Input('p-contact-email') contactEmail: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.\n   *\n   * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.\n   */\n  @Input('p-contact-phone') contactPhone: string;\n\n  /** Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão do PO UI. */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapé.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  private _params: PoPageBlockedUserReasonParams = { ...PoPageBlockedUserParamsDefault };\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\n  private _urlBack: string = '/';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Designação de valores usados para a customização da mensagem de bloqueio.\n   * Confira abaixo os valores pré-definidos.\n   *\n   * ```\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\n   *    attempts: 5,\n   *    days: 90,\n   *    hours: 24\n   *  };\n   * ```\n   *\n   * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.\n   *\n   * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.\n   *\n   */\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\n    if (value instanceof Object) {\n      const keys = Object.keys(value);\n      const newParams = { ...PoPageBlockedUserParamsDefault };\n\n      keys.forEach(key => {\n        newParams[key] = value[key];\n      });\n\n      this._params = newParams;\n    } else {\n      this._params = { ...PoPageBlockedUserParamsDefault };\n    }\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.\n   *\n   * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.\n   *\n   * @default `PoPageBlockedUserReason.None`\n   */\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value)\n      ? value\n      : PoPageBlockedUserReasonDefault;\n  }\n\n  get reason() {\n    return this._reason;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a ação de retorno da página.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') set urlBack(url: string) {\n    this._urlBack = url;\n  }\n\n  get urlBack() {\n    return this._urlBack;\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nconst poPageBlockedUserContactItemMargin = 16;\n\n@Component({\n  selector: 'po-page-blocked-user-contacts',\n  templateUrl: './po-page-blocked-user-contacts.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoPageBlockedUserContactsComponent {\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\n\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\n\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\n\n  overflowItem: boolean = true;\n\n  private _email: string;\n  private _phone: string;\n\n  @Input('p-email') set email(value: string) {\n    this._email = value;\n\n    this.checkContactItemWidth();\n  }\n\n  get email() {\n    return this._email;\n  }\n\n  @Input('p-phone') set phone(value: string) {\n    this._phone = value;\n\n    this.checkContactItemWidth();\n  }\n\n  get phone() {\n    return this._phone;\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  private checkContactItemWidth() {\n    this.overflowItem = true;\n\n    if (this.phone && this.email) {\n      this.changeDetector.detectChanges();\n\n      const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\n      const mailWidth = this.mailItem.nativeElement.offsetWidth;\n      const contactGroupHalfWidth =\n        this.contactGroup.nativeElement.offsetWidth / 2 - poPageBlockedUserContactItemMargin;\n\n      this.overflowItem =\n        phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\n    }\n  }\n}\n","<div #contactGroup class=\"po-page-blocked-user-contact-group po-row po-mb-3\">\n  <div\n    class=\"po-page-blocked-user-contact-item\"\n    [class.po-invisible]=\"!phone\"\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\n  >\n    <a\n      class=\"po-page-blocked-user-link po-clickable\"\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"tel:{{ phone }}\"\n      target=\"_self\"\n    >\n      <div class=\"po-page-blocked-user-contact-group-item\">\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-telephone po-pr-1\"></span>\n        <div #phoneItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ phone }}</div>\n      </div>\n    </a>\n  </div>\n  <div\n    class=\"po-page-blocked-user-contact-item po-page-blocked-user-contact-mail\"\n    [class.po-invisible]=\"!email\"\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\n  >\n    <a\n      class=\"po-page-blocked-user-link po-clickable\"\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"mailto:{{ email }}\"\n      target=\"_self\"\n    >\n      <div class=\"po-page-blocked-user-contact-group-item\">\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-mail po-pr-1\"></span>\n        <div #mailItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ email }}</div>\n      </div>\n    </a>\n  </div>\n</div>\n","export const poPageBlockedUserLiterals = {\n  none: {\n    pt: {\n      title: 'Opa!',\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\n      secondPhrase: 'Mas não se preocupe! Basta fazer seu login novamente.'\n    },\n    en: {\n      title: 'Oops!',\n      firstPhrase: 'We had to temporarily block this screen.',\n      secondPhrase: 'But do not worry! Just sign in again.'\n    },\n    es: {\n      title: 'Opa!',\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\n      secondPhrase: '¡Pero no se preocupe! Sólo tienes que iniciar sesión de nuevo.'\n    },\n    ru: {\n      title: 'Ой!',\n      firstPhrase: 'Нам пришлось временно заблокировать этот раздел.',\n      secondPhrase: 'Но не волнуйтесь! Просто войдите в систему еще раз.'\n    }\n  },\n  exceededAttempts: {\n    pt: {\n      title: 'Opa!',\n      firstPhrase: `Para sua segurança, após {0} tentativa(s) de senha seu usuário fica bloqueado e não pode ser acessado em {1} hora(s) :( `,\n      secondPhrase: 'Isso é para evitar que hackers invadam sua conta.',\n      thirdPhrase:\n        'Mas não se preocupe! Se você for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\n    },\n    en: {\n      title: 'Oops!',\n      firstPhrase: `For your security, after {0} attempt(s) of password\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\n      secondPhrase: 'This is to prevent hackers from hacking into your account.',\n      thirdPhrase:\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\n    },\n    es: {\n      title: 'Opa!',\n      firstPhrase: `Para su seguridad, después de {0} intento(s) de contraseña\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\n      secondPhrase: 'Esto es para evitar que los hackers invadan su cuenta.',\n      thirdPhrase: `¡Pero no se preocupe! Si usted es el dueño de la cuenta\n        y acaba de olvidar su contraseña, simplemente póngase en contacto con el soporte.`\n    },\n    ru: {\n      title: 'Ой!',\n      firstPhrase:\n        'Для вашей безопасности, после {0} попыток ввода пароля\\r\\nваш пользователь блокируется и не сможет авторизоваться в течение {1} часа(ов) :(',\n      secondPhrase: 'Это делается для того, чтобы хакеры не могли взломать ваш аккаунт.',\n      thirdPhrase:\n        'Но не волнуйтесь! Если вы являетесь владельцем учетной записи и просто забыли свой пароль, обратитесь в службу поддержки.'\n    }\n  },\n  expiredPassword: {\n    pt: {\n      title: 'Opa! Sua senha expirou',\n      firstPhrase: `A cada {0} dia(s) é preciso criar uma nova senha por questão de segurança. Após esses {0} dia(s) seu acesso é bloqueado :(`,\n      secondPhrase: 'Mas não se preocupe! Basta entrar em contato com o administrador do sistema.'\n    },\n    en: {\n      title: 'Oops! Your Password has expired',\n      firstPhrase: `Every {0} day(s) you need to create a new password for security reasons.\n        After these {0} day(s) your access is blocked :(`,\n      secondPhrase: 'But do not worry! Just contact your system administrator.'\n    },\n    es: {\n      title: 'Opa! Su contraseña ha caducado',\n      firstPhrase: `Cada {0} día(s) es necesario crear una nueva contraseña por razones de seguridad.\n        Después de estos {0} día(s) su acceso está bloqueado :(`,\n      secondPhrase: '¡Pero no se preocupe! Sólo tienes que ponerse en contacto con el administrador del sistema.'\n    },\n    ru: {\n      title: 'Ой! Срок действия вашего пароля истек',\n      firstPhrase:\n        'Каждые {0} дней вам необходимо создавать новый пароль в целях безопасности.\\r\\nПосле {0} дней ваш доступ будет заблокирован :(',\n      secondPhrase: 'Но не волнуйтесь! Просто обратитесь к своему системному администратору.'\n    }\n  }\n};\n","<div class=\"po-page-blocked-user-reason-content\">\n  <img class=\"po-page-blocked-user-image po-mb-3\" [src]=\"getImageByReasonType()\" />\n  <div class=\"po-page-blocked-user-header po-mb-md-3 po-row\">\n    <div class=\"po-md-12\">{{ literals?.title }}</div>\n  </div>\n  <div class=\"po-page-blocked-user-text po-font-text po-row\">\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12 po-page-blocked-user-text-bold\">\n      {{ literals?.firstPhrase | poI18n: literalParams }}\n    </div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\">{{ literals?.secondPhrase }}</div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\" *ngIf=\"literals?.thirdPhrase\">{{ literals?.thirdPhrase }}</div>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\n\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\n\n@Component({\n  selector: 'po-page-blocked-user-reason',\n  templateUrl: './po-page-blocked-user-reason.component.html'\n})\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\n\n  @Input('p-reason') reason: PoPageBlockedUserReason;\n\n  literalParams;\n  literals: { title: string; firstPhrase: string; secondPhrase: string; thirdPhrase: string };\n\n  private language: string;\n\n  constructor(private changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.reason || changes.params) {\n      this.getLiterals();\n    }\n  }\n\n  ngOnInit() {\n    this.getLiterals();\n  }\n\n  getImageByReasonType() {\n    let reasonImage;\n\n    switch (this.reason) {\n      case 'none': {\n        reasonImage = 'big-lock';\n        break;\n      }\n      case 'exceededAttempts': {\n        reasonImage = 'blocked-user';\n        break;\n      }\n      case 'expiredPassword': {\n        reasonImage = 'expired';\n        break;\n      }\n    }\n    return `./assets/images/${reasonImage}.svg`;\n  }\n\n  getParams() {\n    this.literalParams =\n      this.reason === 'expiredPassword'\n        ? [this.params.days, this.params.days]\n        : [this.params.attempts, this.params.hours];\n  }\n\n  private getLiterals() {\n    this.getParams();\n\n    this.literals = {\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\n      ...poPageBlockedUserLiterals[this.reason][this.language]\n    };\n\n    this.changeDetector.detectChanges();\n  }\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\n\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\n\nexport const poPageBlockedUserButtonLiterals: Object = {\n  en: <any>{\n    primaryButton: 'Back to home screen'\n  },\n  es: <any>{\n    primaryButton: 'Volver al inicio'\n  },\n  pt: <any>{\n    primaryButton: 'Voltar para o início'\n  },\n  ru: <any>{\n    primaryButton: 'Перейти к началу страницы'\n  }\n};\n\n/**\n * @docsExtends PoPageBlockedUserBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-blocked-user-basic\" title=\"PO Page Blocked User Basic\">\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-labs\" title=\"PO Page Blocked User Labs\">\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"PO Page Blocked User Exceeded Attempts\">\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-expired-password\" title=\"PO Page Blocked User Expired Password\">\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-blocked-user',\n  templateUrl: './po-page-blocked-user.component.html'\n})\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\n  literals;\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, languageService: PoLanguageService) {\n    super();\n\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...poPageBlockedUserButtonLiterals[poLocaleDefault],\n      ...poPageBlockedUserButtonLiterals[language]\n    };\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\n    }\n  }\n}\n","<div class=\"po-page-blocked-user-wrapper\">\n  <div class=\"po-page-background-wrap\">\n    <po-page-background [p-hide-logo]=\"true\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\n      <po-page-blocked-user-reason [p-params]=\"params\" [p-reason]=\"reason\"> </po-page-blocked-user-reason>\n\n      <div class=\"po-page-blocked-user-mobile-bottom-alignment\">\n        <po-page-blocked-user-contacts [p-email]=\"contactEmail\" [p-phone]=\"contactPhone\">\n        </po-page-blocked-user-contacts>\n\n        <div class=\"po-row\">\n          <po-button\n            class=\"po-lg-12 po-sm-12 po-page-blocked-user-button\"\n            p-kind=\"primary\"\n            [p-label]=\"literals?.primaryButton\"\n            (p-click)=\"navigateTo(urlBack)\"\n          >\n          </po-button>\n        </div>\n      </div>\n    </po-page-background>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@po-ui/ng-components';\n\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\n\n/**\n * @description\n *\n * Módulo do template do po-page-blocked-user.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, PoModule, PoPageBackgroundModule],\n  declarations: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent],\n  exports: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent]\n})\nexport class PoPageBlockedUserModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { PoModalAction } from '@po-ui/ng-components';\n\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\n\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\n\n/**\n * @description\n *\n * O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.\n *\n * Apresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.\n *\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando\n * definir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o\n * desenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\n *\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@po-ui/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\n@Directive()\nexport abstract class PoPageChangePasswordBaseComponent {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaço se mantém preservado porém vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapé.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * Token para solicitação de troca/recuperação de senha.\n   *\n   * > Esta propriedade será ignorada caso exista um token como parâmetro na URL inicial do template.\n   */\n  @Input('p-token') token?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a ação de retorno da página.\n   *\n   * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for\n   * falsa.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') urlBack: string = '/';\n\n  /**\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o método `p-submit` será ignorado e o componente adquirirá\n   * automatização para o processo de cadastro/troca de senha.\n   *\n   * ### Processo\n   * Ao digitar um valor válido nos campos de senha e pressionar **salvar**,\n   * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\n   * usuário.\n   *\n   * ```\n   * body {\n   *  token?: token,\n   *  oldPassword?: oldPassword,\n   *  newPassword: newPassword\n   * }\n   * ```\n   *\n   * O código de resposta HTTP de status esperado é `204`.\n   *\n   * Em caso de **sucesso**, será exibida a modal de confirmação de senha alterada.\n   *\n   * > O token será informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,\n   * dispensa-se qualquer menção e/ou importação do componente `po-page-change-password` no restante da aplicação. O exemplo abaixo\n   * exemplifica a forma dinâmica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\n   * também como ele se comunica com o serviço para efetuação do processo de troca de senha do usuário e solicitação de nova senha.\n   * Basta definir nas configurações de rota:\n   *\n   *\n   * ```\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@po-ui/ng-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\n   *         serviceApi: 'https://po-ui.io/sample/api/new-password',\n   *         recovery: {\n   *           url: 'https://po-ui.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.po@po-ui.com',\n   *           phoneMask: '9-999-999-9999'\n   *         }\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de troca de senha. E `recovery` é a interface\n   * `PoPageChangePasswordRecovery` responsável pelas especificações contidas na modal de recuperação de senha.\n   *\n   * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-url-new-password') urlNewPassword?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Função executada ao submeter o form pelo botão salvar.\n   *\n   * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo\n   * método `openConfirmation`. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\n   *\n   * onSubmit() {\n   *  this.changePassword.openConfirmation();\n   * }\n   *\n   * ```\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.\n   */\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\n\n  confirmPassword: string;\n  currentPassword: string;\n  modalAction: PoModalAction;\n  newPassword: string;\n  recoveryUrlType: string;\n  showRequirements: boolean;\n\n  protected validatorChange: any;\n\n  private _hideCurrentPassword: boolean = false;\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\n  private _urlHome: string = '/';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo `Senha atual` para que o template seja para criação de senha.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\n    this._hideCurrentPassword = convertToBoolean(value);\n  }\n\n  get hideCurrentPassword(): boolean {\n    return this._hideCurrentPassword;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a ação do link `Esqueceu a senha`.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota válida;\n   * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-change-password>\n   *      [recovery]=\"this.myFunc.bind(this)\";\n   * </po-page-change-password>\n   * ```\n   *\n   * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,\n   *   **email** para contato e **máscara** do campo de telefone.\n   *\n   * > Caso não tenha valor o link `Esqueceu a senha` desaparece.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de regras para criação e alteração de senha.\n   */\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\n    this._requirements = value || [];\n    this.showRequirements = this._requirements.length > 0;\n  }\n  get requirements() {\n    return this._requirements;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método\n   * `openConfirmation`.\n   *\n   * @default `/`\n   */\n  @Input('p-url-home') set urlHome(value: string) {\n    this._urlHome = value;\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\n  }\n  get urlHome() {\n    return this._urlHome;\n  }\n\n  abstract navigateTo(url: string): void;\n}\n","export const poPageChangePasswordLiterals = {\n  en: <any>{\n    backButton: 'Back',\n    confirmPassword: 'Confirm password',\n    createNewPassword: 'Create new password',\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\n    currentPassword: 'Current password',\n    enterSystemButton: 'Enter the system',\n    forgotPassword: 'Forgot your password?',\n    newPassword: 'New password',\n    passwordSuccessfullyCreated: 'Password successfully created!',\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\n    requirements: 'Password requirements',\n    safetyTips: 'Safety tips!',\n    safetyTipsFirst: 'is used in other accounts;',\n    safetyTipsPhrase: 'Avoid a password that:',\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\n    saveButton: 'Save'\n  },\n  es: <any>{\n    backButton: 'Volver',\n    confirmPassword: 'Confirmar seña',\n    createNewPassword: 'Crear nueva contraseña',\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseña personal creada por usted',\n    currentPassword: 'Contraseña actual',\n    enterSystemButton: 'Entrar en el sistema',\n    forgotPassword: '¿Olvidaste tu contraseña?',\n    newPassword: 'Nueva contraseña',\n    passwordSuccessfullyCreated: 'Contraseña creada correctamente!',\n    passwordSuccessfullyUpdated: 'Contraseña correctamente actualizada!',\n    requirements: 'Requisitos de contraseña',\n    safetyTips: 'Consejos de seguridad!',\n    safetyTipsFirst: 'se utilice en otras cuentas;',\n    safetyTipsPhrase: 'Evite una contraseña que:',\n    safetyTipsSecond: 'utiliza información personal como su nombre, apellido o nombre de familia;',\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseña\";',\n    saveButton: 'Guardar'\n  },\n  pt: <any>{\n    backButton: 'Voltar',\n    confirmPassword: 'Confirmar senha',\n    createNewPassword: 'Criar nova senha',\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por você',\n    currentPassword: 'Senha atual',\n    enterSystemButton: 'Entrar no sistema',\n    forgotPassword: 'Esqueceu sua senha?',\n    newPassword: 'Nova senha',\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\n    requirements: 'Requisitos de senha',\n    safetyTips: 'Dicas de segurança!',\n    safetyTipsFirst: 'seja usada em outras contas;',\n    safetyTipsPhrase: 'Evite uma senha que:',\n    safetyTipsSecond: 'usa informações pessoais como seu nome, apelido ou nome de familiares;',\n    safetyTipsThird: 'use sequências muito óbvias como \"1234\" ou \"abcd\" ou palavras óbvias como “senha”;',\n    saveButton: 'Salvar'\n  },\n  ru: <any>{\n    backButton: 'возвращение',\n    confirmPassword: 'Подтвердите пароль',\n    createNewPassword: 'Создать новый пароль',\n    createNewPasswordPhrase: 'Защитите свой аккаунт с помощью личного пароля.',\n    currentPassword: 'Текущий пароль',\n    enterSystemButton: 'Вход в систему',\n    forgotPassword: 'Забыли пароль?',\n    newPassword: 'Новый пароль',\n    passwordSuccessfullyCreated: 'Пароль успешно создан!',\n    passwordSuccessfullyUpdated: 'Пароль успешно изменен!',\n    requirements: 'Требования к паролю',\n    safetyTips: 'Советы по безопасности!',\n    safetyTipsFirst: 'использоваться на других счетах;',\n    safetyTipsPhrase: 'Избегайте пароля, который:',\n    safetyTipsSecond: 'использует личную информацию, такую ​​как ваше имя, фамилию или фамилию;',\n    safetyTipsThird:\n      'используйте очень очевидные строки, такие как \"1234\" или \"abcd\", или такие очевидные слова, как \"пароль\";',\n    saveButton: 'экономить'\n  }\n};\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class PoPageChangePasswordService {\n  constructor(private http: HttpClient) {}\n\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(url, item, { observe: 'response' });\n  }\n}\n","<div class=\"po-page-change-password-wrapper\" #pageChangePassword>\n  <div class=\"po-page-change-password-container\">\n    <po-page-background class=\"po-page-change-password\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\n      <div class=\"po-page-blocked-user-header po-row\">\n        <div class=\"po-md-12\">{{ literals.createNewPassword }}</div>\n        <div class=\"po-md-12 po-text-center po-font-text\">\n          {{ literals.createNewPasswordPhrase }}\n        </div>\n      </div>\n\n      <form #passwordForm=\"ngForm\">\n        <div class=\"po-row po-mt-3 po-mt-sm-1\">\n          <div class=\"po-md-6\" [ngClass]=\"{ 'po-offset-md-3 po-offset-lg-3 po-offset-xl-3': !showRequirements }\">\n            <div *ngIf=\"!hideCurrentPassword\">\n              <po-password\n                name=\"currentPassword\"\n                [(ngModel)]=\"currentPassword\"\n                p-required\n                [p-label]=\"literals.currentPassword\"\n              >\n              </po-password>\n            </div>\n            <div *ngIf=\"!hideCurrentPassword && recovery\" class=\"po-text-center po-mb-sm-1 po-mb-2\">\n              <a\n                *ngIf=\"recoveryUrlType === 'internalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [routerLink]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"recoveryUrlType === 'externalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [href]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"!recoveryUrlType\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password po-clickable\"\n                (click)=\"onForgotPasswordClick(recovery)\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n            </div>\n            <div>\n              <po-password\n                name=\"newPassword\"\n                [(ngModel)]=\"newPassword\"\n                p-required\n                [p-label]=\"literals.newPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n            <div>\n              <po-password\n                name=\"confirmPassword\"\n                [(ngModel)]=\"confirmPassword\"\n                p-required\n                [p-label]=\"literals.confirmPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n          </div>\n          <div *ngIf=\"showRequirements\" class=\"po-md-6 po-page-change-password-required-container\">\n            <po-container>\n              <ul class=\"po-page-change-password-required-list\">\n                <li class=\"po-page-change-password-required-item\">\n                  <p class=\"po-mb-1 po-font-text-bold po-page-change-password-required-title\">\n                    {{ literals?.requirements }}\n                  </p>\n                </li>\n                <li *ngFor=\"let requirement of requirements\" class=\"po-page-change-password-required-item\">\n                  <span\n                    class=\"po-icon po-page-change-password-required-icon\"\n                    [ngClass]=\"\n                      validateRequirement(requirement)\n                        ? 'po-icon-ok po-page-change-password-required-ok'\n                        : 'po-icon-minus po-page-change-password-required-minus'\n                    \"\n                  >\n                  </span>\n                  <p class=\"po-page-change-password-required-text po-font-text\">\n                    {{ requirement.requirement }}\n                  </p>\n                </li>\n              </ul>\n            </po-container>\n          </div>\n        </div>\n      </form>\n\n      <po-divider class=\"po-sm-12\"></po-divider>\n\n      <div class=\"po-page-change-password-tips po-row\">\n        <div class=\"po-md-2 po-mr-3\">\n          <img\n            class=\"po-page-change-password-lock-image po-mb-3\"\n            alt=\"Blocked user image\"\n            src=\"./assets/images/big-lock.svg\"\n          />\n        </div>\n        <div class=\"po-md-9 po-page-change-password-tips-text\">\n          <div class=\"po-font-text-bold po-pb-1\">{{ literals.safetyTips }}</div>\n          <div class=\"po-font-text-small\">\n            <div class=\"po-row po-pb-1\">{{ literals.safetyTipsPhrase }}</div>\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsFirst }}</div>\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsSecond }}</div>\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsThird }}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"po-page-change-password-buttons po-row\">\n        <po-divider class=\"po-sm-12 po-mobile-only\"></po-divider>\n\n        <po-button\n          *ngIf=\"!hideCurrentPassword\"\n          class=\"po-sm-6 po-mb-sm-1\"\n          [p-label]=\"literals.backButton\"\n          (p-click)=\"navigateTo(urlBack)\"\n        >\n        </po-button>\n\n        <po-button\n          [ngClass]=\"hideCurrentPassword ? 'po-md-12' : 'po-sm-6'\"\n          p-kind=\"primary\"\n          [p-disabled]=\"passwordForm.invalid\"\n          [p-label]=\"literals.saveButton\"\n          (p-click)=\"onLoginSubmit()\"\n        >\n        </po-button>\n      </div>\n    </po-page-background>\n  </div>\n</div>\n\n<po-modal\n  [p-primary-action]=\"modalAction\"\n  p-hide-close\n  p-size=\"auto\"\n  [p-title]=\"hideCurrentPassword ? literals.passwordSuccessfullyCreated : literals.passwordSuccessfullyUpdated\"\n>\n  <div class=\"po-text-center\">\n    <img\n      alt=\"Blocked user image\"\n      class=\"po-page-change-password-lock-image po-mb-3\"\n      src=\"./assets/images/success.svg\"\n    />\n  </div>\n</po-modal>\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport {\n  PoComponentInjectorService,\n  PoLanguageService,\n  PoModalAction,\n  PoModalComponent,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport { isExternalLink, isTypeof } from '../../utils/util';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @docsExtends PoPageChangePasswordBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-change-password-basic\" title=\"PO Page Change Password Basic\">\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-labs\" title=\"PO Page Change Password Labs\">\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-modify\" title=\"PO Page Change Password Modify\">\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-create\" title=\"PO Page Change Password Create\">\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-request\" title=\"PO Page Change Password Request\">\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-change-password',\n  templateUrl: './po-page-change-password.component.html'\n})\nexport class PoPageChangePasswordComponent\n  extends PoPageChangePasswordBaseComponent\n  implements AfterViewInit, OnDestroy, OnInit {\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\n\n  literals: {\n    backButton: string;\n    confirmPassword: string;\n    createNewPassword: string;\n    createNewPasswordPhrase: string;\n    currentPassword: string;\n    enterSystemButton: string;\n    forgotPassword: string;\n    newPassword: string;\n    passwordSuccessfullyCreated: string;\n    passwordSuccessfullyUpdated: string;\n    requirements: string;\n    safetyTips: string;\n    safetyTipsPhrase: string;\n    safetyTipsFirst: string;\n    safetyTipsSecond: string;\n    safetyTipsThird: string;\n    saveButton: string;\n  } = poPageChangePasswordLiterals[poLocaleDefault];\n\n  modalAction: PoModalAction = {\n    action: this.navigateTo.bind(this, this.urlHome),\n    label: this.literals.enterSystemButton\n  };\n\n  private newPasswordSubscription: Subscription;\n  private componentRef: ComponentRef<any> = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: PoPageChangePasswordService,\n    private poComponentInjector: PoComponentInjectorService,\n    languageService: PoLanguageService,\n    viewRef: ViewContainerRef\n  ) {\n    super();\n\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...poPageChangePasswordLiterals[poLocaleDefault],\n      ...poPageChangePasswordLiterals[language]\n    };\n  }\n\n  ngAfterViewInit() {\n    if (this.urlNewPassword) {\n      this.subscribeToTokenParameter();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.newPasswordSubscription) {\n      this.newPasswordSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  onForgotPasswordClick(recovery): void {\n    if (isTypeof(recovery, 'function')) {\n      recovery();\n    } else {\n      this.createModalPasswordRecoveryComponent(recovery);\n    }\n  }\n\n  onLoginSubmit(): void {\n    const form = this.getLoginForm();\n\n    if (this.urlNewPassword) {\n      this.postUrlNewPassword(form);\n    } else if (this.submit && this.submit.observers.length) {\n      this.emitSubmit(form);\n    }\n  }\n\n  /**\n   * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `p-url-home`\u001c\n   */\n  openConfirmation() {\n    this.modal.open();\n  }\n\n  validatePassword() {\n    const controls = this.passwordForm.form.controls;\n    const controlConfirmPassword = controls['confirmPassword'];\n    const controlNewPassword = controls['newPassword'];\n\n    if (!this.newPassword) {\n      this.setFormErrors({ 'required': true }, [controlNewPassword]);\n    } else if (!this.confirmPassword) {\n      this.setFormErrors({ 'required': true }, [controlConfirmPassword]);\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\n      this.setFormErrors({ 'equalPassword': true }, [controlNewPassword, controlConfirmPassword]);\n    } else {\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\n    }\n\n    if (\n      this.requirements.length &&\n      this.requirements.find(requirement => this.validateRequirement(requirement) === false)\n    ) {\n      this.setFormErrors({ 'requirement': true }, [controlNewPassword]);\n    }\n  }\n\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\n    return typeof requirement.status === 'function' ? requirement.status(this.newPassword) : requirement.status;\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.hideCurrentPassword =\n        this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\n    }\n  }\n\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.recovery = recovery.url;\n    this.componentRef.instance.contactEmail = recovery.contactMail;\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private emitSubmit(form: PoPageChangePassword) {\n    this.submit.emit(form);\n  }\n\n  private getLoginForm(): PoPageChangePassword {\n    return {\n      currentPassword: this.currentPassword,\n      newPassword: this.newPassword\n    };\n  }\n\n  private postUrlNewPassword(form: PoPageChangePassword) {\n    form['token'] = this.token;\n\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\n      if (response.status === 204) {\n        this.openConfirmation();\n      }\n    });\n  }\n\n  private setFormErrors(error: any, controls?: Array<any>) {\n    controls.forEach(control => {\n      control.setErrors(error);\n    });\n  }\n\n  private subscribeToTokenParameter() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n\n      if (token) {\n        this.token = token;\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@po-ui/ng-components';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @description\n *\n * Módulo do template do po-page-change-password.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule, PoModule, PoPageBackgroundModule],\n  declarations: [PoPageChangePasswordComponent],\n  providers: [PoPageChangePasswordService],\n  exports: [PoPageChangePasswordComponent]\n})\nexport class PoPageChangePasswordModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { merge, Observable, of, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { PoLanguageService, PoNotificationService } from '@po-ui/ng-components';\n\nimport { PoPageDynamicLiterals } from './po-page-dynamic-literals.interface';\n\nexport const poPageDynamicLiterals: { [key: string]: PoPageDynamicLiterals } = {\n  en: {\n    errorRenderPage: 'Error loading page',\n    notPossibleLoadMetadataPage: 'The page metadata could not be loaded'\n  },\n  es: {\n    errorRenderPage: 'Error al cargar la página',\n    notPossibleLoadMetadataPage: 'No se pudieron cargar los metadatos de la página.'\n  },\n  pt: {\n    errorRenderPage: 'Erro ao carregar a página',\n    notPossibleLoadMetadataPage: 'Não foi possível carregar os metadados da página'\n  },\n  ru: {\n    errorRenderPage: 'Ошибка загрузки страницы',\n    notPossibleLoadMetadataPage: 'Не удалось загрузить метаданные страницы'\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicService {\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PO-SCREEN-LOCK': 'true'\n  });\n\n  private endpoint = '/';\n  private language: string;\n  private metadata: string;\n\n  constructor(\n    private http: HttpClient,\n    private notification: PoNotificationService,\n    languageService: PoLanguageService\n  ) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  configServiceApi(config: { endpoint?: string; metadata?: string } = {}) {\n    this.endpoint = config.endpoint;\n    this.metadata = config.metadata || this.metadata;\n  }\n\n  getMetadata<T>(type: string = 'list'): Observable<T> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\n\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get<T>(url).pipe(\n      map((response: any) => {\n        if (response.version !== undefined && response.version === cache.version) {\n          return cache;\n        }\n\n        localStorage.setItem(key, JSON.stringify(response));\n\n        return { ...cache, ...response };\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (Object.keys(cache).length) {\n          return of(cache);\n        }\n\n        const { errorRenderPage, notPossibleLoadMetadataPage } = poPageDynamicLiterals[this.language];\n\n        this.notification.warning(notPossibleLoadMetadataPage);\n\n        return merge(of({ title: errorRenderPage }), throwError(error));\n      })\n    );\n  }\n\n  // Deleta um único recurso\n  deleteResource(id?, endpoint?: string): Observable<any> {\n    const localEndPoint = this.getLocalEndPoint(endpoint, true);\n    const url = id ? `${localEndPoint}/${id}` : localEndPoint;\n    return this.http.delete(url, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>, endpoint?: string): Observable<any> {\n    return this.http.request('delete', `${this.getLocalEndPoint(endpoint)}`, { headers: this.headers, body: ids });\n  }\n\n  // Busca uma lista de recursos\n  getResources(params?: HttpParams, endpoint?: string): Observable<any> {\n    return this.http.get(this.getLocalEndPoint(endpoint), { headers: this.headers, params });\n  }\n\n  // Busca um único recurso\n  getResource(id, endpoint?: string): Observable<any> {\n    return this.http.get(`${this.getLocalEndPoint(endpoint, true)}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource, endpoint?: string): Observable<any> {\n    return this.http.post(`${this.getLocalEndPoint(endpoint)}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource, endpoint?: string): Observable<any> {\n    return this.http.put(`${this.getLocalEndPoint(endpoint, true)}/${id}`, resource, { headers: this.headers });\n  }\n\n  private getLocalEndPoint(endpoint?: string, checkSingleBar = false) {\n    endpoint = endpoint ?? this.endpoint;\n    if (checkSingleBar) {\n      endpoint = endpoint === '/' ? '' : endpoint;\n    }\n    return endpoint;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailBeforeBack } from './interfaces/po-page-dynamic-detail-before-back.interface';\nimport { PoPageDynamicDetailBeforeRemove } from './interfaces/po-page-dynamic-detail-before-remove.interface';\nimport { PoPageDynamicDetailBeforeEdit } from './interfaces/po-page-dynamic-detail-before-edit.interface';\n\ninterface ExecuteActionParameter {\n  action: string | Function;\n  resource?: any;\n  id?: string | number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicDetailActionsService {\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PO-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) {}\n\n  beforeBack(action?: PoPageDynamicDetailActions['beforeBack']): Observable<PoPageDynamicDetailBeforeBack> {\n    return this.executeAction({ action });\n  }\n\n  beforeEdit(\n    action: PoPageDynamicDetailActions['beforeEdit'],\n    id: any,\n    body: any\n  ): Observable<PoPageDynamicDetailBeforeEdit> {\n    const resource = body ?? {};\n\n    return this.executeAction({ action, resource, id });\n  }\n\n  beforeRemove(\n    action: PoPageDynamicDetailActions['beforeRemove'],\n    id: any,\n    body: any\n  ): Observable<PoPageDynamicDetailBeforeRemove> {\n    const resource = body ?? {};\n\n    return this.executeAction({ action, resource, id });\n  }\n\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\n    if (!action) {\n      return of(<T>{});\n    }\n\n    if (typeof action === 'string') {\n      const url = id ? `${action}/${id}` : action;\n\n      return this.http.post<T>(url, resource, { headers: this.headers });\n    }\n\n    return of(action(id, resource));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PoPageDynamicOptionsSchema, PoPageDynamicOptionsProp } from './po-page-dynamic-options.interface';\n\ntype urlOrFunction = string | Function;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageCustomizationService {\n  constructor(private http: HttpClient) {}\n\n  getCustomOptions<T>(\n    origin: urlOrFunction,\n    originalOption: T,\n    optionSchema: PoPageDynamicOptionsSchema<T>\n  ): Observable<T> {\n    return this.createObservable<T>(origin).pipe(\n      map(newPageOptions => this.mergePageOptions<T>(originalOption, newPageOptions, optionSchema))\n    );\n  }\n\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\n    Object.keys(newOptions).forEach(key => {\n      const value = newOptions[key];\n      if (key in objectToChange) {\n        if (Array.isArray(value)) {\n          objectToChange[key] = [...value];\n          return;\n        }\n        if (typeof value === 'number' || typeof value === 'string' || typeof value === 'boolean') {\n          objectToChange[key] = value;\n          return;\n        }\n        if (value !== null && typeof value === 'object') {\n          objectToChange[key] = { ...value };\n        }\n      }\n    });\n  }\n\n  private createObservable<T>(origin: urlOrFunction): Observable<T> {\n    if (typeof origin === 'string') {\n      return this.http.post<T>(origin, {});\n    }\n    return from(Promise.resolve(origin()));\n  }\n\n  private mergePageOptions<T>(originalOption: T, newPageOptions: T, optionSchema: PoPageDynamicOptionsSchema<T>) {\n    const mergePageOptions: T = optionSchema.schema.reduce(\n      (objWithNewProp, prop) => ({\n        ...objWithNewProp,\n        [prop.nameProp]: this.createNewProp(prop, originalOption, newPageOptions)\n      }),\n      {} as T\n    );\n\n    Object.keys(mergePageOptions).forEach(key => mergePageOptions[key] === undefined && delete mergePageOptions[key]);\n\n    return mergePageOptions;\n  }\n\n  private createNewProp<T>(prop: PoPageDynamicOptionsProp<T>, originalOption: T, newPageOptions: T) {\n    if (prop.merge) {\n      return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge);\n    } else {\n      return newPageOptions[prop.nameProp] ?? originalOption[prop.nameProp];\n    }\n  }\n\n  private mergeOptions<T>(originalOptions: Array<T> | T, newOptions: Array<T> | T, filterProp?: keyof T) {\n    if (!originalOptions && !newOptions) {\n      return;\n    }\n    if (!newOptions) {\n      return originalOptions;\n    }\n    if (!originalOptions) {\n      return newOptions;\n    }\n\n    if (originalOptions instanceof Array && newOptions instanceof Array) {\n      return this.mergeOptionsArray(originalOptions, newOptions, filterProp);\n    }\n\n    return { ...originalOptions, ...newOptions };\n  }\n\n  private mergeOptionsArray<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T) {\n    const deduplicateNewOptions = newOptions.filter(\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp])\n    );\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\n      const newItem =\n        newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\n      return { ...originalItem, ...newItem };\n    });\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\n  }\n}\n","<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <ng-container *ngIf=\"model; then viewFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\n</po-page-default>\n\n<ng-template #registerNotFoundTemplate>\n  <po-widget>\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.registerNotFound }}\n    </span>\n  </po-widget>\n</ng-template>\n\n<ng-template #viewFieldsTemplate>\n  <po-dynamic-view [p-fields]=\"fields\" [p-value]=\"model\"> </po-dynamic-view>\n</ng-template>\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription, concat, EMPTY, Observable, throwError, of } from 'rxjs';\nimport { tap, catchError, map, switchMap } from 'rxjs/operators';\n\nimport {\n  PoBreadcrumb,\n  PoDialogConfirmOptions,\n  PoDialogService,\n  PoLanguageService,\n  PoNotificationService,\n  PoPageAction,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport { convertToBoolean, mapObjectByProperties, valuesFromObject } from '../../utils/util';\n\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailField } from './interfaces/po-page-dynamic-detail-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicDetailActionsService } from './po-page-dynamic-detail-actions.service';\nimport { PoPageDynamicDetailOptions } from './interfaces/po-page-dynamic-detail-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicDetailMetaData } from './interfaces/po-page-dynamic-detail-metadata.interface';\nimport { PoPageDynamicDetailBeforeBack } from './interfaces/po-page-dynamic-detail-before-back.interface';\nimport { PoPageDynamicDetailBeforeRemove } from './interfaces/po-page-dynamic-detail-before-remove.interface';\nimport { PoPageDynamicDetailBeforeEdit } from './interfaces/po-page-dynamic-detail-before-edit.interface';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicDetailOptions);\n\nexport const poPageDynamicDetailLiteralsDefault = {\n  en: {\n    pageActionEdit: 'Edit',\n    pageActionRemove: 'Delete',\n    pageActionBack: 'Back',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    removeNotificationSuccess: 'Item deleted successfully.',\n    registerNotFound: 'Register not found.'\n  },\n  es: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Borrar',\n    pageActionBack: 'Regreso',\n    confirmRemoveTitle: 'Confirmar la exclusión',\n    confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',\n    removeNotificationSuccess: 'Elemento eliminado con éxito.',\n    registerNotFound: 'Registro no encontrado.'\n  },\n  pt: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Excluir',\n    pageActionBack: 'Voltar',\n    confirmRemoveTitle: 'Confirmar exclusão',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',\n    removeNotificationSuccess: 'Item excluído com sucesso.',\n    registerNotFound: 'Registro não encontrado.'\n  },\n  ru: {\n    pageActionEdit: 'Редактировать',\n    pageActionRemove: 'Удалить',\n    pageActionBack: 'Назад',\n    confirmRemoveTitle: 'Подтверждение удаления',\n    confirmRemoveMessage: 'Вы уверены, что хотите удалить эту запись?  Вы не можете отменить это действие.',\n    removeNotificationSuccess: 'Элемент успешно удален.',\n    registerNotFound: 'Запись не найдена.'\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,\n * o mesmo também suporta metadados conforme especificado na documentação.\n *\n *\n * ### Utilização via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-detail` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\n *\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\n * e depois irá buscar da rota definida na propriedade serviceLoadApi.\n *\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\n * se o cache não existe será disparado uma notificação.\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicDetailComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\n *   }\n * }\n * ```\n *\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\n * tipo do metadado esperado e a versão cacheada pelo browser.\n *\n * O formato esperado na resposta da requisição está especificado na interface\n * [PoPageDynamicDetailMetadata](/documentation/po-page-dynamic-detail#po-page-dynamic-detail-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Detail',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=detail&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-detail-user\" title=\"PO Page Dynamic Detail User\">\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-detail',\n  templateUrl: './po-page-dynamic-detail.component.html',\n  providers: [PoPageDynamicService, PoPageDynamicDetailActionsService]\n})\nexport class PoPageDynamicDetailComponent implements OnInit, OnDestroy {\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * Função ou serviço que será executado na inicialização do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n   * - `function`: Método que será executado.\n   *\n   * O retorno desta função deve ser do tipo `PoPageDynamicDetailOptions`,\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicDetailOptions {\n   * return {\n   *   actions:\n   *     { new: 'new', edit: 'edit/:id', remove: true },\n   *   fields: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicDetailOptions);\n\n  /** Título da página. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisição do recurso que serão exibido.\n   *\n   * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-detail\n   *    [p-actions]=\"{ remove: '/' }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-detail>\n   * ```\n   *\n   * Resquisição disparada, onde a propriedade `id` é igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\n   * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=detail&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  literals;\n  model: any = {};\n\n  private subscriptions: Array<Subscription> = [];\n\n  private _actions: PoPageDynamicDetailActions = {};\n  private _autoRouter: boolean = false;\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as ações da página de acordo com a interface `PoPageDynamicDetailActions`.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  get actions() {\n    return { ...this._actions };\n  }\n\n  /**\n   * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\n   * estejam definidas nas ações.\n   *\n   * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Lista dos campos exibidos na página. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this.fields);\n    this._duplicates = this.getDuplicatesByFields(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicDetailField> {\n    return this._fields;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService,\n    private poPageDynamicDetailActionsService: PoPageDynamicDetailActionsService,\n    private poPageCustomizationService: PoPageCustomizationService,\n    languageService: PoLanguageService\n  ) {\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...poPageDynamicDetailLiteralsDefault[poLocaleDefault],\n      ...poPageDynamicDetailLiteralsDefault[language]\n    };\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromAPI();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => {\n        subscription.unsubscribe();\n      });\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  private remove(\n    actionRemove: PoPageDynamicDetailActions['remove'],\n    actionBeforeRemove?: PoPageDynamicDetailActions['beforeRemove']\n  ) {\n    const uniqueKey = this.formatUniqueKey(this.model);\n\n    this.subscriptions.push(\n      this.poPageDynamicDetailActionsService\n        .beforeRemove(actionBeforeRemove, uniqueKey, { ...this.model })\n        .pipe(\n          switchMap((beforeRemoveResult: PoPageDynamicDetailBeforeRemove) => {\n            const newRemoveAction = beforeRemoveResult?.newUrl ?? actionRemove;\n            const allowAction = beforeRemoveResult?.allowAction ?? true;\n\n            if (!allowAction) {\n              return of({});\n            }\n\n            if (typeof newRemoveAction === 'string') {\n              return this.executeRemove(newRemoveAction, uniqueKey);\n            } else {\n              newRemoveAction(uniqueKey, { ...this.model });\n              return EMPTY;\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  private confirmRemove(\n    actionRemove: PoPageDynamicDetailActions['remove'],\n    actionBeforeRemove: PoPageDynamicDetailActions['beforeRemove']\n  ) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, actionRemove, actionBeforeRemove)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private executeRemove(path, uniqueKey: any) {\n    return this.poPageDynamicService.deleteResource(uniqueKey).pipe(\n      map(() => {\n        this.poNotification.success(this.literals.removeNotificationSuccess);\n        this.navigateTo({ path: path });\n      })\n    );\n  }\n\n  private formatUniqueKey(item) {\n    const keys = mapObjectByProperties(item, this.keys);\n\n    return valuesFromObject(keys).join('|');\n  }\n\n  private goBack(actionBack: PoPageDynamicDetailActions['back']) {\n    this.subscriptions.push(\n      this.poPageDynamicDetailActionsService\n        .beforeBack(this.actions.beforeBack)\n        .subscribe((beforeBackResult: PoPageDynamicDetailBeforeBack) =>\n          this.executeBackAction(actionBack, beforeBackResult?.allowAction, beforeBackResult?.newUrl)\n        )\n    );\n  }\n\n  private executeBackAction(actionBack: PoPageDynamicDetailActions['back'], allowAction?, newUrl?: string) {\n    const isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;\n\n    if (isAllowedAction) {\n      if (actionBack === undefined || typeof actionBack === 'boolean') {\n        return window.history.back();\n      }\n\n      if (typeof actionBack === 'string' || newUrl) {\n        return this.router.navigate([newUrl || actionBack]);\n      }\n\n      return actionBack();\n    }\n  }\n\n  private loadData(id) {\n    return this.poPageDynamicService.getResource(id).pipe(\n      tap(response => {\n        if (!response) {\n          this.setUndefinedToModelAndActions();\n        } else {\n          this.model = response;\n        }\n      }),\n      catchError(error => {\n        this.setUndefinedToModelAndActions();\n        return throwError(error);\n      })\n    );\n  }\n\n  private setUndefinedToModelAndActions() {\n    this.model = undefined;\n    this.actions = undefined;\n  }\n\n  private getMetadata(\n    serviceApiFromRoute: string,\n    onLoad: UrlOrPoCustomizationFunction\n  ): Observable<PoPageDynamicDetailMetaData> {\n    if (serviceApiFromRoute) {\n      return this.poPageDynamicService.getMetadata<PoPageDynamicDetailMetaData>('detail').pipe(\n        tap(response => {\n          this.autoRouter = response.autoRouter || this.autoRouter;\n          this.actions = response.actions || this.actions;\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\n          this.fields = response.fields || this.fields;\n          this.title = response.title || this.title;\n        }),\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\n      );\n    }\n\n    return this.loadOptionsOnInitialize(onLoad);\n  }\n\n  // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\n  private navigateTo(\n    route: { path: string; component?; url?: string; params?: any },\n    forceStopAutoRouter: boolean = false\n  ) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(() => {\n      if (forceStopAutoRouter || !this.autoRouter) {\n        return;\n      }\n\n      this.router.config.unshift(<Route>{\n        path: route.path,\n        component: route.component,\n        data: { serviceApi: this.serviceApi, autoRouter: true }\n      });\n\n      this.navigateTo(route, true);\n    });\n  }\n\n  private openEdit(action: PoPageDynamicDetailActions['edit']) {\n    const id = this.formatUniqueKey(this.model);\n\n    this.subscriptions.push(\n      this.poPageDynamicDetailActionsService\n        .beforeEdit(this.actions.beforeEdit, id, this.model)\n        .pipe(\n          switchMap((beforeEditResult: PoPageDynamicDetailBeforeEdit) =>\n            this.executeEditAction(action, beforeEditResult, id)\n          )\n        )\n        .subscribe()\n    );\n  }\n\n  private executeEditAction(\n    action: PoPageDynamicDetailActions['edit'],\n    beforeEditResult: PoPageDynamicDetailBeforeEdit,\n    id: any\n  ) {\n    const newEditAction = beforeEditResult?.newUrl ?? action;\n    const allowAction = beforeEditResult?.allowAction ?? true;\n\n    if (!allowAction) {\n      return of({});\n    }\n\n    if (typeof newEditAction === 'string') {\n      this.openEditUrl(newEditAction);\n    } else {\n      newEditAction(id, { ...this.model });\n    }\n\n    return EMPTY;\n  }\n\n  private openEditUrl(path: string) {\n    const url = this.resolveUrl(this.model, path);\n    this.navigateTo({ path, url });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\n    const pageActions = [];\n\n    if (actions.edit) {\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\n    }\n\n    if (actions.remove) {\n      pageActions.push({\n        label: this.literals.pageActionRemove,\n        action: this.confirmRemove.bind(this, actions.remove, this.actions.beforeRemove)\n      });\n    }\n\n    if (actions.back === undefined || actions.back) {\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\n    }\n\n    return pageActions;\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  private loadDataFromAPI() {\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\n    const { id } = this.activatedRoute.snapshot.params;\n\n    const onLoad = serviceLoadApi || this.onLoad;\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\n\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    const metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);\n    const data$ = this.loadData(id);\n\n    this.subscriptions.push(concat(metadata$, data$).subscribe());\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n    if (onLoad) {\n      return this.getPoDynamicPageOptions(onLoad).pipe(\n        tap(responsePoOption =>\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\n        )\n      );\n    }\n\n    return EMPTY;\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicDetailOptions> {\n    const originalOption: PoPageDynamicDetailOptions = {\n      fields: this.fields,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      title: this.title\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicDetailOptions> = {\n      schema: [\n        {\n          nameProp: 'fields',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageDynamicService } from './po-page-dynamic.service';\n/**\n * @description\n *\n * Módulo do serviço do po-page-dynamic-service.\n */\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  providers: [PoPageDynamicService]\n})\nexport class PoPageDynamicModule {}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@po-ui/ng-components';\n\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * Módulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoModalModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [PoPageDynamicDetailComponent],\n  exports: [PoPageDynamicDetailComponent]\n})\nexport class PoPageDynamicDetailModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\n\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\nimport { PoPageDynamicEditBeforeCancel } from './interfaces/po-page-dynamic-edit-before-cancel.interface';\nimport { PoPageDynamicEditBeforeSave } from './interfaces/po-page-dynamic-edit-before-save.interface';\nimport { PoPageDynamicEditBeforeSaveNew } from './interfaces/po-page-dynamic-edit-before-save-new.interface';\n\ninterface ExecuteActionParameter {\n  action: string | Function;\n  id?: string | number;\n  resource?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicEditActionsService {\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PO-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) {}\n\n  beforeCancel(action: PoPageDynamicEditActions['beforeCancel']): Observable<PoPageDynamicEditBeforeCancel> {\n    return this.executeAction({ action });\n  }\n\n  beforeSave(\n    action: PoPageDynamicEditActions['beforeSave'],\n    id: string,\n    body: any\n  ): Observable<PoPageDynamicEditBeforeSave> {\n    const resource = body ?? {};\n    return this.executeAction({ action, resource, id });\n  }\n\n  beforeSaveNew(\n    action: PoPageDynamicEditActions['beforeSaveNew'],\n    id: string,\n    body: any\n  ): Observable<PoPageDynamicEditBeforeSaveNew> {\n    const resource = body ?? {};\n    return this.executeAction({ action, resource, id });\n  }\n\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\n    if (!action) {\n      return of(<T>{});\n    }\n\n    if (typeof action === 'string') {\n      const url = id ? `${action}/${id}` : action;\n\n      return this.http.post<T>(url, resource, { headers: this.headers });\n    }\n\n    return of(action(resource, id));\n  }\n}\n","<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <ng-container *ngIf=\"model; then formFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\n</po-page-default>\n\n<ng-template #registerNotFoundTemplate>\n  <po-widget>\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.registerNotFound }}\n    </span>\n  </po-widget>\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <po-dynamic-form #dynamicForm [p-fields]=\"controlFields\" [p-value]=\"model\"> </po-dynamic-form>\n\n  <div *ngIf=\"detailFields.length > 0\" class=\"po-sm-12\">\n    <po-divider [p-label]=\"detailFields[0].divider\"></po-divider>\n\n    <div class=\"po-row po-mb-2\">\n      <po-button [p-label]=\"literals.detailActionNew\" (p-click)=\"detailActionNew()\"></po-button>\n    </div>\n\n    <po-grid\n      #gridDetail\n      [p-row-actions]=\"detailActions\"\n      [p-columns]=\"detailFields[0].detail.columns\"\n      [p-data]=\"model[detailFields[0].property]\"\n    >\n    </po-grid>\n  </div>\n</ng-template>\n","import { Component, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable, concat, of, Subscription, EMPTY, throwError } from 'rxjs';\nimport { tap, catchError, map, switchMap } from 'rxjs/operators';\n\nimport {\n  PoBreadcrumb,\n  PoDialogService,\n  PoDynamicFormComponent,\n  PoGridComponent,\n  PoGridRowActions,\n  PoLanguageService,\n  PoNotificationService,\n  PoPageAction,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport { convertToBoolean, mapObjectByProperties, valuesFromObject, removeKeysProperties } from './../../utils/util';\n\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicEditOptions } from './interfaces/po-page-dynamic-edit-options.interface';\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicEditMetadata } from './interfaces/po-page-dynamic-edit-metadata.interface';\nimport { PoPageDynamicOptionsSchema } from '../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicEditActionsService } from './po-page-dynamic-edit-actions.service';\nimport { PoPageDynamicEditBeforeCancel } from './interfaces/po-page-dynamic-edit-before-cancel.interface';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicEditOptions);\ntype SaveAction = PoPageDynamicEditActions['save'] | PoPageDynamicEditActions['saveNew'];\n\nexport const poPageDynamicEditLiteralsDefault = {\n  en: {\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\n    detailActionNew: 'New',\n    pageActionCancel: 'Cancel',\n    pageActionSave: 'Save',\n    pageActionSaveNew: 'Save and new',\n    registerNotFound: 'Register not found.',\n    saveNotificationSuccessSave: 'Resource successfully saved.',\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNotificationWarning: 'Form must be filled out correctly.'\n  },\n  es: {\n    cancelConfirmMessage: 'Está seguro de que desea cancelar esta operación?',\n    detailActionNew: 'Nuevo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Guardar',\n    pageActionSaveNew: 'Guardar y nuevo',\n    registerNotFound: 'Registro no encontrado.',\n    saveNotificationSuccessSave: 'Recurso salvo con éxito.',\n    saveNotificationSuccessUpdate: 'Recurso actualizado con éxito.',\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.'\n  },\n  pt: {\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operação?',\n    detailActionNew: 'Novo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Salvar',\n    pageActionSaveNew: 'Salvar e novo',\n    registerNotFound: 'Registro não encontrado.',\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNotificationWarning: 'Formulário precisa ser preenchido corretamente.'\n  },\n  ru: {\n    cancelConfirmMessage: 'Вы уверены, что хотите отменить эту операцию?',\n    detailActionNew: 'Новый',\n    pageActionCancel: 'Отменить',\n    pageActionSave: 'Сохранить',\n    pageActionSaveNew: 'Сохранить и создать',\n    registerNotFound: 'Запись не найдена.',\n    saveNotificationSuccessSave: 'Ресурс успешно сохранен.',\n    saveNotificationSuccessUpdate: 'Ресурс успешно обновлен.',\n    saveNotificationWarning: 'Форма должна быть заполнена правильно.'\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,\n * o mesmo também suporta metadados conforme especificado na documentação.\n *\n * ### Utilização via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\n *\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\n * e depois irá buscar da rota definida na propriedade serviceLoadApi\n *\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\n * se o cache não existe será disparado uma notificação.\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post\n *   }\n * }\n *\n * ```\n *\n * Para carregar com um recurso já existente, deve-se ser incluído um parâmetro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\n *   }\n * }\n * ```\n *\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\n * tipo do metadado esperado e a versão cacheada pelo browser.\n *\n * O formato esperado na resposta da requisição está especificado na interface\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person edit',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=edit&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-edit-basic\" title=\"PO Page Dynamic Edit Basic\">\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-user\" title=\"PO Page Dynamic Edit - User\">\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-edit',\n  templateUrl: './po-page-dynamic-edit.component.html',\n  providers: [PoPageDynamicService]\n})\nexport class PoPageDynamicEditComponent implements OnInit, OnDestroy {\n  @ViewChild('dynamicForm') dynamicForm: PoDynamicFormComponent;\n  @ViewChild('gridDetail') gridDetail: PoGridComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisição do recurso que será exibido para edição.\n   *\n   * Para as ações de `save` e `saveNew`, será feito uma requisição de criação nesse mesmo endpoint passando os valores\n   * preenchidos pelo usuário via payload.\n   *\n   * > `POST {end-point}`\n   *\n   * ```\n   *  <po-page-dynamic-edit\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-edit>\n   * ```\n   *\n   * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso já existente, deve-se ser incluído um parametro na rota chamado `id`.\n   *\n   * Exemplo de configuração de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: PersonEditComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicialização do template, será disparado uma requisição para buscar o recurso que será editado.\n   *\n   * > `GET {end-point}/{id}`\n   *\n   * Nos métodos de `save` e `saveNew`, ao invés de um `POST`, será disparado um `PUT`.\n   *\n   * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url é 2:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** Título da página. */\n  @Input('p-title') title: string;\n\n  /**\n   * Função ou serviço que será executado na inicialização do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n   * - `function`: Método que será executado.\n   *\n   * O retorno desta função deve ser do tipo `PoPageDynamicEditOptions`,\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicEditOptions {\n   * return {\n   *   actions:\n   *     { cancel: false, save: 'save/:id', saveNew: 'saveNew' },\n   *   fields: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicEditOptions);\n\n  literals;\n  model: any = {};\n\n  // beforeSave: return boolean\n  // afterSave\n  // beforeRemove: return boolean\n  // afterRemove\n  // beforeInsert: : return boolean\n  readonly detailActions: PoGridRowActions = {};\n\n  private subscriptions: Array<Subscription> = [];\n  private _actions: PoPageDynamicEditActions = {};\n  private _autoRouter: boolean = false;\n  private _controlFields: Array<any> = [];\n  private _detailFields: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ações da página.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  get actions() {\n    return { ...this._actions };\n  }\n\n  /**\n   * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\n   * estejam definidas nas ações.\n   *\n   * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Lista dos campos usados na tabela e busca avançada. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this._fields);\n    this._duplicates = this.getDuplicatesByFields(this._fields);\n\n    this._controlFields = this.getControlFields(this._fields);\n    this._detailFields = this.getDetailFields(this._fields);\n  }\n\n  get fields(): Array<PoPageDynamicEditField> {\n    return this._fields;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService,\n    private poPageCustomizationService: PoPageCustomizationService,\n    private poPageDynamicEditActionsService: PoPageDynamicEditActionsService,\n    languageService: PoLanguageService\n  ) {\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...poPageDynamicEditLiteralsDefault[poLocaleDefault],\n      ...poPageDynamicEditLiteralsDefault[language]\n    };\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromAPI();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => {\n        subscription.unsubscribe();\n      });\n    }\n  }\n\n  detailActionNew() {\n    this.gridDetail.insertRow();\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get controlFields() {\n    return this._controlFields;\n  }\n\n  get detailFields() {\n    return this._detailFields;\n  }\n\n  private loadDataFromAPI() {\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\n    const { id } = this.activatedRoute.snapshot.params;\n    const { duplicate } = this.activatedRoute.snapshot.queryParams;\n\n    const onLoad = serviceLoadApi || this.onLoad;\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\n\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    const metadata$ = this.getMetadata(serviceApiFromRoute, id, onLoad);\n    const data$ = this.loadData(id, duplicate);\n\n    this.subscriptions.push(concat(metadata$, data$).subscribe());\n  }\n\n  private cancel(\n    actionCancel: PoPageDynamicEditActions['cancel'],\n    actionBeforeCancel: PoPageDynamicEditActions['beforeCancel']\n  ) {\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\n      this.poDialogService.confirm({\n        message: this.literals.cancelConfirmMessage,\n        title: this.literals.pageActionCancel,\n        confirm: this.goBack.bind(this, actionCancel, actionBeforeCancel)\n      });\n    } else {\n      this.goBack(actionCancel, actionBeforeCancel);\n    }\n  }\n\n  private formatUniqueKey(item) {\n    const keys = mapObjectByProperties(item, this.keys);\n\n    return valuesFromObject(keys).join('|');\n  }\n\n  private goBack(\n    actionCancel: PoPageDynamicEditActions['cancel'],\n    actionBeforeCancel: PoPageDynamicEditActions['beforeCancel']\n  ) {\n    this.subscriptions.push(\n      this.poPageDynamicEditActionsService\n        .beforeCancel(actionBeforeCancel)\n        .subscribe((beforeCancelResult: PoPageDynamicEditBeforeCancel) => {\n          this.executeBackAction(actionCancel, beforeCancelResult?.allowAction, beforeCancelResult?.newUrl);\n        })\n    );\n  }\n\n  private executeBackAction(\n    actionCancel: PoPageDynamicEditActions['cancel'],\n    allowAction?: PoPageDynamicEditBeforeCancel['allowAction'],\n    newUrl?: PoPageDynamicEditBeforeCancel['newUrl']\n  ) {\n    const isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;\n\n    if (isAllowedAction) {\n      if (actionCancel === undefined || typeof actionCancel === 'boolean') {\n        return window.history.back();\n      }\n\n      if (typeof actionCancel === 'string' || newUrl) {\n        return this.router.navigate([newUrl || actionCancel]);\n      }\n\n      return actionCancel();\n    }\n  }\n\n  private loadData(id, duplicate?) {\n    if (!id) {\n      try {\n        this.model = duplicate ? JSON.parse(duplicate) : {};\n      } catch {\n        this.model = {};\n      }\n\n      return EMPTY;\n    }\n\n    return this.poPageDynamicService.getResource(id).pipe(\n      tap(response => (this.model = response)),\n      catchError(error => {\n        this.model = undefined;\n        this.actions = undefined;\n        this._pageActions = [];\n        return throwError(error);\n      })\n    );\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n    if (onLoad) {\n      return this.getPoDynamicPageOptions(onLoad).pipe(\n        tap(responsePoOption =>\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\n        )\n      );\n    }\n\n    return EMPTY;\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicEditOptions> {\n    const originalOption: PoPageDynamicEditOptions = {\n      fields: this.fields,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      title: this.title\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicEditOptions> = {\n      schema: [\n        {\n          nameProp: 'fields',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n\n  private getMetadata(serviceApiFromRoute: string, paramId: string | number, onLoad: UrlOrPoCustomizationFunction) {\n    const typeMetadata = paramId ? 'edit' : 'create';\n\n    if (serviceApiFromRoute) {\n      return this.poPageDynamicService.getMetadata<PoPageDynamicEditMetadata>(typeMetadata).pipe(\n        tap(response => {\n          this.autoRouter = response.autoRouter || this.autoRouter;\n          this.actions = response.actions || this.actions;\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\n          this.fields = response.fields || this.fields;\n          this.title = response.title || this.title;\n        }),\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\n      );\n    }\n\n    return this.loadOptionsOnInitialize(onLoad);\n  }\n\n  private navigateTo(path: string) {\n    if (path) {\n      const url = this.resolveUrl(this.model, path);\n\n      this.router.navigate([url]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private resolveUniqueKey(item: any) {\n    return this.activatedRoute.snapshot.params['id'] ? this.formatUniqueKey(item) : undefined;\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private executeSave(saveRedirectPath: string) {\n    const saveOperation$ = this.saveOperation();\n\n    return saveOperation$.pipe(\n      tap(message => {\n        this.poNotification.success(message);\n        this.navigateTo(saveRedirectPath);\n      })\n    );\n  }\n\n  private updateModel(newResource: any = {}) {\n    const dynamicNgForm = this.dynamicForm.form;\n\n    removeKeysProperties(this.keys, newResource);\n\n    this.model = { ...this.model, ...newResource };\n\n    dynamicNgForm.form.patchValue(this.model);\n  }\n\n  private saveOperation() {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNotificationWarning);\n      return EMPTY;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n    const successMsg = paramId\n      ? this.literals.saveNotificationSuccessUpdate\n      : this.literals.saveNotificationSuccessSave;\n\n    const saveOperation$ = paramId\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\n      : this.poPageDynamicService.createResource(this.model);\n\n    return saveOperation$.pipe(map(() => successMsg));\n  }\n\n  private save(action: SaveAction, before: 'beforeSave' | 'beforeSaveNew' = 'beforeSave') {\n    const executeOperation = {\n      beforeSave: this.executeSave.bind(this),\n      beforeSaveNew: this.executeSaveNew.bind(this)\n    };\n\n    const uniqueKey = this.resolveUniqueKey(this.model);\n\n    this.subscriptions.push(\n      this.poPageDynamicEditActionsService[before](this.actions[before], uniqueKey, { ...this.model })\n        .pipe(\n          switchMap(returnBefore => {\n            const newAction = returnBefore?.newUrl ?? action;\n            const allowAction = returnBefore?.allowAction ?? true;\n\n            this.updateModel(returnBefore?.resource);\n\n            if (!allowAction) {\n              return of({});\n            }\n\n            if (typeof newAction === 'string') {\n              return executeOperation[before](newAction);\n            } else {\n              newAction({ ...this.model }, uniqueKey);\n              return EMPTY;\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  private executeSaveNew(path: string) {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n    const saveOperation$ = this.saveOperation();\n\n    return saveOperation$.pipe(\n      tap(message => {\n        if (paramId) {\n          this.poNotification.success(message);\n\n          this.navigateTo(path);\n        } else {\n          this.poNotification.success(message);\n\n          this.model = {};\n          this.dynamicForm.form.reset();\n        }\n      })\n    );\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getControlFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type !== 'detail');\n  }\n\n  private getDetailFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type === 'detail');\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\n\n    if (actions.saveNew) {\n      pageActions.push({\n        label: this.literals.pageActionSaveNew,\n        action: this.save.bind(this, actions.saveNew, 'beforeSaveNew')\n      });\n    }\n\n    if (actions.cancel === undefined || actions.cancel) {\n      pageActions.push({\n        label: this.literals.pageActionCancel,\n        action: this.cancel.bind(this, actions.cancel, this.actions.beforeCancel)\n      });\n    }\n\n    return pageActions;\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  PoButtonModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoGridModule,\n  PoPageModule,\n  PoWidgetModule\n} from '@po-ui/ng-components';\n\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * Módulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoButtonModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoGridModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [PoPageDynamicEditComponent],\n  exports: [PoPageDynamicEditComponent]\n})\nexport class PoPageDynamicEditModule {}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationService } from './po-page-customization.service';\n\n/**\n * @description\n *\n * Módulo do serviço do po-page-customization-service.\n */\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  providers: [PoPageCustomizationService]\n})\nexport class PoPageCustomizationModule {}\n","import { EventEmitter, Input, Output, ViewChild, Directive } from '@angular/core';\n\nimport {\n  InputBoolean,\n  PoDynamicFormField,\n  PoLanguageService,\n  PoModalAction,\n  PoModalComponent,\n  poLocaleDefault,\n  PoComboOption\n} from '@po-ui/ng-components';\n\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\nimport { PoPageDynamicSearchFilters } from '../po-page-dynamic-search-filters.interface';\n\nexport const poAdvancedFiltersLiteralsDefault = {\n  en: <PoAdvancedFilterLiterals>{\n    title: 'Advanced search',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Apply filters'\n  },\n  es: <PoAdvancedFilterLiterals>{\n    title: 'Búsqueda avanzada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  pt: <PoAdvancedFilterLiterals>{\n    title: 'Busca avançada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  ru: <PoAdvancedFilterLiterals>{\n    title: 'Расширенный поиск',\n    cancelLabel: 'отменить',\n    confirmLabel: 'Применить фильтры'\n  }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Filtro de busca avançada criado a partir de um formulário dinâmico.\n * Componente de uso interno.\n */\n@Directive()\nexport class PoAdvancedFilterBaseComponent {\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  /**\n   * Mantém na modal de busca avançada os valores preenchidos do último filtro realizado pelo usuário.\n   */\n  @InputBoolean()\n  @Input('p-keep-filters')\n  keepFilters: boolean = false;\n\n  /** Função que será disparada e receberá os valores do formulário ao ser clicado no botão buscar. */\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\n\n  filter = {};\n  language: string = poLocaleDefault;\n\n  primaryAction: PoModalAction = {\n    action: () => {\n      const models = this.getValuesFromForm();\n\n      this.searchEvent.emit(models);\n      this.poModal.close();\n    },\n    label: this.literals.confirmLabel\n  };\n\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.poModal.close();\n    },\n    label: this.literals.cancelLabel\n  };\n\n  protected optionsServiceChosenOptions: Array<PoComboOption> = [];\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoAdvancedFilterLiterals;\n\n  /**\n   * Coleção de objetos que implementam a interface PoPageDynamicSearchFilters, para definição dos campos que serão criados\n   * dinamicamente.\n   */\n  @Input('p-filters') set filters(filters: Array<PoPageDynamicSearchFilters>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters(): Array<PoPageDynamicSearchFilters> {\n    return this._filters;\n  }\n\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\n        ...poAdvancedFiltersLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\n    }\n\n    this.primaryAction.label = this.literals.confirmLabel;\n    this.secondaryAction.label = this.literals.cancelLabel;\n  }\n\n  get literals() {\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\n  }\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  // Retorna os models dos campos preenchidos\n  private getValuesFromForm() {\n    let optionServiceOptions: Array<PoComboOption>;\n\n    Object.keys(this.filter).forEach(property => {\n      if (this.filter[property] === undefined || this.filter[property] === '') {\n        delete this.filter[property];\n      }\n    });\n\n    if (this.optionsServiceChosenOptions.length) {\n      optionServiceOptions = this.optionsServiceChosenOptions.filter((optionItem: PoComboOption) =>\n        Object.values(this.filter).includes(optionItem.value)\n      );\n    }\n\n    return { filter: this.filter, optionsService: optionServiceOptions };\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PoComboOption, PoDynamicFormComponent, PoLanguageService } from '@po-ui/ng-components';\n\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\nimport { PoPageDynamicSearchFilters } from '../po-page-dynamic-search-filters.interface';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoAdvancedFilterBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-advanced-filter\" title=\"PO Busca Avançada\">\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-advanced-filter',\n  templateUrl: './po-advanced-filter.component.html'\n})\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent implements OnDestroy, OnInit {\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\n\n  private subscription = new Subscription();\n\n  constructor(languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n  ngOnInit() {\n    this.optionsServiceSubscribe();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  open() {\n    this.filter = this.keepFilters ? this.getInitialValuesFromFilter(this.filters) : {};\n\n    this.poModal.open();\n  }\n\n  private getOptionsServiceItem(optionServiceObject: PoComboOption) {\n    const objectItem = this.optionsServiceChosenOptions.map(option => option.value).indexOf(optionServiceObject.value);\n\n    if (objectItem === -1) {\n      this.optionsServiceChosenOptions = [...this.optionsServiceChosenOptions, optionServiceObject];\n    }\n  }\n\n  private getInitialValuesFromFilter(filters: Array<PoPageDynamicSearchFilters>) {\n    return filters.reduce((result, item) => Object.assign(result, { [item.property]: item.initValue }), {});\n  }\n\n  // Se inscreve para receber valores referentes a campos do tipo combo.\n  private optionsServiceSubscribe() {\n    this.subscription.add(\n      this.poDynamicForm.getObjectValue().subscribe(optionServiceObject => {\n        if (optionServiceObject) {\n          this.getOptionsServiceItem(optionServiceObject);\n        }\n      })\n    );\n  }\n}\n","<po-modal\n  p-hide-close\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"literals.title\"\n>\n  <po-dynamic-form [p-fields]=\"filters\" [p-value]=\"filter\"> </po-dynamic-form>\n</po-modal>\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport {\n  InputBoolean,\n  PoBreadcrumb,\n  PoDynamicFormField,\n  PoLanguageService,\n  PoPageAction,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport { convertToInt } from '../../utils/util';\n\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\nimport { PoPageDynamicSearchFilters } from './po-page-dynamic-search-filters.interface';\n\nexport const poPageDynamicSearchLiteralsDefault = {\n  en: <PoPageDynamicSearchLiterals>{\n    disclaimerGroupTitle: 'Displaying results filtered by:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\n    quickSearchLabel: 'Quick search:',\n    searchPlaceholder: 'Search'\n  },\n  es: <PoPageDynamicSearchLiterals>{\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\n    quickSearchLabel: 'Búsqueda rápida:',\n    searchPlaceholder: 'Buscar'\n  },\n  pt: <PoPageDynamicSearchLiterals>{\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\n    quickSearchLabel: 'Pesquisa rápida:',\n    searchPlaceholder: 'Pesquisar'\n  },\n  ru: <PoPageDynamicSearchLiterals>{\n    disclaimerGroupTitle: 'Отображение результатов, отфильтрованных по:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\n    quickSearchLabel: 'Быстрый поиск:',\n    searchPlaceholder: 'исследование'\n  }\n};\n\n/**\n * @description\n *\n * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\n * e exiba as informações.\n */\n@Directive()\nexport abstract class PoPageDynamicSearchBaseComponent {\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mantém na busca avançada os valores preenchidos do último filtro realizado pelo usuário.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-keep-filters')\n  keepFilters: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\n   *\n   * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\n   * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\n   * rápida também na lista de `disclaimers`.\n   *\n   * > Os valores que são emitidos no `p-quick-search` e no `p-advanced-search`\n   * permanecem separados durante a emissão dos valores alterados. A concatenação\n   * é apenas nos `disclaimers`.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-concat-filters')\n  concatFilters: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botão para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-hide-remove-all-disclaimer')\n  hideRemoveAllDisclaimer?: boolean = false;\n\n  /**\n   * Função ou serviço que será executado na inicialização do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n   * - `function`: Método que será executado.\n   *\n   * O retorno desta função deve ser do tipo `PoPageDynamicSearchOptions`,\n   * onde o usuário poderá customizar novos filtros, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicSearchOptions {\n   * return {\n   *   actions: [\n   *     { label: 'Find on Google' },\n   *   ],\n   *   filters: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicSearchOptions);\n\n  /** Título da página. */\n  @Input('p-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.\n   *\n   * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.\n   */\n  @Output('p-advanced-search') advancedSearch: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao remover um ou todos os disclaimers pelo usuário.\n   */\n  @Output('p-change-disclaimers') changeDisclaimers: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.\n   */\n  @Output('p-quick-search') quickSearch: EventEmitter<string> = new EventEmitter();\n\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _hideCloseDisclaimers: Array<string> = [];\n  private _literals: PoPageDynamicSearchLiterals;\n  private _quickSearchWidth: number;\n\n  private previousFilters: Array<PoDynamicFormField>;\n  private language: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\n   *    filterTitle: 'Filtro avançado',\n   *    filterCancelLabel: 'Fechar',\n   *    filterConfirmLabel: 'Aplicar',\n   *    quickSearchLabel: 'Valor pesquisado:',\n   *    searchPlaceholder: 'Pesquise aqui'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    filterTitle: 'Filtro avançado'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-dynamic-search\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-dynamic-search>\n   * ```\n   *\n   * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\n        ...poPageDynamicSearchLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\n    }\n\n    this.setAdvancedFilterLiterals(this.literals);\n  }\n\n  get literals() {\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.\n   */\n  @Input('p-filters') set filters(filters: Array<PoPageDynamicSearchFilters>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n\n    if (this.stringify(this._filters) !== this.stringify(this.previousFilters)) {\n      this.onChangeFilters(this.filters);\n\n      this.previousFilters = [...this._filters];\n    }\n  }\n\n  get filters(): Array<PoPageDynamicSearchFilters> {\n    return this._filters;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Largura do campo de busca, utilizando o *Grid System*,\n   * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\n   * conforme resolução de tela para manter a consistência do layout.\n   */\n  @Input('p-quick-search-width') set quickSearchWidth(value: number) {\n    this._quickSearchWidth = convertToInt(value);\n  }\n\n  get quickSearchWidth(): number {\n    return this._quickSearchWidth;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de filtros que terão a opção de fechar ocultada\n   * em seu respectivo disclaimer. Utilizar o atributo `property` do filtro.\n   *\n   * Exemplo de utilização:\n   * ```\n   * ['city','name'];\n   * ```\n   */\n  @Input('p-hide-close-disclaimers') set hideCloseDisclaimers(value: Array<string>) {\n    this._hideCloseDisclaimers = Array.isArray(value) ? value : [];\n  }\n\n  get hideCloseDisclaimers(): Array<string> {\n    return this._hideCloseDisclaimers;\n  }\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\n    this.advancedFilterLiterals = {\n      cancelLabel: literals.filterCancelLabel,\n      confirmLabel: literals.filterConfirmLabel,\n      title: literals.filterTitle\n    };\n  }\n\n  private stringify(columns: Array<PoPageDynamicSearchFilters>) {\n    // não faz o stringify da propriedade searchService, pois pode conter objeto complexo e disparar um erro.\n    return JSON.stringify(columns, (key, value) => {\n      if (key !== 'searchService') {\n        return value;\n      }\n    });\n  }\n\n  abstract onChangeFilters(filters: Array<PoPageDynamicSearchFilters>);\n}\n","import { Component, ViewChild, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  PoDisclaimerGroup,\n  PoDynamicFieldType,\n  PoDynamicFormField,\n  PoLanguageService,\n  PoPageFilter,\n  PoDisclaimerGroupRemoveAction,\n  PoComboOption\n} from '@po-ui/ng-components';\n\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\nimport { PoPageDynamicOptionsSchema } from '../../services';\nimport { PoPageDynamicSearchFilters } from './po-page-dynamic-search-filters.interface';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicSearchOptions);\n\n/**\n * @docsExtends PoPageDynamicSearchBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-dynamic-search-basic\" title=\"PO Page Dynamic Search Basic\">\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"PO Page Dynamic Search - Hiring processes\">\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-search',\n  templateUrl: './po-page-dynamic-search.component.html'\n})\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\n\n  private loadSubscription: Subscription;\n\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\n    remove: this.onRemoveDisclaimer.bind(this),\n    removeAll: this.onRemoveAllDisclaimers.bind(this),\n    disclaimers: [],\n    title: this.literals.disclaimerGroupTitle,\n    hideRemoveAll: this.hideRemoveAllDisclaimer\n  };\n\n  private readonly _filterSettings: PoPageFilter = {\n    action: this.onAction.bind(this),\n    advancedAction: this.onAdvancedAction.bind(this),\n    placeholder: this.literals.searchPlaceholder,\n    width: this.quickSearchWidth\n  };\n\n  constructor(\n    languageService: PoLanguageService,\n    private poPageCustomizationService: PoPageCustomizationService,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    super(languageService);\n  }\n\n  get disclaimerGroup() {\n    return Object.assign({}, this._disclaimerGroup, {\n      title: this.literals.disclaimerGroupTitle,\n      hideRemoveAll: this.hideRemoveAllDisclaimer\n    });\n  }\n\n  get filterSettings() {\n    const thereAreValidFilters =\n      this.filters.length > 0 && this.filters.some(filter => filter.visible === true || filter.visible === undefined);\n    this._filterSettings.advancedAction = thereAreValidFilters ? this.onAdvancedAction.bind(this) : undefined;\n\n    return Object.assign({}, this._filterSettings, {\n      placeholder: this.literals.searchPlaceholder,\n      width: this.quickSearchWidth\n    });\n  }\n\n  ngOnInit() {\n    this.setAdvancedFilterLiterals(this.literals);\n    if (this.onLoad) {\n      this.loadOptionsOnInitialize(this.onLoad);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.loadSubscription) {\n      this.loadSubscription.unsubscribe();\n    }\n  }\n\n  onChangeFilters(filters: Array<PoPageDynamicSearchFilters>) {\n    const filterObjectWithValue = filters\n      .filter(filter => filter.initValue)\n      .reduce((prev, current) => ({ ...prev, ...{ [current.property]: current.initValue } }), {});\n\n    if (Object.keys(filterObjectWithValue).length) {\n      this.onAdvancedSearch({ filter: filterObjectWithValue });\n    }\n  }\n\n  onAction(quickFilter: string) {\n    const disclaimerQuickSearchUpdated = {\n      property: 'search',\n      label: `${this.literals.quickSearchLabel} ${quickFilter}`,\n      value: quickFilter,\n      hideClose: this.hideCloseDisclaimers.some(hideCloseDisclaimer => hideCloseDisclaimer === 'search') || false\n    };\n\n    const getDisclaimersWithConcatFilters = () => [\n      ...this.getDisclaimersWithoutQuickSearch(),\n      disclaimerQuickSearchUpdated\n    ];\n\n    this._disclaimerGroup.disclaimers = this.concatFilters\n      ? getDisclaimersWithConcatFilters()\n      : [disclaimerQuickSearchUpdated];\n\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\n      this.quickSearch.emit(quickFilter);\n    }\n\n    if (this.keepFilters && !this.concatFilters) {\n      this.filters.forEach(element => delete element.initValue);\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  onAdvancedAction() {\n    this.poAdvancedFilter.open();\n  }\n\n  onAdvancedSearch(filteredItems) {\n    const { filter, optionsService } = filteredItems;\n\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filter, optionsService);\n\n    this.setFilters(filter);\n\n    this.advancedSearch.emit(filter);\n  }\n\n  private getDisclaimersWithoutQuickSearch() {\n    const quickSearchProperty = 'search';\n    return this._disclaimerGroup.disclaimers.filter(item => item.property !== quickSearchProperty);\n  }\n\n  private setFilters(filters) {\n    const formattedFilters = this.convertToFilters(filters);\n\n    this.filters.forEach(element => {\n      const compatibleObject = formattedFilters.find(item => item.property === element.property);\n\n      if (compatibleObject) {\n        element.initValue = compatibleObject.value;\n      } else {\n        delete element.initValue;\n      }\n    });\n  }\n\n  private convertToFilters(filters) {\n    return Object.entries(filters).map(([property, value]) => ({ property, value }));\n  }\n\n  private optionsServiceDisclaimerLabel(value: any, optionsServiceObjectsList: Array<PoComboOption>) {\n    const optionServiceMatch = optionsServiceObjectsList.find(option => option.value === value);\n\n    return optionServiceMatch.label || optionServiceMatch.value;\n  }\n\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\n    const values = Array.isArray(filterValue) ? filterValue : [filterValue];\n\n    const labels = values.map(value => {\n      const filteredField = field.options.find(option => option.value === value || option === value);\n\n      if (filteredField) {\n        return filteredField.label || filteredField.value || filteredField;\n      }\n    });\n\n    return labels.join(', ');\n  }\n\n  private formatDate(date: string) {\n    const year = parseInt(date.substr(0, 4), 10);\n    const month = parseInt(date.substr(5, 2), 10);\n    const day = parseInt(date.substr(8, 2), 10);\n\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\n  }\n\n  private formatArrayToObjectKeyValue(\n    filters: Array<{ property: string; value?: any; initValue?: any }>\n  ): { [key: string]: any } {\n    const formattedObject = filters.reduce(\n      (result, item) => Object.assign(result, { [item.property]: item.value || item.initValue }),\n      {}\n    );\n\n    Object.keys(formattedObject).forEach(key => {\n      if (!formattedObject[key]) {\n        delete formattedObject[key];\n      }\n    });\n\n    return formattedObject;\n  }\n\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\n  }\n\n  private getFilterValueToDisclaimer(field: any, value: any, optionsServiceObjectsList?: Array<PoComboOption>) {\n    if (field.optionsService && optionsServiceObjectsList) {\n      return this.optionsServiceDisclaimerLabel(value, optionsServiceObjectsList);\n    }\n\n    if (field.type === PoDynamicFieldType.Date) {\n      return field.range ? this.formatDate(value.start) + ' - ' + this.formatDate(value.end) : this.formatDate(value);\n    }\n\n    if (field.options && value) {\n      return this.applyDisclaimerLabelValue(field, value);\n    }\n\n    return value;\n  }\n\n  private onRemoveDisclaimer(removeData: PoDisclaimerGroupRemoveAction) {\n    const { currentDisclaimers } = removeData;\n\n    this.emitChangesDisclaimers(currentDisclaimers);\n  }\n\n  private emitChangesDisclaimers(currentDisclaimers: any) {\n    this.changeDisclaimers.emit(currentDisclaimers);\n    this.setFilters(this.formatArrayToObjectKeyValue(currentDisclaimers));\n  }\n\n  private onRemoveAllDisclaimers() {\n    this.emitChangesDisclaimers([]);\n  }\n\n  private setDisclaimers(filters, optionsServiceObjects?: Array<PoComboOption>) {\n    const disclaimers = [];\n    const properties = Object.keys(filters);\n\n    properties.forEach(property => {\n      const field = this.getFieldByProperty(this.filters, property);\n      const label = field.label || capitalizeFirstLetter(field.property);\n      const value = filters[property];\n      const hideClose =\n        this.hideCloseDisclaimers.some(hideCloseDisclaimer => hideCloseDisclaimer === property) || false;\n\n      const valueDisplayedOnTheDisclaimerLabel = this.getFilterValueToDisclaimer(field, value, optionsServiceObjects);\n\n      if (valueDisplayedOnTheDisclaimerLabel !== '') {\n        disclaimers.push({\n          label: `${label}: ${valueDisplayedOnTheDisclaimerLabel}`,\n          property,\n          value,\n          hideClose\n        });\n      }\n    });\n\n    return disclaimers;\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\n      this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\n    );\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicSearchOptions> {\n    const originalOption: PoPageDynamicSearchOptions = {\n      title: this.title,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      filters: this.filters,\n      keepFilters: this.keepFilters,\n      concatFilters: this.concatFilters,\n      hideRemoveAllDisclaimer: this.hideRemoveAllDisclaimer,\n      hideCloseDisclaimers: this.hideCloseDisclaimers,\n      quickSearchWidth: this.quickSearchWidth\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicSearchOptions> = {\n      schema: [\n        {\n          nameProp: 'filters',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true,\n          keyForMerge: 'label'\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        },\n        {\n          nameProp: 'keepFilters'\n        },\n        {\n          nameProp: 'concatFilters'\n        },\n        {\n          nameProp: 'hideRemoveAllDisclaimer'\n        },\n        {\n          nameProp: 'hideCloseDisclaimers'\n        },\n        {\n          nameProp: 'quickSearchWidth'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n}\n","<po-page-list\n  [p-actions]=\"actions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-disclaimer-group]=\"disclaimerGroup\"\n  [p-filter]=\"filterSettings\"\n  [p-title]=\"title\"\n>\n  <po-advanced-filter\n    [p-filters]=\"filters\"\n    [p-keep-filters]=\"keepFilters\"\n    [p-literals]=\"advancedFilterLiterals\"\n    (p-search-event)=\"onAdvancedSearch($event)\"\n  >\n  </po-advanced-filter>\n\n  <ng-content></ng-content>\n</po-page-list>\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@po-ui/ng-components';\n\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\n\n/**\n * @description\n *\n * Módulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoLanguageModule,\n    PoModalModule,\n    PoPageModule,\n    PoPageCustomizationModule\n  ],\n  declarations: [PoAdvancedFilterComponent, PoPageDynamicSearchComponent],\n  exports: [PoPageDynamicSearchComponent]\n})\nexport class PoPageDynamicSearchModule {}\n","export const poPageDynamicTableLiteralsDefault = {\n  en: {\n    pageAction: 'New',\n    pageActionRemoveAll: 'Delete',\n    tableActionView: 'View',\n    tableActionEdit: 'Edit',\n    tableActionDuplicate: 'Duplicate',\n    tableActionDelete: 'Delete',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    confirmRemoveAllTitle: 'Confirm batch deletion',\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\n    loadDataErrorNotification: 'Service not found',\n    removeSuccessNotification: 'Item deleted successfully',\n    removeAllSuccessNotification: 'Items deleted successfully'\n  },\n  es: {\n    pageAction: 'Nuevo',\n    pageActionRemoveAll: 'Borrar',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Borrar',\n    confirmRemoveTitle: 'Confirmar la exclusión',\n    confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',\n    confirmRemoveAllTitle: 'Confirmar la exclusión por lotes',\n    confirmRemoveAllMessage: '¿Está seguro de que desea eliminar todos estos registros? No puede deshacer esta acción.',\n    loadDataErrorNotification: 'Servicio no informado.',\n    removeSuccessNotification: 'Elemento eliminado con éxito',\n    removeAllSuccessNotification: 'Elementos eliminados con éxito'\n  },\n  pt: {\n    pageAction: 'Novo',\n    pageActionRemoveAll: 'Excluir',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Excluir',\n    confirmRemoveTitle: 'Confirmar exclusão',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',\n    confirmRemoveAllTitle: 'Confirmar exclusão em lote',\n    confirmRemoveAllMessage:\n      'Tem certeza de que deseja excluir todos esses registros? Você não poderá desfazer essa ação.',\n    loadDataErrorNotification: 'Serviço não informado.',\n    removeSuccessNotification: 'Item excluido com sucesso',\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\n  },\n  ru: {\n    pageAction: 'Новый',\n    pageActionRemoveAll: 'Удалить',\n    tableActionView: 'Просмотр',\n    tableActionEdit: 'Редактировать',\n    tableActionDuplicate: 'Дублировать',\n    tableActionDelete: 'Удалить',\n    confirmRemoveTitle: 'Подтверждение удаления',\n    confirmRemoveMessage: 'Вы уверены, что хотите удалить эту запись?  Вы не можете отменить это действие.',\n    confirmRemoveAllTitle: 'Подтвердите удаление пакета',\n    confirmRemoveAllMessage: 'Вы уверены, что хотите удалить все эти записи? Вы не можете отменить это действие.',\n    loadDataErrorNotification: 'Сервис не найден',\n    removeSuccessNotification: 'Элемент успешно удален',\n    removeAllSuccessNotification: 'Элементы успешно удалены'\n  }\n};\n","import { Input, Directive, Output, EventEmitter } from '@angular/core';\n\nimport { PoBreadcrumb, PoTableColumnSort } from '@po-ui/ng-components';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoPageDynamicTableFilters } from './interfaces/po-page-dynamic-table-filters.interface';\n\n@Directive()\nexport class PoPageDynamicListBaseComponent {\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Endpoint da API dos recursos que serão exibidos. */\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisição dos recursos que serão exibidos.\n   *\n   * Ao realizar requisições de busca, podem ser enviados os parâmetros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\n   *\n   * Caso a coluna estiver ordenada descendentemente será enviada da seguinte forma: `-name`, se for ordenada\n   * ascendentemente será enviada apenas com o nome da coluna, por exemplo: `name`.\n   *\n   * Exemplo de uma requisição de busca:\n   *\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\n   *\n   * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ remove: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * Resquisição disparada, onde a propriedade `id` é igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista\n   * de objetos com os campos setados como `key: true` via `payload`.\n   *\n   * > `DELETE {end-point}`\n   *\n   * > `Payload: [ {key}, {key} ... {key} ]`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ removeAll: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\n   * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=list&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** Título da página. */\n  @Input('p-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Evento disparado ao fechar o popover do gerenciador de colunas após alterar as colunas visíveis.\n   *\n   * O componente envia como parâmetro um array de string com as colunas visíveis atualizadas.\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\n   */\n  @Output('p-change-visible-columns') changeVisibleColumns = new EventEmitter<Array<string>>();\n\n  /**\n   * @optional\n   *\n   * @description\n   * Evento disparado ao clicar no botão de restaurar padrão no gerenciador de colunas.\n   *\n   * O componente envia como parâmetro um array de string com as colunas configuradas inicialmente.\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\n   */\n  @Output('p-restore-column-manager') columnRestoreManager = new EventEmitter<Array<String>>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento executado ao ordenar colunas da tabela.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenação.\n   */\n  @Output('p-sort-by') sortBy: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  private _autoRouter: boolean = false;\n  private _columns: Array<any> = [];\n  private _duplicates: Array<string> = [];\n  private _fields: Array<any> = [];\n  private _filters: Array<any> = [];\n  private _keys: Array<string> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`\n   *\n   * As rotas criadas serão baseadas na propriedade `p-actions`.\n   *\n   * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na tabela e busca avançada.\n   *\n   *\n   * > Caso não seja definido fields a tabela assumirá o comportamento padrão.\n   */\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableFilters>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n\n    this.setFieldsProperties(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicTableFilters> {\n    return this._fields;\n  }\n\n  set columns(value) {\n    this._columns = [...value];\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set duplicates(value: Array<string>) {\n    this._duplicates = [...value];\n  }\n\n  get duplicates() {\n    return this._duplicates;\n  }\n\n  set filters(value: Array<PoPageDynamicTableFilters>) {\n    this._filters = [...value];\n  }\n\n  get filters() {\n    return this._filters;\n  }\n\n  set keys(value: Array<string>) {\n    this._keys = [...value];\n  }\n\n  get keys() {\n    return this._keys;\n  }\n\n  private setFieldsProperties(fields: Array<any>) {\n    let visibleFilter: boolean;\n    this.filters = fields\n      .filter(field => field.filter === true)\n      .map(filterField => {\n        visibleFilter = !(filterField.initValue && filterField.fixed);\n        return { ...filterField, visible: visibleFilter };\n      });\n    this.columns = fields.filter(\n      field => field.visible === undefined || field.visible === true || field.allowColumnsManager === true\n    );\n    this.keys = fields.filter(field => field.key === true).map(field => field.property);\n    this.duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\nimport { PoPageDynamicTableBeforeDuplicate } from './interfaces/po-page-dynamic-table-before-duplicate.interface';\nimport { PoPageDynamicTableBeforeEdit } from './interfaces/po-page-dynamic-table-before-edit.interface';\nimport { PoPageDynamicTableBeforeNew } from './interfaces/po-page-dynamic-table-before-new.interface';\nimport { PoPageDynamicTableBeforeRemove } from './interfaces/po-page-dynamic-table-before-remove.interface';\nimport { PoPageDynamicTableBeforeDetail } from './interfaces/po-page-dynamic-table-before-detail.interface';\nimport { PoPageDynamicTableBeforeRemoveAll } from './interfaces/po-page-dynamic-table-before-remove-all.interface';\nimport { PoPageDynamicTableCustomAction } from './interfaces/po-page-dynamic-table-custom-action.interface';\n\ninterface ExecuteActionParameter {\n  action: string | Function;\n  resource?: any;\n  id?: string | number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicTableActionsService {\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PO-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) {}\n\n  beforeDuplicate(\n    action: PoPageDynamicTableActions['beforeDuplicate'],\n    id: any,\n    body: any\n  ): Observable<PoPageDynamicTableBeforeDuplicate> {\n    const resource = body ?? {};\n\n    return this.executeAction({ action, resource, id });\n  }\n\n  beforeEdit(\n    action: PoPageDynamicTableActions['beforeEdit'],\n    id: any,\n    body: any\n  ): Observable<PoPageDynamicTableBeforeEdit> {\n    const resource = body ?? {};\n\n    return this.executeAction({ action, resource, id });\n  }\n\n  beforeNew(action?: PoPageDynamicTableActions['beforeNew']): Observable<PoPageDynamicTableBeforeNew> {\n    return this.executeAction({ action });\n  }\n\n  beforeRemove(\n    action: PoPageDynamicTableActions['beforeRemove'],\n    id: string,\n    resource: any\n  ): Observable<PoPageDynamicTableBeforeRemove> {\n    return this.executeAction({ action, id, resource });\n  }\n\n  beforeRemoveAll(\n    action: PoPageDynamicTableActions['beforeRemoveAll'],\n    resources: Array<any>\n  ): Observable<PoPageDynamicTableBeforeRemoveAll> {\n    return this.executeAction({ action, resource: resources });\n  }\n\n  beforeDetail(\n    action: PoPageDynamicTableActions['beforeDetail'],\n    id: string,\n    resource: any\n  ): Observable<PoPageDynamicTableBeforeDetail> {\n    return this.executeAction({ action, id, resource });\n  }\n\n  customAction(action: PoPageDynamicTableCustomAction['action'], resource: any = []) {\n    return this.executeAction({ action, resource });\n  }\n\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\n    if (!action) {\n      return of(<T>{});\n    }\n\n    if (typeof action === 'string') {\n      const url = id ? `${action}/${id}` : action;\n\n      return this.http.post<T>(url, resource, { headers: this.headers });\n    }\n    if (id) {\n      return of(action(id, resource));\n    }\n    return of(action(resource));\n  }\n}\n","import { ActivatedRoute, Route, Router } from '@angular/router';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription, Observable, EMPTY, concat, of } from 'rxjs';\nimport { tap, switchMap, map } from 'rxjs/operators';\n\nimport {\n  InputBoolean,\n  PoDialogConfirmOptions,\n  PoDialogService,\n  PoLanguageService,\n  PoNotificationService,\n  PoPageAction,\n  PoTableAction,\n  PoTableColumnSort,\n  PoTableColumnSortType,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport * as util from '../../utils/util';\n\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\n\nimport { poPageDynamicTableLiteralsDefault } from './po-page-dynamic-table-literals';\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicTableMetaData } from './interfaces/po-page-dynamic-table-metadata.interface';\nimport { PoPageDynamicTableActionsService } from './po-page-dynamic-table-actions.service';\nimport { PoPageDynamicTableBeforeEdit } from './interfaces/po-page-dynamic-table-before-edit.interface';\nimport { PoPageDynamicTableBeforeNew } from './interfaces/po-page-dynamic-table-before-new.interface';\nimport { PoPageDynamicTableBeforeRemove } from './interfaces/po-page-dynamic-table-before-remove.interface';\nimport { PoPageDynamicTableBeforeDetail } from './interfaces/po-page-dynamic-table-before-detail.interface';\nimport { PoPageDynamicTableBeforeDuplicate } from './interfaces/po-page-dynamic-table-before-duplicate.interface';\nimport { PoPageDynamicTableBeforeRemoveAll } from './interfaces/po-page-dynamic-table-before-remove-all.interface';\nimport { PoPageDynamicTableCustomAction } from './interfaces/po-page-dynamic-table-custom-action.interface';\nimport { PoPageDynamicTableCustomTableAction } from './interfaces/po-page-dynamic-table-custom-table-action.interface';\nimport { isExternalLink, openExternalLink, removeDuplicateItems } from '../../utils/util';\n\nconst PAGE_SIZE_DEFAULT = 10;\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicTableOptions);\n\n/**\n * @docsExtends PoPageDynamicListBaseComponent\n *\n * @description\n *\n * O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\n * o mesmo também suporta metadados conforme especificado na documentação.\n *\n * ### Utilização via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\n *\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\n * e depois irá buscar da rota definida na propriedade serviceLoadApi\n *\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\n * se o cache não existe será disparado uma notificação.\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post\n *   }\n * }\n *\n * ```\n *\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\n * tipo do metadado esperado e a versão cacheada pelo browser.\n *\n * O formato esperado na resposta da requisição está especificado na interface\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Table',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ],\n *   keepFilters: true\n * }\n * ```\n *\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=list&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-table-basic\" title=\"PO Page Dynamic Table Basic\">\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-people\" title=\"PO Page Dynamic Table - People\">\n *  <file name=\"sample-po-page-dynamic-table-people/sample-po-page-dynamic-table-people.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-people/sample-po-page-dynamic-table-people.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-users\" title=\"PO Page Dynamic Table - Users\">\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-hotels\" title=\"PO Page Dynamic Table - Hotels\">\n *  <file name=\"sample-po-page-dynamic-table-hotels/sample-po-page-dynamic-table-hotels.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-hotels/sample-po-page-dynamic-table-hotels.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-table',\n  templateUrl: './po-page-dynamic-table.component.html',\n  providers: [PoPageDynamicService]\n})\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Função ou serviço que será executado na inicialização do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n   * - `function`: Método que será executado.\n   *\n   * O retorno desta função deve ser do tipo `PoPageDynamicTableOptions`,\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicTableOptions {\n   * return {\n   *   actions:\n   *     { new: 'new', edit: 'edit/:id', remove: true },\n   *   fields: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicTableOptions);\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mantém na modal de `Busca Avançada` os valores preenchidos do último filtro realizado pelo usuário.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-keep-filters')\n  keepFilters: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define que a coluna de ações ficará no lado direito da tabela.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-actions-right')\n  actionRight?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\n   *\n   * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\n   * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\n   * rápida também na lista de `disclaimers` a aplicando uma nova busca com a concatenação.\n   *\n   * Por exemplo, com os seguintes filtros aplicados:\n   *   - filtro avançado: `{ name: 'Mike', age: '12' }`\n   *   - filtro rápido: `{ search: 'paper' }`\n   *\n   * A requisição dos dados na API ficará com os parâmetros:\n   * ```\n   * page=1&pageSize=10&name=Mike&age=12&search=paper\n   * ```\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-concat-filters')\n  concatFilters: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botão para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-hide-remove-all-disclaimer')\n  hideRemoveAllDisclaimer?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Se verdadeiro, ativa a funcionalidade de scroll infinito para a tabela e o botão \"Carregar Mais\" deixará de ser exibido. Ao chegar no fim da tabela\n   * executará a função `p-show-more`.\n   *\n   * **Regras de utilização:**\n   *  - O scroll infinito só funciona para tabelas que utilizam a propriedade `p-height` e que possuem o scroll já na carga inicial dos dados.\n   *\n   * @default `false`\n   */\n  @InputBoolean()\n  @Input('p-infinite-scroll')\n  infiniteScroll?: boolean = false;\n\n  hasNext = false;\n  items = [];\n  literals;\n  pageActions: Array<PoPageAction> = [];\n  tableActions: Array<PoTableAction> = [];\n\n  private _actions: PoPageDynamicTableActions = {};\n  private _pageCustomActions: Array<PoPageDynamicTableCustomAction> = [];\n  private _height: number;\n  private _quickSearchWidth: number;\n  private _tableCustomActions: Array<PoPageDynamicTableCustomTableAction> = [];\n\n  private page: number = 1;\n  private currentPage: number = 1;\n  private itemSelectedAction;\n  private params = {};\n  private sortedColumn: PoTableColumnSort;\n  private subscriptions = new Subscription();\n  private hasCustomActionWithSelectable = false;\n\n  private _customPageListActions: Array<PoPageAction> = [];\n  private _customTableActions: Array<PoTableAction> = [];\n  private _defaultPageActions: Array<PoPageAction> = [];\n  private _defaultTableActions: Array<PoTableAction> = [];\n  private _hideCloseDisclaimers: Array<string> = [];\n\n  private set defaultPageActions(value: Array<PoPageAction>) {\n    this._defaultPageActions = value;\n    this.updatePageActions();\n  }\n\n  private set defaultTableActions(value: Array<PoTableAction>) {\n    this._defaultTableActions = value;\n    this.updateTableActions();\n  }\n\n  private set customPageListActions(value: Array<PoPageAction>) {\n    this._customPageListActions = value;\n    this.updatePageActions();\n  }\n\n  private set customTableActions(value: Array<PoTableAction>) {\n    this._customTableActions = value;\n    this.updateTableActions();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ações da página e da tabela.\n   * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\n\n    this.setPageActions(this.actions);\n    this.setRemoveAllAction();\n    this.setTableActions(this.actions);\n  }\n\n  get actions(): PoPageDynamicTableActions {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de ações customizadas da página que serão incorporadas às ações\n   * informadas através da propriedade `p-actions`.\n   *\n   * Essas ações ficam localizadas na parte superior da página em botões com ações.\n   *\n   * Exemplo de utilização:\n   * ```\n   * [\n   *  { label: 'Export', action: this.export.bind(this) },\n   *  { label: 'Print', action: this.print.bind(this) }\n   * ];\n   * ```\n   */\n  @Input('p-page-custom-actions') set pageCustomActions(value: Array<PoPageDynamicTableCustomAction>) {\n    this._pageCustomActions = Array.isArray(value) ? value : [];\n\n    this.customPageListActions = this.transformCustomActionsToPageListAction(this.pageCustomActions);\n    this.hasCustomActionWithSelectable = this.pageCustomActions.some(customAction => customAction.selectable);\n  }\n\n  get pageCustomActions(): Array<PoPageDynamicTableCustomAction> {\n    return this._pageCustomActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de ações customizadas na tabela da página que serão incorporadas às ações\n   * informadas através da propriedade `p-actions`.\n   *\n   * Exemplo de utilização:\n   * ```\n   * [\n   *  { label: 'Apply discount', action: this.applyDiscount.bind(this) },\n   *  { label: 'Details', action: this.details.bind(this) }\n   * ];\n   * ```\n   * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\n   */\n  @Input('p-table-custom-actions') set tableCustomActions(value: Array<PoPageDynamicTableCustomTableAction>) {\n    this._tableCustomActions = Array.isArray(value) ? value : [];\n\n    this.customTableActions = this.transformTableCustomActionsToTableActions(this.tableCustomActions);\n  }\n\n  get tableCustomActions(): Array<PoPageDynamicTableCustomTableAction> {\n    return this._tableCustomActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Largura do campo de busca, utilizando o *Grid System*,\n   * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\n   * conforme resolução de tela para manter a consistência do layout.\n   */\n  @Input('p-quick-search-width') set quickSearchWidth(value: number) {\n    this._quickSearchWidth = util.convertToInt(value);\n  }\n\n  get quickSearchWidth(): number {\n    return this._quickSearchWidth;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da tabela em *pixels* e fixa o cabeçalho.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = util.convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de filtros que terão a opção de fechar ocultada\n   * em seu respectivo disclaimer. Utilizar o atributo `property` do campo.\n   *\n   * Exemplo de utilização:\n   * ```\n   * ['city','name'];\n   * ```\n   */\n  @Input('p-hide-close-disclaimers') set hideCloseDisclaimers(value: Array<string>) {\n    this._hideCloseDisclaimers = Array.isArray(value) ? value : [];\n  }\n\n  get hideCloseDisclaimers(): Array<string> {\n    return this._hideCloseDisclaimers;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private poPageDynamicService: PoPageDynamicService,\n    private poPageCustomizationService: PoPageCustomizationService,\n    private poPageDynamicTableActionsService: PoPageDynamicTableActionsService,\n    languageService: PoLanguageService\n  ) {\n    super();\n\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...poPageDynamicTableLiteralsDefault[poLocaleDefault],\n      ...poPageDynamicTableLiteralsDefault[language]\n    };\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromAPI();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  onAdvancedSearch(filter) {\n    this.subscriptions.add(this.loadData({ page: 1, ...filter }).subscribe());\n    this.params = filter;\n\n    if (this.keepFilters) {\n      this.updateFilterValue(filter);\n    }\n  }\n\n  onChangeDisclaimers(disclaimers) {\n    const filter = {};\n\n    disclaimers.forEach(disclaimer => {\n      filter[disclaimer.property] = disclaimer.value;\n    });\n\n    this.onAdvancedSearch(filter);\n  }\n\n  onQuickSearch(termTypedInQuickSearch) {\n    const quickSearchParam = termTypedInQuickSearch ? { search: termTypedInQuickSearch } : {};\n    this.params = this.concatFilters ? { ...this.params, ...quickSearchParam } : { ...quickSearchParam };\n\n    this.subscriptions.add(this.loadData(termTypedInQuickSearch ? { page: 1, ...this.params } : undefined).subscribe());\n  }\n\n  onSort(sortedColumn: PoTableColumnSort) {\n    this.sortedColumn = sortedColumn;\n  }\n\n  onChangeVisibleColumns(value) {\n    this.changeVisibleColumns.emit(value);\n  }\n\n  onColumnRestoreManager(value: Array<String>) {\n    this.columnRestoreManager.emit(value);\n  }\n\n  onSortBy(sortedColumn: PoTableColumnSort) {\n    this.sortBy.emit(sortedColumn);\n  }\n\n  showMore() {\n    this.subscriptions.add(this.loadData({ page: ++this.page, ...this.params }).subscribe());\n  }\n\n  get enableSelectionTable() {\n    return this.hasActionRemoveAll || this.hasCustomActionWithSelectable;\n  }\n\n  get hasActionRemoveAll() {\n    return !!this.actions.removeAll;\n  }\n\n  /**\n   * Função que realiza a atualização dos dados da tabela.\n   *\n   * Para utilizá-la é necessário capturar a instância do `page dynamic table`, como por exemplo:\n   *\n   * ``` html\n   * <po-page-dynamic-table #dynamicTable [p-service-api]=\"serviceApi\"></po-page-dynamic-table>\n   * ```\n   *\n   * ``` javascript\n   * import { PoPageDynamicTableComponent, PoDynamicFormField } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild('dynamicTable', { static: true }) dynamicTable: PoPageDynamicTableComponent;\n   *\n   * pageCustomActions: Array<PoPageDynamicTableCustomAction> = [\n   * {\n   *   label: 'Update',\n   *   action: this.updateTable.bind(this),\n   *   icon: 'po-icon-refresh'\n   * }]\n   *\n   * updateTable() {\n   *   this.dynamicTable.updateDataTable();\n   * }\n   * ```\n   *\n   *\n   * @param {{page: number, key: value }} filter Propriedade para envio de um filtro customizado.\n   * Exemplo de envio:\n   *\n   *```\n   * this.dynamicTable.updateDataTable({page: 3, search: 'Brasil'});\n   * ```\n   * Caso não seja passado um filtro customizado para o método `updateDataTable` a tabela será atualizada conforme a página do ultimo item modificado.\n   */\n  public updateDataTable(filter?: any) {\n    const indexItemSelected = this.items.findIndex(item => item === this.itemSelectedAction);\n    const pageNumber = Math.floor(indexItemSelected / PAGE_SIZE_DEFAULT);\n    this.currentPage = pageNumber < 0 ? this.currentPage : pageNumber + 1;\n    if (this.currentPage === undefined) {\n      this.currentPage = 1;\n    }\n\n    if (filter) {\n      this.subscriptions.add(this.loadData(filter).subscribe());\n    } else {\n      this.subscriptions.add(this.loadData({ page: this.currentPage, ...this.params }).subscribe());\n    }\n  }\n\n  private confirmRemove(\n    actionRemove: PoPageDynamicTableActions['remove'],\n    actionBeforeRemove: PoPageDynamicTableActions['beforeRemove'],\n    item\n  ) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, item, actionRemove, actionBeforeRemove)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private confirmRemoveAll(\n    actionRemoveAll: PoPageDynamicTableActions['remove'],\n    actionBeforeRemoveAll: PoPageDynamicTableActions['beforeRemove']\n  ) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveAllTitle,\n      message: this.literals.confirmRemoveAllMessage,\n      confirm: this.removeAll.bind(this, actionRemoveAll, actionBeforeRemoveAll)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sortedColumn;\n\n    if (!column) {\n      return {};\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return { order: `-${column.property}` };\n    }\n\n    return { order: `${column.property}` };\n  }\n\n  private loadData(params: { page?: number; search?: string } = {}) {\n    const key = this.keys ? this.keys[0] : 'id';\n    if (!this.serviceApi) {\n      this.poNotification.error(this.literals.loadDataErrorNotification);\n      return EMPTY;\n    }\n\n    const orderParam = this.getOrderParam(this.sortedColumn);\n    const defaultParams: any = { page: 1, pageSize: PAGE_SIZE_DEFAULT };\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\n\n    return this.poPageDynamicService.getResources(fullParams).pipe(\n      tap(response => {\n        removeDuplicateItems(response.items, this.items, key);\n        this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\n        this.page = fullParams.page;\n        this.hasNext = response.hasNext;\n      })\n    );\n  }\n\n  private getMetadata(\n    serviceApiFromRoute: string,\n    onLoad: UrlOrPoCustomizationFunction\n  ): Observable<PoPageDynamicTableMetaData> {\n    if (serviceApiFromRoute) {\n      return this.poPageDynamicService.getMetadata<PoPageDynamicTableMetaData>().pipe(\n        tap(response => {\n          this.autoRouter = response.autoRouter || this.autoRouter;\n          this.actions = response.actions || this.actions;\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\n          this.fields = response.fields || this.fields;\n          this.title = response.title || this.title;\n          this.pageCustomActions = response.pageCustomActions || this.pageCustomActions;\n          this.tableCustomActions = response.tableCustomActions || this.tableCustomActions;\n          this.keepFilters = response.keepFilters || this.keepFilters;\n          this.concatFilters = response.concatFilters || this.concatFilters;\n          this.hideRemoveAllDisclaimer = response.hideRemoveAllDisclaimer || this.hideRemoveAllDisclaimer;\n          this.hideCloseDisclaimers = response.hideCloseDisclaimers || this.hideCloseDisclaimers;\n          this.quickSearchWidth = response.quickSearchWidth || this.quickSearchWidth;\n        }),\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\n      );\n    }\n\n    return this.loadOptionsOnInitialize(onLoad);\n  }\n\n  // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\n  private navigateTo(\n    route: { path: string; component?; url?: string; params?: any },\n    forceStopAutoRouter: boolean = false\n  ) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(() => {\n      if (forceStopAutoRouter || !this.autoRouter) {\n        return;\n      }\n\n      this.router.config.unshift(<Route>{\n        path: route.path,\n        component: route.component,\n        data: { serviceApi: this.serviceApi, autoRouter: true }\n      });\n\n      this.navigateTo(route, true);\n    });\n  }\n\n  private createConcatenatedUrl(concatKeys: boolean, url: string, selectedItem): string {\n    const keys = this.keys.map(key => encodeURIComponent(selectedItem[key])).join();\n    return concatKeys ? `${url}/${keys}` : url;\n  }\n\n  private openDetail(action: PoPageDynamicTableActions['detail'], item) {\n    const id = this.formatUniqueKey(item);\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeDetail(this.actions.beforeDetail, id, item)\n        .subscribe((beforeDetailResult: PoPageDynamicTableBeforeDetail) =>\n          this.executeDetail(action, beforeDetailResult, id, item)\n        )\n    );\n  }\n\n  private executeDetail(\n    action: PoPageDynamicTableActions['detail'],\n    beforeDetailResult?: PoPageDynamicTableBeforeNew,\n    id?: string,\n    item?: any\n  ) {\n    const before = beforeDetailResult ?? {};\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\n    const { newUrl } = before;\n\n    if (allowAction && action) {\n      if (newUrl) {\n        const path = this.getPathFromNewUrl(newUrl, id);\n        return this.navigateTo({ path });\n      }\n\n      if (typeof action === 'string') {\n        const url = this.resolveUrl(item, action);\n        this.navigateTo({ path: action, url, component: PoPageDynamicDetailComponent });\n      } else {\n        action(id, item);\n      }\n    }\n  }\n\n  private getPathFromNewUrl(newUrl: string, id: string): string {\n    if (newUrl.includes(':id')) {\n      return newUrl.replace(/:id/g, id);\n    }\n    return newUrl;\n  }\n\n  private openDuplicate(actionDuplicate: PoPageDynamicTableActions['duplicate'], item: any) {\n    const id = this.formatUniqueKey(item);\n    const duplicates = util.removeKeysProperties(this.keys, util.mapObjectByProperties(item, this.duplicates));\n\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeDuplicate(this.actions.beforeDuplicate, id, duplicates)\n        .subscribe((beforeDuplicateResult: PoPageDynamicTableBeforeDuplicate) =>\n          this.executeDuplicate(actionDuplicate, beforeDuplicateResult, duplicates)\n        )\n    );\n  }\n\n  private executeDuplicate(\n    actionDuplicate: PoPageDynamicTableActions['duplicate'],\n    beforeDuplicateResult: PoPageDynamicTableBeforeDuplicate,\n    duplicates: any\n  ) {\n    const before = beforeDuplicateResult ?? {};\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\n    const beforeDuplicateResource = before.resource;\n    const newAction = before.newUrl ?? actionDuplicate;\n\n    if (allowAction && actionDuplicate) {\n      if (typeof beforeDuplicateResource === 'object' && beforeDuplicateResource !== null) {\n        duplicates = util.removeKeysProperties(this.keys, beforeDuplicateResource);\n      }\n\n      if (typeof newAction === 'string') {\n        return this.navigateTo({ path: newAction, params: { duplicate: JSON.stringify(duplicates) } });\n      }\n\n      return newAction(duplicates);\n    }\n  }\n\n  private openEdit(actionEdit: PoPageDynamicTableActions['edit'], item) {\n    const id = this.formatUniqueKey(item);\n\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeEdit(this.actions.beforeEdit, id, item)\n        .pipe(\n          switchMap((beforeEditResult: PoPageDynamicTableBeforeEdit) =>\n            this.executeEditAction(actionEdit, beforeEditResult, item, id)\n          )\n        )\n        .subscribe()\n    );\n  }\n\n  private executeEditAction(\n    action: PoPageDynamicTableActions['edit'],\n    beforeEditResult: PoPageDynamicTableBeforeEdit,\n    item: any,\n    id: string\n  ) {\n    const newEditAction = beforeEditResult?.newUrl ?? action;\n    const allowAction = beforeEditResult?.allowAction ?? true;\n\n    if (!allowAction) {\n      return EMPTY;\n    }\n\n    if (typeof newEditAction === 'string') {\n      this.openEditUrl(newEditAction, item);\n    } else {\n      const updatedItem = newEditAction(id, item);\n      if (typeof updatedItem === 'object' && updatedItem !== null) {\n        this.modifyUITableItem(item, util.removeKeysProperties(this.keys, updatedItem));\n      }\n    }\n\n    return EMPTY;\n  }\n\n  private openEditUrl(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url });\n  }\n\n  private modifyUITableItem(currentItem, newItemValue) {\n    const tableItem = this.items.findIndex(item => item === currentItem);\n    this.items[tableItem] = { ...currentItem, ...newItemValue };\n  }\n\n  private openNew(actionNew: PoPageDynamicTableActions['new']) {\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeNew(this.actions.beforeNew)\n        .subscribe((beforeNewResult: PoPageDynamicTableBeforeNew) => this.executeNew(actionNew, beforeNewResult))\n    );\n  }\n\n  private executeNew(actionNew: PoPageDynamicTableActions['new'], beforeNewResult?: PoPageDynamicTableBeforeNew) {\n    const before = beforeNewResult ?? {};\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\n    const { newUrl } = before;\n\n    if (allowAction && actionNew) {\n      if (newUrl) {\n        return this.navigateTo({ path: newUrl });\n      }\n\n      if (typeof actionNew === 'string') {\n        return this.navigateTo({ path: actionNew });\n      }\n\n      return actionNew();\n    }\n  }\n\n  /**\n   * Caso exista mais de um identificador, será concatenado com '|'.\n   *\n   * Ex: { id: 1, company: 'po' }\n   *\n   * Para o endpoint /resources/:id será executada a url /resources/1|po\n   */\n  private remove(\n    item,\n    actionRemove: PoPageDynamicTableActions['remove'],\n    actionBeforeRemove: PoPageDynamicTableActions['beforeRemove']\n  ) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeRemove(actionBeforeRemove, uniqueKey, item)\n        .pipe(switchMap(beforeRemove => this.deleteAction(item, actionRemove, beforeRemove)))\n        .subscribe()\n    );\n  }\n\n  private deleteAction(\n    item,\n    actionRemove: PoPageDynamicTableActions['remove'],\n    beforeRemove: PoPageDynamicTableBeforeRemove\n  ): Observable<any> {\n    const { allowAction, newUrl } = beforeRemove || {};\n    const allow = allowAction ?? true;\n\n    if (allow) {\n      let uniqueKey = this.formatUniqueKey(item);\n      const resourceToRemoveKey = this.returnResourcesKeys([item]);\n\n      if (typeof actionRemove === 'boolean' || newUrl) {\n        uniqueKey = newUrl ? undefined : uniqueKey;\n        return this.poPageDynamicService\n          .deleteResource(uniqueKey, newUrl)\n          .pipe(map(() => this.removeFromUI(resourceToRemoveKey, this.literals.removeSuccessNotification)));\n      }\n\n      return of(actionRemove(uniqueKey, item)).pipe(\n        tap(remove => {\n          const removeItem = remove ?? false;\n          this.removeFromUI(resourceToRemoveKey, this.literals.removeSuccessNotification, removeItem);\n        })\n      );\n    }\n\n    return of({});\n  }\n\n  private removeFromUI(items: Array<any>, message: string, remove = true) {\n    if (remove === true && items?.length) {\n      this.removeLocalItems(items);\n      this.poNotification.success(message);\n    }\n  }\n\n  private removeAll(\n    actionRemoveAll: PoPageDynamicTableActions['removeAll'],\n    actionBeforeRemoveAll: PoPageDynamicTableActions['beforeRemoveAll']\n  ) {\n    const originalResourcesKeys = this.getSelectedItemsKeys();\n    this.subscriptions.add(\n      this.poPageDynamicTableActionsService\n        .beforeRemoveAll(actionBeforeRemoveAll, originalResourcesKeys)\n        .pipe(switchMap(beforeRemove => this.deleteAllAction(actionRemoveAll, beforeRemove, originalResourcesKeys)))\n        .subscribe()\n    );\n  }\n\n  private getSelectedItemsKeys() {\n    const resources = this.items.filter(item => item.$selected);\n\n    if (resources.length === 0) {\n      return;\n    }\n    return this.returnResourcesKeys(resources);\n  }\n\n  private returnResourcesKeys(resources) {\n    return util.mapArrayByProperties(resources, this.keys);\n  }\n\n  private deleteAllAction(\n    actionRemoveAll: PoPageDynamicTableActions['removeAll'],\n    beforeRemoveAll: PoPageDynamicTableBeforeRemoveAll,\n    originalResources: Array<any>\n  ) {\n    const { allowAction, newUrl, resources } = beforeRemoveAll ?? {};\n    const allow = allowAction ?? true;\n    const resourcestoDelete = resources ?? originalResources;\n\n    if (allow && Array.isArray(resourcestoDelete)) {\n      if (typeof actionRemoveAll === 'boolean' || newUrl) {\n        return this.poPageDynamicService.deleteResources(resourcestoDelete, newUrl).pipe(\n          tap(() => {\n            this.removeFromUI(resourcestoDelete, this.literals.removeAllSuccessNotification);\n          })\n        );\n      }\n      return of(actionRemoveAll(resourcestoDelete)).pipe(\n        tap(removeItems => this.removeFromUI(removeItems, this.literals.removeSuccessNotification))\n      );\n    }\n\n    return of({});\n  }\n\n  private removeLocalItems(itemsKeysToRemove = []) {\n    if (itemsKeysToRemove.length) {\n      this.items = this.items.filter(item => {\n        const itemKey = this.formatUniqueKey(item);\n        return !itemsKeysToRemove.find(itemKeyToRemove => util.valuesFromObject(itemKeyToRemove).join('|') === itemKey);\n      });\n    }\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private setPageActions(actions: PoPageDynamicTableActions) {\n    if (actions?.new) {\n      this.defaultPageActions = [{ label: this.literals.pageAction, action: this.openNew.bind(this, actions.new) }];\n    }\n  }\n\n  private transformCustomActionsToPageListAction(\n    customActions: Array<PoPageDynamicTableCustomAction>\n  ): Array<PoPageAction> {\n    /* istanbul ignore next */\n    return customActions.map(customAction => ({\n      label: customAction.label,\n      action: this.callPageCustomAction.bind(this, customAction),\n      disabled: this.isDisablePageCustomAction.bind(this, customAction),\n      ...(customAction.icon && { icon: customAction.icon }),\n      visible: customAction.visible\n    }));\n  }\n\n  private transformTableCustomActionsToTableActions(\n    tableCustomActions: Array<PoPageDynamicTableCustomTableAction>\n  ): Array<PoTableAction> {\n    return tableCustomActions.map(tableCustomAction => ({\n      label: tableCustomAction.label,\n      icon: tableCustomAction.icon,\n      action: this.callTableCustomAction.bind(this, tableCustomAction),\n      disabled: tableCustomAction.disabled,\n      visible: tableCustomAction.visible\n    }));\n  }\n\n  private isDisablePageCustomAction(customAction): boolean {\n    return customAction.selectable && !this.getSelectedItemsKeys();\n  }\n\n  private callPageCustomAction(customAction: PoPageDynamicTableCustomAction) {\n    if (customAction.action) {\n      const selectedItems = customAction.selectable ? this.getSelectedItemsKeys() : undefined;\n\n      const sendCustomActionSubscription = this.poPageDynamicTableActionsService\n        .customAction(customAction.action, selectedItems)\n        .subscribe();\n\n      this.subscriptions.add(sendCustomActionSubscription);\n    } else if (customAction.url) {\n      this.navigateTo({ path: customAction.url });\n    }\n  }\n\n  private callTableCustomAction(customAction: PoPageDynamicTableCustomTableAction, selectedItem) {\n    this.itemSelectedAction = selectedItem;\n    if (customAction.action) {\n      const sendCustomActionSubscription = this.poPageDynamicTableActionsService\n        .customAction(customAction.action, selectedItem)\n        .subscribe(updatedItem => {\n          if (typeof updatedItem === 'object' && updatedItem !== null) {\n            this.modifyUITableItem(selectedItem, util.removeKeysProperties(this.keys, updatedItem));\n          }\n        });\n\n      this.subscriptions.add(sendCustomActionSubscription);\n    } else if (customAction.url) {\n      if (isExternalLink(customAction.url)) {\n        openExternalLink(this.createConcatenatedUrl(customAction.concatKeys, customAction.url, selectedItem));\n      } else {\n        this.navigateTo({\n          path: this.createConcatenatedUrl(customAction.concatKeys, customAction.url, selectedItem)\n        });\n      }\n    }\n  }\n\n  private setRemoveAllAction() {\n    const action = this._actions;\n    if (this.showRemove(action.removeAll)) {\n      this.defaultPageActions = [\n        ...this._defaultPageActions,\n        {\n          label: this.literals.pageActionRemoveAll,\n          action: this.confirmRemoveAll.bind(this, action.removeAll, action.beforeRemoveAll),\n          disabled: this.disableRemoveAll.bind(this)\n        }\n      ];\n    }\n  }\n\n  private disableRemoveAll(): boolean {\n    return !this.getSelectedItemsKeys();\n  }\n\n  private setTableActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      const visibleRemove = this.showRemove(actions.remove);\n      this.defaultTableActions = [\n        {\n          action: this.openDetail.bind(this, actions.detail),\n          label: this.literals.tableActionView,\n          visible: !!this._actions.detail\n        },\n        {\n          action: this.openEdit.bind(this, actions.edit),\n          label: this.literals.tableActionEdit,\n          visible: !!this._actions.edit\n        },\n        {\n          action: this.openDuplicate.bind(this, actions.duplicate),\n          label: this.literals.tableActionDuplicate,\n          visible: !!this._actions.duplicate\n        },\n        {\n          action: this.confirmRemove.bind(this, actions.remove, actions.beforeRemove),\n          label: this.literals.tableActionDelete,\n          separator: true,\n          type: 'danger',\n          visible: visibleRemove\n        }\n      ];\n    }\n  }\n\n  private loadDataFromAPI() {\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\n\n    const onLoad = serviceLoadApi || this.onLoad;\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\n\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    const metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);\n    const data$ = this.loadData();\n\n    this.subscriptions.add(\n      metadata$\n        .pipe(\n          switchMap(() => {\n            const initialFilters = this.getInitialValuesFromFilter();\n\n            if (!Object.keys(initialFilters).length) {\n              return data$;\n            }\n\n            return EMPTY;\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  private getInitialValuesFromFilter() {\n    const initialFilters = this.filters.reduce(\n      (result, item) => Object.assign(result, { [item.property]: item.initValue }),\n      {}\n    );\n\n    Object.keys(initialFilters).forEach(key => {\n      if (!initialFilters[key]) {\n        delete initialFilters[key];\n      }\n    });\n\n    return initialFilters;\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n    if (onLoad) {\n      return this.getPoDynamicPageOptions(onLoad).pipe(\n        tap(responsePoOption =>\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\n        )\n      );\n    }\n\n    return of(null);\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicTableOptions> {\n    const originalOption: PoPageDynamicTableOptions = {\n      fields: this.fields,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      title: this.title,\n      keepFilters: this.keepFilters,\n      concatFilters: this.concatFilters,\n      hideRemoveAllDisclaimer: this.hideRemoveAllDisclaimer,\n      hideCloseDisclaimers: this.hideCloseDisclaimers,\n      pageCustomActions: this.pageCustomActions,\n      tableCustomActions: this.tableCustomActions,\n      quickSearchWidth: this.quickSearchWidth\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicTableOptions> = {\n      schema: [\n        {\n          nameProp: 'fields',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        },\n        {\n          nameProp: 'keepFilters'\n        },\n        {\n          nameProp: 'quickSearchWidth'\n        },\n        {\n          nameProp: 'concatFilters'\n        },\n        {\n          nameProp: 'hideRemoveAllDisclaimer'\n        },\n        {\n          nameProp: 'hideCloseDisclaimers'\n        },\n        {\n          nameProp: 'pageCustomActions',\n          merge: true,\n          keyForMerge: 'label'\n        },\n        {\n          nameProp: 'tableCustomActions',\n          merge: true,\n          keyForMerge: 'label'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n\n  private showRemove<T>(actionRemove: T): boolean {\n    const action = actionRemove ?? false;\n    if (typeof action === 'boolean') {\n      return action;\n    }\n    return true;\n  }\n\n  private updateFilterValue(filter) {\n    return this.fields.map(item => {\n      if (filter.hasOwnProperty(item.property)) {\n        item.initValue = filter[item.property];\n      }\n    });\n  }\n\n  private updatePageActions() {\n    this.pageActions = [...this._defaultPageActions, ...this._customPageListActions];\n  }\n\n  private updateTableActions() {\n    const defaultTableActionsWithoutActionDelete = this._defaultTableActions.filter(\n      tableAction => tableAction.label !== this.literals.tableActionDelete\n    );\n\n    const tableActionDelete = this._defaultTableActions.find(\n      tableAction => tableAction.label === this.literals.tableActionDelete\n    );\n\n    const newTableActions = [...defaultTableActionsWithoutActionDelete, ...this._customTableActions];\n\n    if (tableActionDelete) {\n      newTableActions.push(tableActionDelete);\n    }\n\n    this.tableActions = newTableActions;\n  }\n}\n","<po-page-dynamic-search\n  [p-actions]=\"pageActions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-hide-close-disclaimers]=\"hideCloseDisclaimers\"\n  [p-filters]=\"filters\"\n  [p-keep-filters]=\"keepFilters\"\n  [p-concat-filters]=\"concatFilters\"\n  [p-hide-remove-all-disclaimer]=\"hideRemoveAllDisclaimer\"\n  [p-quick-search-width]=\"quickSearchWidth\"\n  [p-title]=\"title\"\n  (p-advanced-search)=\"onAdvancedSearch($event)\"\n  (p-change-disclaimers)=\"onChangeDisclaimers($event)\"\n  (p-quick-search)=\"onQuickSearch($event)\"\n>\n  <po-table\n    [p-sort]=\"true\"\n    [p-actions]=\"tableActions\"\n    [p-actions-right]=\"actionRight\"\n    [p-selectable]=\"enableSelectionTable\"\n    [p-columns]=\"columns\"\n    [p-items]=\"items\"\n    [p-height]=\"height\"\n    [p-infinite-scroll]=\"infiniteScroll\"\n    [p-show-more-disabled]=\"!hasNext\"\n    (p-show-more)=\"showMore()\"\n    (p-sort-by)=\"onSort($event)\"\n    (p-change-visible-columns)=\"onChangeVisibleColumns($event)\"\n    (p-restore-column-manager)=\"onColumnRestoreManager($event)\"\n    (p-sort-by)=\"onSortBy($event)\"\n  >\n  </po-table>\n</po-page-dynamic-search>\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoTableModule } from '@po-ui/ng-components';\n\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\n\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * Módulo do template do po-page-dynamic-table.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoTableModule,\n    PoPageDynamicSearchModule,\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ],\n  declarations: [PoPageDynamicTableComponent],\n  exports: [PoPageDynamicTableComponent]\n})\nexport class PoPageDynamicTableModule {}\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\n  periodicity = 'single';\n  firstExecution = new Date();\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\n  recurrent = true;\n  frequency = {};\n\n  private getCurrentHour(date: Date): string {\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n    return `${hours}:${minutes}`;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\nimport { PoDynamicFormField } from '@po-ui/ng-components';\n\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\n@Injectable()\nexport class PoPageJobSchedulerService {\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PO-SCREEN-LOCK': 'true'\n  });\n\n  private endpoint = '/';\n\n  constructor(private http: HttpClient) {}\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    const newResouce = this.convertToJobScheduler(resource);\n\n    return this.http.post(`${this.endpoint}`, newResouce, { headers: this.headers });\n  }\n\n  getHeadProcesses() {\n    const headers = { 'X-PO-No-Error': 'true' };\n\n    return this.http.head(`${this.endpoint}/processes`, { headers });\n  }\n\n  // Busca parametros pelo processo id\n  getParametersByProcess(processId: string | number): Observable<any> {\n    return this.http\n      .get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\n      .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\n  }\n\n  // Busca um único recurso\n  getProcess(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\n  }\n\n  // Busca uma lista de processos\n  getProcesses(params: {} = {}): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes`, { params });\n  }\n\n  // Busca um único recurso\n  getResource(id: string | number): Observable<any> {\n    return this.http\n      .get(`${this.endpoint}/${id}`, { headers: this.headers })\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    const newResouce = this.convertToJobScheduler(resource);\n    return this.http.put(`${this.endpoint}/${id}`, newResouce, { headers: this.headers });\n  }\n\n  convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\n    const jobScheduler = { ...jobSchedulerInternal };\n\n    if (jobSchedulerInternal.periodicity) {\n      if (jobSchedulerInternal.periodicity === 'single') {\n        jobScheduler.recurrent = false;\n      } else {\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\n      }\n    }\n\n    if (jobSchedulerInternal.firstExecutionHour) {\n      jobScheduler.firstExecution = this.replaceHourFirstExecution(\n        jobSchedulerInternal.firstExecution,\n        jobSchedulerInternal.firstExecutionHour\n      );\n    }\n\n    if (jobSchedulerInternal.frequency && jobSchedulerInternal.frequency.type) {\n      jobScheduler.rangeExecutions = {\n        frequency: { ...jobSchedulerInternal.frequency }\n      };\n\n      if (jobSchedulerInternal.rangeLimitHour) {\n        const splitRangeLimitHour = jobSchedulerInternal.rangeLimitHour.split(':');\n\n        jobScheduler.rangeExecutions.rangeLimit = {\n          hour: parseInt(splitRangeLimitHour[0], 10),\n          minute: parseInt(splitRangeLimitHour[1], 10)\n        };\n      }\n\n      if (jobSchedulerInternal.rangeLimitDay) {\n        jobScheduler.rangeExecutions.rangeLimit = {\n          ...jobScheduler.rangeExecutions.rangeLimit,\n          day: jobSchedulerInternal.rangeLimitDay\n        };\n      }\n    }\n\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\n      delete jobScheduler.executionParameter;\n    }\n\n    this.removeInvalidKeys(jobScheduler);\n\n    return jobScheduler;\n  }\n\n  convertToJobSchedulerInternal(jobScheduler = <any>{}): PoJobSchedulerInternal {\n    const jobSchedulerInternal = { ...jobScheduler };\n\n    if (jobScheduler.firstExecution) {\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\n    }\n\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\n\n    if (jobScheduler.rangeExecutions) {\n      jobSchedulerInternal.rangeLimitHour = `${\n        jobScheduler.rangeExecutions.rangeLimit.hour < 10\n          ? '0' + jobScheduler.rangeExecutions.rangeLimit.hour\n          : jobScheduler.rangeExecutions.rangeLimit.hour\n      }:${\n        jobScheduler.rangeExecutions.rangeLimit.minute < 10\n          ? '0' + jobScheduler.rangeExecutions.rangeLimit.minute\n          : jobScheduler.rangeExecutions.rangeLimit.minute\n      }`;\n      jobSchedulerInternal.rangeLimitDay = jobScheduler.rangeExecutions.rangeLimit.day;\n      jobSchedulerInternal.frequency = {\n        type: jobScheduler.rangeExecutions.frequency.type,\n        value: jobScheduler.rangeExecutions.frequency.value\n      };\n    }\n\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\n\n    return jobSchedulerInternal;\n  }\n\n  private convertToPeriodicity(value: {\n    periodicity: string;\n    dayOfMonth?: string;\n    daysOfWeek?: number;\n    hour?: string;\n  }) {\n    const newValue = {};\n    const valuePeriodicity = value.periodicity;\n\n    if (valuePeriodicity) {\n      newValue[valuePeriodicity] = {};\n\n      if (valuePeriodicity === 'monthly') {\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\n      } else if (valuePeriodicity === 'weekly') {\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\n      }\n\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\n    }\n\n    return newValue;\n  }\n\n  private convertToPeriodicityInternal(value = <any>{}) {\n    if (value.monthly) {\n      return {\n        periodicity: 'monthly',\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\n        dayOfMonth: value.monthly.day\n      };\n    } else if (value.daily) {\n      return {\n        periodicity: 'daily',\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\n      };\n    } else if (value.weekly) {\n      return {\n        periodicity: 'weekly',\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\n        daysOfWeek: [...value.weekly.daysOfWeek]\n      };\n    } else {\n      return {\n        periodicity: 'single'\n      };\n    }\n  }\n\n  private getCurrentHour(date: Date): string {\n    const hours = addZero(date.getHours());\n    const minutes = addZero(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n  }\n\n  private getHourFirstExecution(firstExecutionDate: string): string {\n    return this.getCurrentHour(new Date(firstExecutionDate));\n  }\n\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\n    const invalidKeys = keys || [\n      'periodicity',\n      'hour',\n      'minute',\n      'day',\n      'daysOfWeek',\n      'dayOfMonth',\n      'firstExecutionHour',\n      'frequency',\n      'rangeLimitHour',\n      'rangeLimitDay'\n    ];\n\n    Object.keys(value).forEach(key => {\n      if (invalidKeys.includes(key)) {\n        delete value[key];\n      } else if (key === 'rangeExecutions' && value['periodicity'] === 'single') {\n        delete value[key];\n      }\n    });\n  }\n\n  private replaceHourFirstExecution(date: string, time: string): string {\n    const firstExecutionDate = new Date(date);\n\n    const timeSplited = time.split(':');\n\n    const hours = parseInt(timeSplited[0], 10);\n    const minutes = parseInt(timeSplited[1], 10);\n\n    firstExecutionDate.setHours(hours, minutes);\n\n    return convertDateToISOExtended(firstExecutionDate);\n  }\n\n  private returnValidExecutionParameter(parameter: object) {\n    const newParameter = { ...parameter };\n\n    for (const key in newParameter) {\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\n        delete newParameter[key];\n      }\n    }\n\n    return newParameter;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Input, Directive, OnDestroy } from '@angular/core';\n\nimport { PoBreadcrumb, PoDynamicFormField } from '@po-ui/ng-components';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description\n *\n * O `po-page-job-scheduler` é uma página para criação e atualização de agendamentos da execução de processos (Job Scheduler),\n * como por exemplo: a geração da folha de pagamento dos funcionários.\n *\n * Para utilizar esta página, basta informar o serviço (endpoint) para consumo,\n * sem a necessidade de criar componentes e tratamentos dos dados.\n *\n * Veja mais sobre os padrões utilizados nas requisições no [Guia de implementação de APIs](guides/api).\n */\n@Directive()\nexport class PoPageJobSchedulerBaseComponent implements OnDestroy {\n  /** Objeto com as propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * Endpoint usado pelo componente para busca dos processos e parâmetros que serão utilizados para criação e edição dos agendamentos.\n   *\n   * #### Processos\n   *\n   * Os processos são as tarefas que estarão disponíveis para o usuário poder fazer os agendamentos.\n   * Ao inicializar o componente, será feito uma requisição `GET` para o endpoint `{service-api}/processes`, para buscar\n   * essa lista de processos.\n   *\n   * Este endpoint `{service-api}/processes` deve retornar uma lista de objetos que seguem a definição de dados abaixo:\n   *\n   * ```\n   * GET {service-api}/processes\n   * ```\n   *\n   * ```\n   * {\n   *   items: [\n   *     { \"processID\": \"ac4f\", \"description\": \"Gerar folha de pagamento\" },\n   *     { \"processID\": \"df6l\", \"description\": \"Relatório de imposto a recolher\" },\n   *     { \"processID\": \"dk3p\", \"description\": \"Títulos em aberto\" },\n   *   ]\n   * }\n   * ```\n   *\n   * Desta forma será renderizado um componente para selecionar o processo e/ou filtrá-los.\n   *\n   * Para realizar o filtro de busca do processo, será feita uma requisição enviando o conteúdo digitado na busca através do\n   * parâmetro `search`. Da seguinte forma:\n   *\n   * ```\n   * GET {service-api}/processes?search=relatorio\n   * ```\n   *\n   * > Veja mais sobre paginação e filtros no [Guia de implementação de APIs](guides/api).\n   * Caso seja informada a propriedade `p-parameters` não serão realizadas as requisições de processos e nem de parametros automaticamente.\n   *\n   * Também é possível fazer um agendamento de um processo específico, sem que seja necessário um endpoint para busca desses\n   * processos. Então, caso o endpoint `{service-api}/processes` não seja válido, será apresentado um campo de entrada de\n   * texto para o usuário informar diretamente\n   * o **identificador do processo - `processID`** e ao salvar será enviado um `POST` para o endpoint difinido `serviceApi` conforme abaixo:\n   *\n   * ```\n   * POST {service-api}\n   * ```\n   *\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\n   *\n   * ```\n   * {\n   *   \"daily\": { \"hour\": 10, \"minute\": 12 },\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\n   *   \"recurrent\": true,\n   *   \"processID\": \"ac0405\"\n   *   ...\n   * }\n   * ```\n   *\n   * Caso seja necessário informar parâmetros e adicionar configurações no processo selecionado, será realizado um `GET`\n   * como exemplificado abaixo. Os parâmetros devem retornar uma lista de objetos que seguem a interface\n   * [PoDynamicFormField](/documentation/po-dynamic-form). Porém, caso utilizar a propriedade `p-parameters` o componente não\n   * realizará a busca automática e o campo de processos não será exibido.\n   *\n   * ```\n   * GET {service-api}/processes/:id/parameters\n   * ...\n   * {\n   *   items: [\n   *     { \"property\": \"vencimento\", type: \"date\" },\n   *     { \"property\": \"imposto-retido\", \"label\": \"Imposto Retido\", type: \"boolean\" }\n   *   ]\n   * }\n   * ```\n   *\n   * #### Salvar e Atualizar\n   *\n   * Para salvar o agendamento, será feita uma requisição de criação, passando os valores preenchidos pelo usuário via *payload*.\n   * Abaixo uma requisição `POST` disparada, onde as propriedades do *Job Scheduler* foram preenchidas:\n   *\n   * ```\n   *  POST {service-api}\n   * ```\n   *\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\n   *\n   * ```\n   * {\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\n   *   \"recurrent\": true,\n   *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\n   *   \"processID\": \"ac0405\",\n   *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\n   * }\n   * ```\n   *\n   * Caso queira que o componente carregue um agendamento já existente, deve ser incluído um parâmetro na rota chamado `id`.\n   *\n   * Exemplo de configuração de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicialização do template será disparado uma requisição para buscar o recurso que será editado.\n   *\n   * ```\n   * GET {service-api}/{id}\n   * ```\n   *\n   * Ao atualizar o agendamento, será disparado um `PUT` com os dados preenchidos.\n   * Veja abaixo uma requisição `PUT` disparada, onde a propriedade *recurrent* e *daily* foram atualizadas:\n   *\n   * ```\n   *  PUT {service-api}/{id}\n   * ```\n   *\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\n   *\n   * ```\n   * {\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\n   *   \"recurrent\": true,\n   *   \"processID\": \"ac0405\",\n   *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\n   *   \"processID\": \"ac0405\",\n   *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\n   * }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** Título da página. */\n  @Input('p-title') title: string;\n\n  /**\n   * Parâmetros que serão utilizados para criação e edição dos agendamentos.\n   *\n   * Ao utilizar esta propriedade, o componente não buscará automaticamente os parâmetros da API e o campo para preenchimento do processo não será exibido.\n   *\n   */\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\n\n  @Input('p-value') set value(value: any) {\n    this.model = this.poPageJobSchedulerService.convertToJobSchedulerInternal(value);\n  }\n\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\n\n  private _subscription = new Subscription();\n\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n\n  protected loadData(id: string | number) {\n    if (!id) {\n      this.model = this.model || new PoPageJobSchedulerInternal();\n      return;\n    }\n\n    this._subscription.add(\n      this.poPageJobSchedulerService.getResource(id).subscribe(\n        (response: PoJobSchedulerInternal) => {\n          this.model = response;\n        },\n        () => {\n          this.model = new PoPageJobSchedulerInternal();\n        }\n      )\n    );\n  }\n\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl }) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n}\n","export const poPageJobSchedulerLiteralsDefault = {\n  en: {\n    at: 'at',\n    back: 'Back',\n    next: 'Next',\n    periodicity: 'Periodicity',\n    execution: 'Execution',\n    process: 'Process',\n    enterProcess: 'Enter a process',\n    recurrent: 'Recurrent',\n    single: 'Single',\n    daily: 'Daily',\n    weekly: 'Weekly',\n    monthly: 'Monthly',\n    scheduling: 'Scheduling',\n    parameterization: 'Parameterization',\n    conclude: 'Conclude',\n    firstExecution: 'First Execution',\n    startTime: 'Start time',\n    endTime: 'End time',\n    time: 'Time',\n    hour: 'Hour',\n    minute: 'Minute',\n    day: 'Day',\n    endDay: 'End day',\n    startDay: 'Start day',\n    weekDays: 'Week days',\n    sunday: 'Sunday',\n    monday: 'Monday',\n    tuesday: 'Tuesday',\n    wednesday: 'Wednesday',\n    thursday: 'Thursday',\n    friday: 'Friday',\n    saturday: 'Saturday',\n    parameters: 'Parameters',\n    yes: 'Yes',\n    no: 'No',\n    notReported: 'Not reported',\n    periodicityData: 'Periodicity data',\n    confirmation: 'Confirmation',\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\n    parametersNotFound: 'Parameters not found.',\n    frequency: 'Frequency',\n    to: 'to',\n    from: 'from'\n  },\n  es: {\n    at: 'a las',\n    back: 'Volver',\n    next: 'Avanzar',\n    periodicity: 'Periodicidad',\n    execution: 'Ejecución',\n    process: 'Proceso',\n    enterProcess: 'Informe un proceso',\n    recurrent: 'Recurrente',\n    single: 'Única',\n    daily: 'Diaria',\n    weekly: 'Semanal',\n    monthly: 'Mensual',\n    scheduling: 'Programación',\n    parameterization: 'Parametrización',\n    conclude: 'Completar',\n    firstExecution: 'Primera ejecución',\n    startTime: 'Hora de inicio',\n    endTime: 'Hora de finalización',\n    time: 'Horário',\n    hour: 'Hora',\n    minute: 'Minute',\n    day: 'Día',\n    endDay: 'Último Día',\n    startDay: 'Día de inicio',\n    weekDays: 'Dias de la semana',\n    sunday: 'Domingo',\n    monday: 'Lunes',\n    tuesday: 'Martes',\n    wednesday: 'Miércoles',\n    thursday: 'Jueves',\n    friday: 'Viernes',\n    saturday: 'Sábado',\n    parameters: 'Parámetros',\n    yes: 'Sí',\n    no: 'No',\n    notReported: 'No informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'Confirmación',\n    confirmSaveMessage: '¿Está seguro de que desea completar esta programación de proceso?',\n    confirmUpdateMessage: '¿Está seguro de que desea cambiar esta programación de proceso?',\n    saveNotificationSuccessUpdate: 'Programación de proceso actualizada con éxito.',\n    saveNotificationSuccessSave: 'Programación de proceso salvo con éxito.',\n    parametersNotFound: 'No se encontraron parámetros.',\n    frequency: 'Frecuencia',\n    to: 'de',\n    from: 'a'\n  },\n  pt: {\n    at: 'às',\n    back: 'Voltar',\n    next: 'Avançar',\n    periodicity: 'Periodicidade',\n    execution: 'Execução',\n    process: 'Processo',\n    enterProcess: 'Informe um processo',\n    recurrent: 'Recorrente',\n    single: 'Única',\n    daily: 'Diária',\n    weekly: 'Semanal',\n    monthly: 'Mensal',\n    scheduling: 'Agendamento',\n    parameterization: 'Parametrização',\n    conclude: 'Concluir',\n    firstExecution: 'Primeira execução',\n    startTime: 'Horário inicial',\n    endTime: 'Horário final',\n    time: 'Horário',\n    hour: 'Hora',\n    minute: 'Minuto',\n    day: 'Dia',\n    endDay: 'Dia final',\n    startDay: 'Dia inicial',\n    weekDays: 'Dias de semana',\n    sunday: 'Domingo',\n    monday: 'Segunda-feira',\n    tuesday: 'Terça-feira',\n    wednesday: 'Quarta-feira',\n    thursday: 'Quinta-feira',\n    friday: 'Sexta-feira',\n    saturday: 'Sábado',\n    parameters: 'Parâmetros',\n    yes: 'Sim',\n    no: 'Não',\n    notReported: 'Não informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'Confirmação',\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\n    parametersNotFound: 'Parâmetros não foram encontrados.',\n    frequency: 'Frequência',\n    to: 'das',\n    from: 'até'\n  },\n  ru: {\n    at: 'в',\n    back: 'Назад',\n    next: 'Следующий',\n    periodicity: 'Периодичность',\n    execution: 'Выполнение',\n    process: 'Процесс',\n    enterProcess: 'Укажите процесс',\n    recurrent: 'Периодически',\n    single: 'Одиночный',\n    daily: 'Ежедневно',\n    weekly: 'Еженедельно',\n    monthly: 'Ежемесячно',\n    scheduling: 'Планирование',\n    parameterization: 'Параметризация',\n    conclude: 'Завершить',\n    firstExecution: 'Первичное выполнение',\n    startTime: 'начальное время',\n    endTime: 'время окончания',\n    time: 'расписание',\n    hour: 'Час',\n    day: 'День',\n    minute: 'минута',\n    endDay: 'последний день',\n    startDay: 'день начала',\n    weekDays: 'Рабочие дни',\n    sunday: 'Воскресенье',\n    monday: 'Понедельник',\n    tuesday: 'Вторник',\n    wednesday: 'Среда',\n    thursday: 'Четверг',\n    friday: 'Пятница',\n    saturday: 'Суббота',\n    parameters: 'Параметры',\n    yes: 'Да',\n    no: 'Нет',\n    notReported: 'Не сообщается',\n    periodicityData: 'Данные о периодичности',\n    confirmation: 'Подтверждение',\n    confirmSaveMessage: 'Вы уверены, что хотите завершить это расписание?',\n    confirmUpdateMessage: 'Вы уверены, что хотите обновить это расписание?',\n    saveNotificationSuccessUpdate: 'Расписание успешно обновлено',\n    saveNotificationSuccessSave: 'Расписание успешно сохранено ',\n    parametersNotFound: 'Параметры не найдены',\n    frequency: 'Частота',\n    to: 'с',\n    from: 'до'\n  }\n};\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoLookupFilter } from '@po-ui/ng-components';\n\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n@Injectable()\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) {}\n\n  getFilteredItems({ filter, page, pageSize }): Observable<any> {\n    const params = { page, pageSize, search: filter };\n\n    return this.poPageJobSchedulerService.getProcesses(params);\n  }\n\n  getObjectByValue(processId: string): Observable<any> {\n    return this.poPageJobSchedulerService.getProcess(processId);\n  }\n}\n","<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\"\n    >\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.time\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </div>\n\n  <hr />\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\"\n      (p-change)=\"onChangePeriodicityOptions($event)\"\n    >\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-12\"\n          name=\"containsFrequency\"\n          [(ngModel)]=\"containsFrequency\"\n          [p-label]=\"literals.frequency\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n          (p-change)=\"onChangeContainsFrequency($event)\"\n        >\n        </po-switch>\n        <ng-container *ngIf=\"containsFrequency\">\n          <po-radio-group\n            class=\"po-md-10\"\n            name=\"frequencyType\"\n            p-required\n            [(ngModel)]=\"value.frequency.type\"\n            [p-columns]=\"3\"\n            [p-options]=\"frequencyOptions\"\n            (p-change)=\"onChangeFrequencyOptions()\"\n          >\n          </po-radio-group>\n\n          <po-number class=\"po-md-2\" name=\"frequencyValue\" p-required [(ngModel)]=\"value.frequency.value\"> </po-number>\n        </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\n\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n        >\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      *ngIf=\"noParameters\"\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\"\n    >\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inválido'\"\n      [p-label]=\"dayLabel\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <po-number\n      *ngIf=\"containsFrequency\"\n      class=\"po-md-3\"\n      name=\"rangeLimitDay\"\n      [(ngModel)]=\"value.rangeLimitDay\"\n      p-required\n      [p-error-pattern]=\"'Dia inválido'\"\n      [p-label]=\"literals.endDay\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"hourLabel\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n\n    <po-input\n      *ngIf=\"containsFrequency && value.frequency.type !== 'day'\"\n      class=\"po-md-2\"\n      name=\"rangeLimitHour\"\n      [(ngModel)]=\"value.rangeLimitHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.endTime\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </ng-template>\n</form>\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@po-ui/ng-components';\n\nimport { isTypeof } from '../../../utils/util';\n\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\n\n@Component({\n  selector: 'po-page-job-scheduler-execution',\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\n})\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\n  @ViewChild('formExecution', { static: true }) form: NgForm;\n\n  // templates\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\n\n  @Input('p-is-edit') isEdit: boolean = false;\n\n  @Input('p-literals') literals = <any>{};\n\n  @Input('p-no-parameters') noParameters: Boolean = true;\n\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\n\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\n  existProcessAPI = true;\n  minDateFirstExecution = new Date();\n  periodicityOptions: Array<PoRadioGroupOption> = [];\n  periodicityTemplates: { daily: TemplateRef<any>; weekly: TemplateRef<any>; monthly: TemplateRef<any> };\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\n  weekDays: Array<PoCheckboxGroupOption> = [];\n  frequencyOptions: Array<PoRadioGroupOption> = [];\n  containsFrequency = false;\n  frequency: string = 'hour';\n  rangeLimitHour: string;\n\n  private _value: any = {};\n\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n\n    this.containsFrequency = this._value.frequency && this._value.frequency.value ? true : false;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService\n  ) {}\n\n  get startDateFirstExecution() {\n    return this.isEdit ? undefined : this.minDateFirstExecution;\n  }\n\n  get hourLabel() {\n    return this.containsFrequency ? this.literals.startTime : this.literals.time;\n  }\n\n  get dayLabel() {\n    return this.containsFrequency ? this.literals.startDay : this.literals.day;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.subscribeProcessIdValueChanges();\n\n      if (this.value.periodicity) {\n        this.frequencyOptions = this.frequencyOptions.map(frequencyOption => ({\n          ...frequencyOption,\n          disabled: frequencyOption.value === 'day' && this.value.periodicity !== 'monthly'\n        }));\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.periodicityTemplates = {\n      daily: this.dailyTemplate,\n      monthly: this.monthlyTemplate,\n      weekly: this.weeklyTempalte\n    };\n\n    if (this.noParameters) {\n      this.checkExistsProcessesAPI();\n    }\n\n    this.periodicityOptions = this.getPeriodicityOptions();\n    this.weekDays = this.getWeekDays();\n    this.frequencyOptions = this.getFrequencyOptions();\n  }\n\n  onChangeContainsFrequency(containsFrequency) {\n    if (containsFrequency) {\n      this.value.frequency = { type: 'hour', value: null };\n    } else {\n      this.value.frequency = {};\n    }\n\n    this.value.rangeLimitHour = null;\n    this.value.rangeLimitDay = null;\n    this.value.dayOfMonth = null;\n  }\n\n  onChangePeriodicityOptions(periodicity) {\n    this.frequencyOptions = this.frequencyOptions.map(frequencyOption => ({\n      ...frequencyOption,\n      disabled: frequencyOption.value === 'day' && periodicity !== 'monthly'\n    }));\n\n    this.value.frequency.type = null;\n  }\n\n  onChangeFrequencyOptions() {\n    this.value.rangeLimitHour = null;\n  }\n\n  private checkExistsProcessesAPI() {\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\n      this.existProcessAPI = false;\n    });\n  }\n\n  private getPeriodicityOptions() {\n    return [\n      { label: this.literals.single, value: 'single' },\n      { label: this.literals.daily, value: 'daily' },\n      { label: this.literals.weekly, value: 'weekly' },\n      { label: this.literals.monthly, value: 'monthly' }\n    ];\n  }\n\n  private getFrequencyOptions() {\n    return [\n      { label: this.literals.day, value: 'day' },\n      { label: this.literals.hour, value: 'hour' },\n      { label: this.literals.minute, value: 'minute' }\n    ];\n  }\n\n  private getWeekDays() {\n    return [\n      { label: this.literals.sunday, value: 'Sunday' },\n      { label: this.literals.monday, value: 'Monday' },\n      { label: this.literals.tuesday, value: 'Tuesday' },\n      { label: this.literals.wednesday, value: 'Wednesday' },\n      { label: this.literals.thursday, value: 'Thursday' },\n      { label: this.literals.friday, value: 'Friday' },\n      { label: this.literals.saturday, value: 'Saturday' }\n    ];\n  }\n\n  private subscribeProcessIdValueChanges() {\n    this.form.controls['processID']?.valueChanges.subscribe(processId => {\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\n    });\n  }\n}\n","<ng-container *ngIf=\"parameters && parameters.length; then formFieldsTemplate; else parametersNotFoundTemplate\">\n</ng-container>\n\n<ng-template #parametersNotFoundTemplate>\n  <div class=\"po-text-center\">\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.parametersNotFound }}\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <form #parametersForm=\"ngForm\">\n    <po-dynamic-form p-group-form [p-fields]=\"parameters\" [p-value]=\"value\"> </po-dynamic-form>\n  </form>\n</ng-template>\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoDynamicFormField } from '@po-ui/ng-components';\n\n@Component({\n  selector: 'po-page-job-scheduler-parameters',\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\n})\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\n  @ViewChild('parametersForm') form: NgForm;\n\n  @Input('p-literals') literals = <any>{};\n\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\n\n  @Input('p-value') value;\n\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  ngAfterViewInit() {\n    if (this.form) {\n      setTimeout(() => {\n        this.form.valueChanges.subscribe(value => {\n          this.valueChange.emit(value);\n        });\n      });\n    }\n  }\n}\n","<div class=\"po-md-12\">\n  <po-info\n    *ngIf=\"noParameters\"\n    [p-label]=\"literals.process\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"value.processID\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.periodicity\" [p-orientation]=\"infoOrientation\" [p-value]=\"periodicityValue\"> </po-info>\n\n  <po-info\n    *ngIf=\"frequencyValue !== ''\"\n    [p-label]=\"literals.frequency\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"frequencyValue\"\n  >\n  </po-info>\n\n  <po-info\n    *ngIf=\"value.periodicity !== 'single'\"\n    [p-label]=\"literals.execution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"executionValue\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.recurrent\" [p-orientation]=\"infoOrientation\" [p-value]=\"recurrentValue\"> </po-info>\n\n  <po-info [p-label]=\"literals.firstExecution\" [p-orientation]=\"infoOrientation\" [p-value]=\"firstExecutionValue\">\n  </po-info>\n</div>\n\n<po-widget *ngIf=\"parameters && parameters.length\" class=\"po-pt-1 po-pb-1 po-md-12\" [p-title]=\"literals.parameters\">\n  <po-dynamic-view [p-fields]=\"parameters\" [p-value]=\"value.executionParameter\"> </po-dynamic-view>\n</po-widget>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { PoDynamicViewField, PoInfoOrientation } from '@po-ui/ng-components';\n\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\n\n@Component({\n  selector: 'po-page-job-scheduler-summary',\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\n})\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\n  @Input('p-literals') literals = <any>{};\n\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\n\n  @Input('p-value') value: PoJobSchedulerInternal = <any>{};\n\n  @Input('p-no-parameters') noParameters: Boolean = true;\n\n  executionValue = '';\n  firstExecutionValue = '';\n  infoOrientation = PoInfoOrientation.Horizontal;\n  periodicityValue = '';\n  frequencyValue = '';\n  rangeLimitHour = '';\n  rangeLimitDay = '';\n  recurrentValue = '';\n\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    const {\n      periodicity,\n      hour,\n      dayOfMonth,\n      daysOfWeek,\n      recurrent,\n      firstExecution,\n      firstExecutionHour,\n      frequency,\n      rangeLimitHour,\n      rangeLimitDay\n    } = this.value;\n\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\n    if (frequency) {\n      this.frequencyValue = this.getFrequencyValue(frequency, periodicity);\n    }\n    this.executionValue = this.getExecutionValue(\n      periodicity,\n      hour,\n      daysOfWeek,\n      dayOfMonth,\n      rangeLimitHour,\n      rangeLimitDay\n    );\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\n    this.recurrentValue = this.getRecurrentValue(recurrent);\n  }\n\n  private getFrequencyValue(frequency, periodicity) {\n    return frequency['value'] && frequency['type'] && periodicity !== 'single'\n      ? `${frequency['value']} - ${frequency['type']}`\n      : '';\n  }\n\n  private getExecutionValue(\n    periodicity: string,\n    hour?: string,\n    daysOfWeek?: Array<string>,\n    dayOfMonth?: number,\n    rangeLimitHour?: string,\n    rangeLimitDay?: number\n  ) {\n    switch (periodicity) {\n      case 'daily':\n        return this.getHourLabel(hour, rangeLimitHour);\n      case 'monthly':\n        return this.getMonthlyLabelExecution(dayOfMonth, hour, rangeLimitHour, rangeLimitDay);\n      case 'weekly':\n        return this.getWeeklyLabelExecution(daysOfWeek, hour, rangeLimitHour);\n      default:\n        return this.literals.notReported;\n    }\n  }\n\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\n    if (firstExecution) {\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\n\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private getHourLabel(hour: string, rangeLimitHour?) {\n    return `${rangeLimitHour ? this.literals.from : this.literals.at} ${hour || '00:00'} ${\n      rangeLimitHour ? this.literals.to + ' ' + rangeLimitHour : ''\n    }`;\n  }\n\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string, rangeLimitHour?: string, rangeLimitDay?: number) {\n    const hourLabel = this.getHourLabel(hour, rangeLimitHour);\n\n    return `${rangeLimitDay ? this.literals.from : ''} ${dayOfMonth} ${rangeLimitDay ? this.literals.to : ''} ${\n      rangeLimitDay ? rangeLimitDay : ''\n    } ${hourLabel}`;\n  }\n\n  private getPeriodicityLabel(periodicity) {\n    switch (periodicity) {\n      case 'daily':\n        return this.literals.daily;\n      case 'monthly':\n        return this.literals.monthly;\n      case 'weekly':\n        return this.literals.weekly;\n      default:\n        return this.literals.single;\n    }\n  }\n\n  private getRecurrentValue(recurrent: boolean): string {\n    return recurrent ? this.literals.yes : this.literals.no;\n  }\n\n  private getSorterWeekDays() {\n    return {\n      'sunday': 0,\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6\n    };\n  }\n\n  private getTranslateWeekDay(day: string): string {\n    const days = {\n      Sunday: this.literals.sunday,\n      Monday: this.literals.monday,\n      Tuesday: this.literals.tuesday,\n      Wednesday: this.literals.wednesday,\n      Thursday: this.literals.thursday,\n      Friday: this.literals.friday,\n      Saturday: this.literals.saturday\n    };\n\n    return days[day] || '';\n  }\n\n  private getWeekDaysLabel(days: Array<string> = []): string {\n    const weekDaysSorted = this.sortWeekDays(days);\n\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\n  }\n\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string, rangeLimitHour?: string) {\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour, rangeLimitHour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private sortWeekDays(days: Array<string> = []) {\n    const sorterWeekDays = this.getSorterWeekDays();\n\n    return days.sort((a: string, b: string) => {\n      const currDay = a.toLowerCase();\n      const nextDay = b.toLowerCase();\n\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\n    });\n  }\n}\n","<po-page-default [p-actions]=\"jobSchedulerActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <div class=\"po-row\">\n    <po-stepper\n      class=\"po-lg-3 po-xl-2\"\n      p-sequential=\"true\"\n      [p-orientation]=\"stepperOrientation\"\n      [p-step]=\"step\"\n      [p-steps]=\"steps\"\n      (p-change-step)=\"nextStep($event)\"\n    >\n    </po-stepper>\n\n    <po-container class=\"po-lg-8 po-xl-6\">\n      <form #formScheduler=\"ngForm\">\n        <div class=\"po-row\">\n          <po-page-job-scheduler-execution\n            [p-no-parameters]=\"parametersEmpty\"\n            [hidden]=\"step !== 1\"\n            #schedulerExecution\n            class=\"po-md-12\"\n            [p-is-edit]=\"isEdit\"\n            [p-literals]=\"literals\"\n            [p-value]=\"model\"\n            (p-change-process)=\"onChangeProcess($event)\"\n          >\n          </po-page-job-scheduler-execution>\n\n          <po-page-job-scheduler-parameters\n            *ngIf=\"step === 2\"\n            #schedulerParameters\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters || []\"\n            [(p-value)]=\"model.executionParameter\"\n          >\n          </po-page-job-scheduler-parameters>\n\n          <po-page-job-scheduler-summary\n            [p-no-parameters]=\"parametersEmpty\"\n            *ngIf=\"step === 3\"\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters\"\n            [p-value]=\"publicValues\"\n          >\n          </po-page-job-scheduler-summary>\n        </div>\n      </form>\n    </po-container>\n  </div>\n</po-page-default>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoDialogService,\n  PoDynamicFormField,\n  PoLanguageService,\n  PoNotificationService,\n  PoPageAction,\n  PoStepperItem,\n  PoStepperStatus,\n  poLocaleDefault\n} from '@po-ui/ng-components';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @docsExtends PoPageJobSchedulerBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-job-scheduler-background-process\" title=\"PO Page Job Scheduler - Background Process\">\n *  <file name=\"sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.html\"> </file>\n *  <file name=\"sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-page-job-scheduler',\n  templateUrl: './po-page-job-scheduler.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    `\n      po-container .po-container {\n        overflow-y: unset;\n      }\n    `\n  ]\n})\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\n  @ViewChild('schedulerParameters') schedulerParameters: { form: NgForm };\n\n  isEdit = false;\n  literals = {\n    ...poPageJobSchedulerLiteralsDefault[poLocaleDefault]\n  };\n\n  publicValues: PoJobSchedulerInternal;\n  saveOperation: Observable<any>;\n  step: number = 1;\n  parametersEmpty: boolean = true;\n\n  readonly steps: Array<PoStepperItem> = [];\n\n  private backPageAction: PoPageAction = {\n    label: this.literals.back,\n    action: this.nextStepOperation.bind(this, 'back'),\n    disabled: this.isDisabledBack.bind(this)\n  };\n\n  private concludePageAction: PoPageAction = {\n    label: this.literals.conclude,\n    action: this.confirmJobScheduler.bind(this)\n  };\n\n  private nextPageAction: PoPageAction = {\n    label: this.literals.next,\n    action: this.nextStepOperation.bind(this, 'next'),\n    disabled: this.isDisabledAdvance.bind(this)\n  };\n\n  private concludePageActions: Array<PoPageAction> = [this.concludePageAction, this.backPageAction];\n\n  private nextPageActions: Array<PoPageAction> = [this.nextPageAction, this.backPageAction];\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  jobSchedulerActions: Array<PoPageAction> = [...this.nextPageActions];\n\n  constructor(\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    protected poPageJobSchedulerService: PoPageJobSchedulerService,\n    languageService: PoLanguageService\n  ) {\n    super(poPageJobSchedulerService);\n\n    const language = languageService.getShortLanguage();\n\n    this.literals = {\n      ...this.literals,\n      ...poPageJobSchedulerLiteralsDefault[language]\n    };\n\n    this.backPageAction.label = this.literals.back;\n    this.concludePageAction.label = this.literals.conclude;\n    this.nextPageAction.label = this.literals.next;\n\n    this.steps = [\n      { label: this.literals.scheduling },\n      { label: this.literals.parameterization },\n      { label: this.literals.conclude }\n    ];\n  }\n\n  get stepperOrientation(): 'horizontal' | 'vertical' {\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\n  }\n\n  ngOnInit() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    this.isEdit = !!paramId;\n\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\n\n    if (this.parameters.length) {\n      this.parametersEmpty = false;\n    }\n\n    this.loadData(paramId);\n  }\n\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\n    const stepsLength = this.steps.length;\n\n    if (nextStep === stepsLength) {\n      this.jobSchedulerActions = [...this.concludePageActions];\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\n      this.jobSchedulerActions = [...this.nextPageActions];\n    }\n  }\n\n  nextStep(stepNumber: number) {\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\n      return;\n    }\n\n    if (\n      stepNumber > 2 &&\n      this.schedulerParameters &&\n      this.schedulerParameters.form &&\n      this.schedulerParameters.form.invalid\n    ) {\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\n      return;\n    }\n    this.setModelRecurrent();\n\n    const model = JSON.parse(JSON.stringify(this.model));\n\n    if (stepNumber === this.steps.length) {\n      this.publicValues = this.hidesSecretValues(model);\n    }\n\n    this.changePageActionsBySteps(this.step, stepNumber);\n\n    const steps = this.steps[this.step - 1];\n    this.step = stepNumber;\n\n    if (steps) {\n      steps.status = PoStepperStatus.Done;\n    }\n  }\n\n  onChangeProcess(process: { processId: string; existAPI: boolean }) {\n    if (process.existAPI && process.processId && this.parametersEmpty) {\n      this.getParametersByProcess(process.processId);\n      if (!this.isEdit) {\n        this.model.executionParameter = {};\n      }\n    }\n  }\n\n  private confirmJobScheduler() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\n\n    this.poDialogService.confirm({\n      title: this.literals.confirmation,\n      message: confirmMessage,\n      confirm: () => {\n        const model = { ...this.model };\n\n        this.save(model, paramId);\n      }\n    });\n  }\n\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\n    await saveOperation.toPromise();\n    this.poNotification.success(msgSuccess);\n    this.resetJobSchedulerForm();\n  }\n\n  private getParametersByProcess(process: any) {\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\n      this.parameters = parameters;\n    });\n  }\n\n  private hidesSecretValues(model: PoJobSchedulerInternal): PoJobSchedulerInternal {\n    const hiddenSecretValue = '**********';\n    this.parameters.forEach(parameter => {\n      if (this.isSecretParameter(model, parameter)) {\n        model.executionParameter[parameter.property] = hiddenSecretValue;\n      }\n    });\n    return model;\n  }\n\n  private isDisabledAdvance(): boolean {\n    const componentByStep = {\n      1: this.schedulerExecution,\n      2: this.schedulerParameters\n    };\n\n    return componentByStep[this.step]?.form?.invalid || false;\n  }\n\n  private isDisabledBack(): boolean {\n    return this.step === 1;\n  }\n\n  private isSecretParameter(model: PoJobSchedulerInternal, parameter: PoDynamicFormField): boolean {\n    return (\n      model.executionParameter &&\n      parameter.hasOwnProperty('secret') &&\n      parameter['secret'] === true &&\n      model.executionParameter.hasOwnProperty(parameter.property)\n    );\n  }\n\n  private nextStepOperation(operation?: 'back' | 'next') {\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\n\n    this.nextStep(stepNumber);\n  }\n\n  private resetJobSchedulerForm() {\n    this.schedulerExecution.form.reset();\n\n    // radiogroup não estava atribuindo novo valor, fica vermelho sem o timetout.\n    setTimeout(() => {\n      this.model = new PoPageJobSchedulerInternal();\n\n      this.step = 1;\n      this.steps.forEach(step => {\n        step.status = PoStepperStatus.Default;\n      });\n\n      this.jobSchedulerActions = [...this.nextPageActions];\n    });\n  }\n\n  private save(model: PoJobSchedulerInternal, paramId) {\n    const saveOperation = paramId\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\n      : this.poPageJobSchedulerService.createResource(model);\n\n    const msgSuccess = paramId\n      ? this.literals.saveNotificationSuccessUpdate\n      : this.literals.saveNotificationSuccessSave;\n\n    this.emitSuccessMessage(msgSuccess, saveOperation);\n  }\n\n  private setModelRecurrent() {\n    this.model.recurrent = this.model.periodicity === 'single' ? false : this.model.recurrent;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport {\n  PoButtonModule,\n  PoContainerModule,\n  PoDialogModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoFieldModule,\n  PoInfoModule,\n  PoPageModule,\n  PoStepperModule,\n  PoWidgetModule\n} from '@po-ui/ng-components';\n\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\n\n@NgModule({\n  declarations: [\n    PoPageJobSchedulerComponent,\n    PoPageJobSchedulerExecutionComponent,\n    PoPageJobSchedulerParametersComponent,\n    PoPageJobSchedulerSummaryComponent\n  ],\n  exports: [PoPageJobSchedulerComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoButtonModule,\n    PoContainerModule,\n    PoDialogModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoInfoModule,\n    PoPageModule,\n    PoStepperModule,\n    PoWidgetModule\n  ],\n  providers: [PoPageJobSchedulerService, PoPageJobSchedulerLookupService]\n})\nexport class PoPageJobSchedulerModule {}\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * *Enum* para definição do tipo de autenticação.\n */\nexport enum PoPageLoginAuthenticationType {\n  /** Autenticação Basic */\n  Basic = 'Basic',\n\n  /** Autenticação Bearer */\n  Bearer = 'Bearer'\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\n\n@Injectable()\nexport class PoPageLoginService {\n  constructor(private http: HttpClient) {}\n\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\n    if (type === PoPageLoginAuthenticationType.Bearer) {\n      loginForm.password = btoa(loginForm.password);\n      return this.http.post(url, loginForm);\n    } else {\n      const user = `(${loginForm.login}:${loginForm.password})`;\n      const headers = new HttpHeaders({\n        'Authorization': `${type} ` + btoa(user)\n      });\n      delete loginForm.login;\n      delete loginForm.password;\n      return this.http.post(url, loginForm, { headers });\n    }\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { EventEmitter, Input, OnDestroy, Output, Directive } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof } from './../../utils/util';\n\nimport { PoLanguageService, poLocaleDefault, PoLanguage, poLanguageDefault } from '@po-ui/ng-components';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\nconst poPageLoginContentMaxLength = 40;\n\nexport const poPageLoginLiteralsDefault = {\n  en: <PoPageLoginLiterals>{\n    title: 'Welcome',\n    loginErrorPattern: 'Invalid Login',\n    loginHint: `Your login user was given to you at your first day.\n    If you don't have this information contact support`,\n    loginPlaceholder: 'Insert your e-mail',\n    passwordErrorPattern: 'Invalid Password',\n    passwordPlaceholder: 'Insert your password',\n    customFieldErrorPattern: 'Invalid value',\n    customFieldPlaceholder: 'Please enter a value',\n    rememberUser: 'Automatic login',\n    rememberUserHint: 'You can disable this option in system configuration',\n    submitLabel: 'Enter',\n    submittedLabel: 'Loading...',\n    forgotPassword: 'Forgot your Password?',\n    highlightInfo: '',\n    registerUrl: 'New register',\n    titlePopover: 'Oops!',\n    forgotYourPassword: 'Forgot your password?',\n    ifYouTryHarder: 'If you try ',\n    attempts: '{0} more time(s) ',\n    yourUserWillBeBlocked:\n      'without success your user will be blocked and you will be left 24 hours without being able to access :(',\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\n    iForgotMyPassword: 'I forgot my password',\n    welcome: 'Welcome',\n    support: 'Support'\n  },\n  es: <PoPageLoginLiterals>{\n    title: 'Bienvenido',\n    loginErrorPattern: 'Login inválido',\n    loginHint: `Su usuario ha sido entregado para usted en su primer día.\n    Si no tiene esta información, póngase en contacto con el soporte técnico`,\n    loginPlaceholder: 'Inserte su e-mail',\n    passwordErrorPattern: 'Contraseña inválida',\n    passwordPlaceholder: 'Inserte su contraseña',\n    customFieldErrorPattern: 'Valor no válido.',\n    customFieldPlaceholder: 'Por favor introduzca un valor',\n    rememberUser: 'Inicio de sesión automáticamente',\n    rememberUserHint: 'Puede deshabilitar esta opción en el menú del sistema.',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Cargando...',\n    forgotPassword: 'Olvidaste tu contraseña?',\n    highlightInfo: '',\n    registerUrl: 'Nuevo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Olvidaste tu contraseña?',\n    ifYouTryHarder: 'Si intenta más ',\n    attempts: '{0} vez/veces ',\n    yourUserWillBeBlocked: 'sin éxito su usuario sera bloqueado y usted vás permanecer 24 horas sin poder acceder a :(',\n    createANewPasswordNow:\n      '¡Mejor crear una nueva contraseña ahora! Usted podrá entrar en el sistema inmediatamente después.',\n    iForgotMyPassword: 'Olvide mi contraseña',\n    welcome: 'Bienvenido',\n    support: 'Soporte'\n  },\n  pt: <PoPageLoginLiterals>{\n    title: 'Bem-vindo',\n    loginErrorPattern: 'Login inválido',\n    loginHint: `Seu usuário foi entregue a você no seu primeiro dia.\n    Caso não tenha mais essa informação contacte o suporte`,\n    loginPlaceholder: 'Insira seu e-mail',\n    passwordErrorPattern: 'Senha inválida',\n    passwordPlaceholder: 'Insira sua senha',\n    customFieldErrorPattern: 'Valor inválido.',\n    customFieldPlaceholder: 'Por favor insira um valor',\n    rememberUser: 'Logar automaticamente',\n    rememberUserHint: 'Você pode desabilitar essa opção no menu do sistema',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Carregando...',\n    forgotPassword: 'Esqueceu sua senha?',\n    highlightInfo: '',\n    registerUrl: 'Novo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Esqueceu sua senha?',\n    ifYouTryHarder: 'Se tentar mais ',\n    attempts: '{0} vez(es) ',\n    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :(',\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',\n    iForgotMyPassword: 'Esqueci minha senha',\n    welcome: 'Boas-vindas',\n    support: 'Suporte'\n  },\n  ru: <PoPageLoginLiterals>{\n    title: 'Добро пожаловать!',\n    loginErrorPattern: 'Неверный логин',\n    loginHint: `Ваш логин был предоставлен вам в первый день.\n    Если у вас нет этой информации, обратитесь в службу поддержки`,\n    loginPlaceholder: 'Вставьте свой адрес электронной почты',\n    passwordErrorPattern: 'Неверный пароль',\n    passwordPlaceholder: 'Введите свой пароль',\n    customFieldErrorPattern: 'Неверное значение.',\n    customFieldPlaceholder: 'Пожалуйста, введите значение',\n    rememberUser: 'Автоматический вход',\n    rememberUserHint: 'Вы можете отключить эту опцию в конфигурации системы',\n    submitLabel: 'Войти',\n    submittedLabel: '3агрузка...',\n    forgotPassword: 'Забыли пароль?',\n    highlightInfo: '',\n    registerUrl: 'Новый регистр',\n    titlePopover: 'Ой!',\n    forgotYourPassword: 'Забыли пароль?',\n    ifYouTryHarder: 'Если вы безуспешно попытаетесь войти еще ',\n    attempts: '{0} раз(а) ',\n    yourUserWillBeBlocked: 'Ваш пользователь будет заблокирован, и Вы останетесь на 24 часа без возможности доступа :(',\n    createANewPasswordNow: 'Лучше создайте новый пароль сейчас! Вы сможете сразу войти в систему.',\n    iForgotMyPassword: 'Я забыл свой пароль',\n    welcome: 'добро пожаловать',\n    support: 'Поддержка'\n  }\n};\n\nexport const poPageLoginLiteralIn = {\n  en: 'in',\n  es: 'en',\n  pt: 'em',\n  ru: 'в'\n};\n\n/**\n * @description\n *\n * O componente `po-page-login` é utilizado como template para tela de login.\n * Com ele é possível definirmos valores para usuário, senha e definir ações para recuperação de senha e gravação de dados do usuário.\n * Também é possível inserir uma imagem em conjunto com um texto de destaque.\n *\n *\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticação do usuário, bastando\n * definir uma url para requisição da autenticação. A flexibilidade e praticidade podem chegar a um nível em que o desenvolvimento\n * da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de login de usuário.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\n *\n *\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@po-ui/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\n@Directive()\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\n  /**\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulário de login, caso a propriedade\n   * não seja preenchida o formulário será centralizado no espaço disponível.\n   *\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\n   *\n   * Além da imagem, é possível adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\n   * um valor para a literal `highlightInfo`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   * Exemplos de valores válidos:\n   * - **local**: `./assets/images/login-background.png`\n   * - **url externa**: `https://po-ui.io/assets/images/login-background.png`\n   *\n   * > Essa propriedade é ignorada para aplicações mobile.\n   */\n  @Input('p-background') background?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaço se mantém preservado porém vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Expressão regular para validar o campo de login, caso a expressão não seja atentida, a literal `loginErrorPattern`\n   * será exibida.\n   *\n   * Exemplos de valores válidos:\n   * - email: `[expressao-regular-email]`\n   * - cpf: `[expressao-regular-cpf]`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\n   */\n  @Input('p-login-pattern') loginPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Expressão regular para validar o campo de password, caso a expressão não seja atentida, a literal `passwordErrorPattern`\n   * será exibida.\n   *\n   * Exemplos de valores válidos:\n   * - Apenas números: `\\d?`\n   * - Letras mínusculas: `\\z?`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\n   */\n  @Input('p-password-pattern') passwordPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapé.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado quando o usuário alterar o input do campo login.\n   *\n   * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-login-change') loginChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * Evento disparado ao submeter o formulário de login (apertando `Enter` dentro dos campos ou pressionando o botão de confirmação).\n   *\n   * Esse evento receberá como parâmetro um objeto do tipo `PoPageLogin` com os dados informados no formulário.\n   *\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\n   *\n   * > Para mais detalhes consulte a documentação sobre a interface `PoPageLogin` mais abaixo.\n   */\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado quando o usuário alterar o input do campo password.\n   *\n   * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-password-change') passwordChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado quando o usuário alterar o idioma da página.\n   *\n   * Esse evento receberá como parâmetro um objeto do tipo `PoLanguage` com a linguagem selecionada.\n   *\n   */\n  @Output('p-language-change') languageChange: EventEmitter<PoLanguage> = new EventEmitter<PoLanguage>();\n\n  allLoginErrors: Array<string> = [];\n  allPasswordErrors: Array<string> = [];\n  customFieldObject: PoPageLoginCustomField;\n  customFieldType: string;\n  loginSubscription: Subscription;\n  password: string;\n  rememberUser: boolean = false;\n  selectedLanguage: string;\n  showExceededAttemptsWarning = false;\n\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\n  private _authenticationUrl: string;\n  private _blockedUrl: string;\n  private _contactEmail: string;\n  private _customField: string | PoPageLoginCustomField;\n  private _environment?: string;\n  private _exceededAttemptsWarning?: number;\n  private _hideRememberUser: boolean = false;\n  private _literals: PoPageLoginLiterals;\n  private _loading?: boolean = false;\n  private _login: string;\n  private _loginErrors: Array<string> = [];\n  private _passwordErrors: Array<string> = [];\n  private _productName: string;\n  private _recovery: string | PoPageLoginRecovery | Function;\n  private _registerUrl: string;\n  private _support: string | Function;\n  private _languagesList: Array<PoLanguage>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ao informar um valor do tipo `string`, o mesmo será aplicado como a chave do campo customizado e utilizará\n   * os valores padrões contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\n   *\n   * Existe a possibilidade de informar um objeto que segue a definição da interface `PoPageLoginCustomField`, onde\n   * através dos parâmetros enviados pode gerar um `po-input`, `po-combo` especificamente para serviços\n   * ou `po-select` para valores fixos.\n   *\n   * Abaixo seguem os exemplos de cada tipo de campo.\n   *\n   * `po-input`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   pattern: '[a-z]',\n   *   errorPattern: 'Invalid value'\n   * }\n   * ```\n   *\n   * `po-combo`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   url: 'https://po-ui.io/sample/api/comboOption/domains',\n   *   fieldValue: 'nickname'\n   * }\n   * ```\n   *\n   * `po-select`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\n   * }\n   * ```\n   *\n   * Caso o customField possua options, url e fieldValue preenchidos, será priorizado o po-select\n   * utilizando o options.\n   *\n   */\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\n    if (value) {\n      if (isTypeof(value, 'string')) {\n        this.customFieldType = 'input';\n        this._customField = value;\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\n        return;\n      }\n\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\n        this._customField = value;\n        this.customFieldObject = <PoPageLoginCustomField>value;\n\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\n          this.customFieldType = 'input';\n        } else {\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\n        }\n\n        return;\n      }\n    }\n\n    this._customField = undefined;\n    this.customFieldObject = undefined;\n  }\n\n  get customField(): string | PoPageLoginCustomField {\n    return this._customField;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Personaliza o e-mail que é exibido na mensagem de dica de login padrão para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n  }\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto customizado que fica entre a logo e a mensagem de boas-vindas.\n   */\n  @Input('p-product-name') set productName(value: string) {\n    this._productName = value;\n  }\n  get productName() {\n    return this._productName;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Adiciona uma `tag` abaixo do título que especifica o ambiente que o usuário está fazendo o login.\n   *\n   * > Essa propriedade limita o texto em 40 caracteres.\n   */\n  @Input('p-environment') set environment(environment: string) {\n    if (environment && environment.length > poPageLoginContentMaxLength) {\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\n    } else {\n      this._environment = environment;\n    }\n  }\n  get environment() {\n    return this._environment;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\n   * O aviso será exibido somente se a quantidade for maior que zero.\n   *\n   * > Caso tenha algum valor atribuído para o atributo `p-authentication-url` e o retorno da requisição estiver atribuindo valor\n   * para o `p-exceeded-attempts-warning`, o valor considerado será o do retorno da requisição.\n   *\n   * @default `0`\n   */\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\n    this._exceededAttemptsWarning = convertToInt(value);\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n  }\n\n  get exceededAttemptsWarning(): number {\n    return this._exceededAttemptsWarning;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde a função \"Lembrar usuário\" do formulário de login.\n   *\n   * Quando essa propriedade é setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` será sempre\n   * `false`.\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\n\n    if (this._hideRememberUser) {\n      this.rememberUser = false;\n    }\n  }\n  get hideRememberUser(): boolean {\n    return this._hideRememberUser;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-login`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    attempts: '{0} vez(es) ',\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',\n   *    forgotPassword: 'Esqueceu sua senha?',\n   *    forgotYourPassword: 'Esqueceu sua senha?',\n   *    highlightInfo: '',\n   *    iForgotMyPassword: 'Esqueci minha senha',\n   *    ifYouTryHarder: 'Se tentar mais ',\n   *    welcome: 'Boas-vindas',\n   *    loginErrorPattern: 'Login obrigatório',\n   *    loginHint: 'Caso não possua usuário entre em contato com o suporte',\n   *    loginLabel: 'Insira seu usuário',\n   *    loginPlaceholder: 'Insira seu usuário de acesso',\n   *    passwordErrorPattern: 'Senha obrigatória',\n   *    passwordLabel: 'Insira sua senha',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    customFieldErrorPattern: 'Campo customizado inválido',\n   *    customFieldPlaceholder: 'Por favor insira um valor',\n   *    registerUrl: 'Novo registro',\n   *    rememberUser: 'Lembrar usuário',\n   *    rememberUserHint: 'Esta opção pode ser desabilitada nas configurações do sistema',\n   *    submitLabel: 'Acessar sistema',\n   *    submittedLabel: 'Carregando...',\n   *    titlePopover: 'Opa!',\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :('\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    loginPlaceholder: 'Insira seu usuário de acesso',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    submitLabel: 'Acessar sistema'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-login\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-login>\n   * ```\n   *\n   *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).\n   *  > É também possível alternar o objeto padrão de literais através do seletor de idiomas localizado na parte inferior do template,\n   * nesse caso, há também a opção do idioma russo.\n   */\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\n    this._literals = value;\n  }\n\n  get literals() {\n    return this._literals;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um estado de carregamento ao botão de *login*.\n   *\n   * > É necessário atribuir `true` à esta propriedade na função definida em `p-login-submit`.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor do modelo do campo de login.\n   */\n  @Input('p-login') set login(value: string) {\n    this._login = value;\n\n    if (!this.authenticationUrl) {\n      this.loginChange.emit(this._login);\n    }\n  }\n\n  get login(): string {\n    return this._login;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\n   */\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\n    this._loginErrors = value || [];\n    this.setLoginErrors(this._loginErrors);\n  }\n  get loginErrors() {\n    return this._loginErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\n   */\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\n    this._passwordErrors = value || [];\n    this.setPasswordErrors(this._passwordErrors);\n  }\n  get passwordErrors() {\n    return this._passwordErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um link abaixo do formulário de login para que os usuários da aplicação façam a recuperação dos dados de autenticação.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota válida;\n   * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-login>\n   *   [recovery]=\"this.myRecovery.bind(this)\">\n   * </po-page-login>\n   * ```\n   *\n   * - **PoPageLoginRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,\n   *   **email** para contato e **máscara** do campo de telefone.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso a aplicação tenha um link para novos cadastros, informe uma url externa ou uma rota válida, dessa\n   * forma será exibido um link abaixo do formulário de login para os usuários da aplicação.\n   *\n   * Exemplos de valores válidos:\n   * - **local**: `/home`\n   * - **url externa**: `https://po-ui.io`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\n   */\n  @Input('p-register-url') set registerUrl(value: string) {\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get registerUrl(): string {\n    return this._registerUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe o tipo de esquema da autenticação, sendo suportados apenas os valores `Basic` e `Bearer`.\n   *\n   * > Caso o tipo definido seja `Basic`, o componente fará uma requisição `POST` contendo:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * > Caso o tipo definido seja `Bearer`, o componente fará uma requisição `POST` contendo:\n   *\n   * ```\n   * body {\n   *  login: login,\n   *  password: base64(password),\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * @default `PoPageLoginAuthenticationType.Basic`\n   */\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\n    this._authenticationType = (<any>Object).values(PoPageLoginAuthenticationType).includes(value)\n      ? value\n      : PoPageLoginAuthenticationType.Basic;\n  }\n\n  get authenticationType(): PoPageLoginAuthenticationType {\n    return this._authenticationType;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisição do recurso. Quando preenchido, o método `p-login-submit` será ignorado e o\n   * componente adquirirá automatização para o processo de autenticação.\n   *\n   * ### Processos\n   * Ao digitar um valor válido no campo de login/password e pressionar **Enter**, o componente fará uma requisição `POST`\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * Em caso de **sucesso**, o objeto de retorno é armazenado no `sessionStorage` e o usuário é redirecionado para a página inicial da\n   * aplicação `/`.\n   *\n   * ```\n   * 200:\n   *  {\n   *    user: user\n   *  }\n   * ```\n   *\n   * Em caso de **erro** na autenticação, espera-se o seguinte retorno:\n   *\n   * ```\n   * 400/401\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl\n   *  }\n   * ```\n   *\n   * > Pode-se atribuir uma quantidade máxima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\n   * `p-password-errors` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl,\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\n   *    loginWarnings?: [loginWarnings],\n   *    passwordWarnings?: [passwordWarnings]\n   *  }\n   * ```\n   *\n   * > Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero), poderá ser passado um valor para o\n   * atributo `p-blocked-url` e o usuário será redirecionado para uma tela de bloqueio.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,\n   * dispensa-se qualquer menção e/ou importação do componente `po-page-login` no restante da aplicação. O exemplo abaixo exemplifica\n   * a forma dinâmica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e também como ele se comunica\n   * com o serviço para efetuação do processo de autenticação do usuário e solicitação de nova senha.\n   * Basta definir nas configurações de rota:\n   *\n   *\n   * ```\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@po-ui/ng-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'login', component: PoPageLoginComponent, data: {\n   *         serviceApi: 'https://po-ui.io/sample/api/users/authentication',\n   *         environment: 'development',\n   *         recovery: {\n   *           url: 'https://po-ui.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.po@po-ui.com',\n   *           phoneMask: '9-999-999-9999'\n   *         },\n   *         registerUrl: '/new-password',\n   *         authenticationType: PoPageLoginAthenticationType.Basic\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de autenticação, o `environment` alimenta a propriedade\n   * `p-environment`, `recovery` é a interface `PoPageLoginRecovery` responsável pelas especificações contidas na modal de recuperação de\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\n   *\n   * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get authenticationUrl(): string {\n    return this._authenticationUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicação tenha um link de bloqueio de usuário,\n   * informe uma url externa ou uma rota válida, dessa forma em caso de bloqueio o usuário será redirecionado.\n   */\n  @Input('p-blocked-url') set blockedUrl(value: string) {\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get blockedUrl(): string {\n    return this._blockedUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um botão para suporte.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: URL externa ou uma rota válida;\n   * - **Function**: Função a ser disparada ao clicar no botão de suporte;\n   * ```\n   * <po-page-login>\n   *   [p-support]=\"this.mySupport.bind(this)\">\n   * </po-page-login>\n   * ```\n   *\n   */\n  @Input('p-support') set support(value: string | Function) {\n    this._support = value;\n  }\n\n  get support() {\n    return this._support;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Coleção de idiomas que o componente irá tratar e disponibilizará para o usuário escolher.\n   *\n   * Caso essa propriedade não seja utilizada o componente mostrará no combo os idiomas que ele suporta por padrão.\n   *\n   * Caso a coleção tenha um idioma, a página estará nesse idioma e não mostrará o combo.\n   *\n   * Caso seja passado um array vazio, a página terá o idioma configurado no `i18n` e não mostrará o combo de seleção.\n   *\n   * > Se for passado um idioma não suportado, será preciso passar as literais pela propriedade `p-literals`.\n   *\n   *\n   */\n  @Input('p-languages') set languagesList(languagesList: Array<PoLanguage>) {\n    if (languagesList) {\n      if (languagesList.length) {\n        this._languagesList = languagesList;\n      } else {\n        this._languagesList = poLanguageDefault.filter(language => language.language === this.language);\n      }\n    }\n  }\n\n  get languagesList(): Array<PoLanguage> {\n    if (this._languagesList) {\n      return this._languagesList;\n    }\n    return poLanguageDefault;\n  }\n\n  get showLanguage() {\n    return this.languagesList.length > 1;\n  }\n\n  get language(): string {\n    return this.selectedLanguage || getShortBrowserLanguage();\n  }\n\n  get pageLoginLiterals(): PoPageLoginLiterals {\n    const loginHintWithContactEmail = this.contactEmail\n      ? this.concatenateLoginHintWithContactEmail(this.contactEmail)\n      : undefined;\n\n    return {\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\n      ...poPageLoginLiteralsDefault[this.language],\n      ...loginHintWithContactEmail,\n      ...this.literals\n    };\n  }\n\n  constructor(\n    private loginService: PoPageLoginService,\n    public router: Router,\n    public poLanguageService: PoLanguageService\n  ) {\n    this.selectedLanguage = this.poLanguageService.getShortLanguage();\n  }\n\n  ngOnDestroy() {\n    if (this.loginSubscription) {\n      this.loginSubscription.unsubscribe();\n    }\n  }\n\n  closePopover() {\n    this.showExceededAttemptsWarning = false;\n  }\n\n  onLoginSubmit(): void {\n    const loginForm: PoPageLogin = {\n      login: this.login,\n      password: this.password,\n      rememberUser: this.rememberUser\n    };\n\n    if (this.customField) {\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\n    }\n\n    if (this.authenticationUrl) {\n      this.loading = true;\n      this.loginSubscription = this.loginService\n        .onLogin(this.authenticationUrl, this.authenticationType, loginForm)\n        .subscribe(\n          data => {\n            this.setValuesToProperties();\n            sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\n            this.openInternalLink('/');\n            this.loading = false;\n          },\n          error => {\n            if (error.error.code === '400' || error.error.code === '401') {\n              this.setValuesToProperties(error);\n              this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\n            }\n            this.loading = false;\n          }\n        );\n    } else {\n      this.loginSubmit.emit(loginForm);\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n    }\n  }\n\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\n    return { property };\n  }\n\n  private openExternalLink(url: string) {\n    window.open(url, '_blank');\n  }\n\n  private openInternalLink(url: string) {\n    this.router.navigate([url]);\n  }\n\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\n    if (attempts === 0 && blockedUrl) {\n      this.showExceededAttemptsWarning = false;\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\n    }\n  }\n\n  private setValuesToProperties(result?) {\n    if (result) {\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\n      this.loginErrors = result.error.loginWarnings;\n      this.passwordErrors = result.error.passwordWarnings;\n      this.blockedUrl = result.error.blockedUrl;\n    } else {\n      this.exceededAttemptsWarning = 0;\n      this.loginErrors = [];\n      this.passwordErrors = [];\n      this.blockedUrl = '';\n    }\n  }\n\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\n\n  protected abstract setLoginErrors(value: Array<string>): void;\n\n  protected abstract setPasswordErrors(value: Array<string>): void;\n}\n","<div class=\"po-page-login-popover-container\">\n  <div class=\"po-page-login-popover\">\n    <div class=\"po-page-login-popover-arrow\"></div>\n    <div class=\"po-page-login-popover-content\">\n      <p class=\"po-font-text-bold po-page-login-popover-title\">\n        {{ literals?.titlePopover }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.forgotYourPassword }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.ifYouTryHarder }}\n        <span class=\"po-font-text-bold po-page-login-popover-attempts\">\n          {{ literals?.attempts | poI18n: remainingAttempts }} </span\n        >{{ literals?.yourUserWillBeBlocked }}\n      </p>\n      <br />\n      <p class=\"po-font-text\">\n        {{ literals?.createANewPasswordNow }}\n      </p>\n      <div *ngIf=\"recovery\" class=\"po-font-text-bold po-mt-1 po-page-login-popover-link-container\">\n        <a *ngIf=\"recoveryType === 'internalLink'\" class=\"po-page-login-popover-link\" [routerLink]=\"recovery\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"recoveryType === 'externalLink'\" class=\"po-page-login-popover-link\" [href]=\"recovery\" target=\"_blank\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"!recoveryType\" class=\"po-page-login-popover-link\" (click)=\"onForgotPasswordClick(recovery)\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { isExternalLink, isTypeof } from '../../../utils/util';\n\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\n\n@Component({\n  selector: 'po-page-login-popover',\n  templateUrl: './po-page-login-popover.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.\n */\nexport class PoPageLoginPopoverComponent {\n  @Input('p-literals') literals: PoPageLoginLiterals;\n\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor é um link interno ou externo */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /** define se a mensagem deverá ser exibida caso seja maior que 0(zero) */\n  @Input('p-remaining-attempts') remainingAttempts: number;\n\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o método 'openUrl' do componente 'po-page-login' */\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\n\n  recoveryType: string;\n\n  private _recovery: string | Function | PoPageLoginRecovery;\n\n  onForgotPasswordClick(recovery) {\n    this.forgotPassword.emit(recovery);\n  }\n}\n","<button class=\"po-page-login-support\" (click)=\"activateSupport()\" [hidden]=\"!support\">\n  <span class=\"po-icon po-icon-help\"></span>\n  {{ pageLoginLiterals?.support }}\n</button>\n\n<po-page-background\n  #pageLogin\n  [p-show-select-language]=\"showLanguage\"\n  [p-languages]=\"languagesList\"\n  [p-initial-language]=\"initialSelectLanguage\"\n  [p-background]=\"background\"\n  [p-highlight-info]=\"pageLoginLiterals.highlightInfo\"\n  [p-logo]=\"logo\"\n  [p-secondary-logo]=\"secondaryLogo\"\n  (p-selected-language)=\"onSelectedLanguage($event)\"\n>\n  <header class=\"po-page-login-header\">\n    <h1 class=\"po-mb-md-4 po-mb-sm-1\">\n      <div class=\"po-page-login-header-product-name\">{{ productName }}</div>\n      <po-tag *ngIf=\"environment\" p-type=\"warning\" [p-value]=\"environment\"> </po-tag>\n    </h1>\n    <div class=\"po-page-login-header-welcome po-mb-md-4 po-mb-sm-2\">{{ pageLoginLiterals.welcome }}</div>\n  </header>\n\n  <form #loginForm=\"ngForm\" class=\"po-page-login-form\">\n    <div class=\"po-row\">\n      <div class=\"po-lg-12\">\n        <div class=\"po-page-login-hint po-page-login-info-container\">\n          <po-login\n            class=\"po-page-login-info-field\"\n            [class.po-page-login-info-field-dynamic]=\"\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\n            \"\n            name=\"login\"\n            [(ngModel)]=\"login\"\n            p-auto-focus\n            p-required\n            [p-label]=\"pageLoginLiterals.loginLabel\"\n            [p-pattern]=\"loginPattern\"\n            [p-placeholder]=\"pageLoginLiterals.loginPlaceholder\"\n            (click)=\"closePopover()\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n            (p-change-model)=\"changeLoginModel()\"\n          >\n          </po-login>\n\n          <div\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\n            class=\"po-page-login-info-icon-container\"\n            [class.po-page-login-info-icon-container-dynamic]=\"\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\n            \"\n          >\n            <span\n              *ngIf=\"pageLoginLiterals.loginHint\"\n              class=\"po-icon po-field-icon po-icon-info\"\n              p-tooltip-position=\"right\"\n              [p-tooltip]=\"pageLoginLiterals.loginHint\"\n            >\n            </span>\n          </div>\n        </div>\n\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\n          <div\n            *ngFor=\"let error of allLoginErrors\"\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\n          >\n            <span class=\"po-icon po-icon-exclamation\"></span>\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"po-lg-12\">\n        <div class=\"po-page-login-password-container\">\n          <po-password\n            class=\"po-page-login-field-size po-page-login-password-item\"\n            [class.po-page-login-field-size-dynamic]=\"\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\n            \"\n            name=\"password\"\n            [(ngModel)]=\"password\"\n            p-required\n            [p-label]=\"pageLoginLiterals.passwordLabel\"\n            [p-pattern]=\"passwordPattern\"\n            [p-placeholder]=\"pageLoginLiterals.passwordPlaceholder\"\n            (click)=\"closePopover()\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n            (p-change-model)=\"changePasswordModel()\"\n          >\n          </po-password>\n          <div\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\n            class=\"po-page-login-password-item po-page-login-password-popover-container\"\n          >\n            <po-page-login-popover\n              *ngIf=\"showExceededAttemptsWarning && exceededAttemptsWarning\"\n              [p-literals]=\"pageLoginLiterals\"\n              [p-recovery]=\"recovery\"\n              [p-remaining-attempts]=\"exceededAttemptsWarning\"\n              (p-forgot-password)=\"openUrl($event)\"\n            >\n            </po-page-login-popover>\n          </div>\n        </div>\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\n          <div\n            *ngFor=\"let error of allPasswordErrors\"\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\n          >\n            <span class=\"po-icon po-icon-exclamation\"></span>\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\n          </div>\n        </div>\n      </div>\n\n      <po-input\n        *ngIf=\"customField && customFieldType === 'input'\"\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldInput\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-error-pattern]=\"customFieldObject.errorPattern || pageLoginLiterals.customFieldErrorPattern\"\n        [p-pattern]=\"customFieldObject.pattern\"\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n        (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n      >\n      </po-input>\n\n      <po-combo\n        *ngIf=\"customField && customFieldType === 'combo'\"\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldCombo\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-field-value]=\"customFieldObject.fieldValue\"\n        [p-filter-service]=\"customFieldObject.url\"\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n      >\n      </po-combo>\n\n      <po-select\n        *ngIf=\"customField && customFieldType === 'select'\"\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldSelect\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n        [p-options]=\"customFieldObject.options\"\n      >\n      </po-select>\n\n      <div class=\"po-lg-12\">\n        <div *ngIf=\"!hideRememberUser\" class=\"po-page-login-hint po-page-login-info-container\">\n          <po-switch\n            class=\"po-page-login-info-field po-lg-7 po-offset-lg-5 po-offset-xl-5\"\n            name=\"rememberUser\"\n            [(ngModel)]=\"rememberUser\"\n            p-label-position=\"1\"\n            [p-label-off]=\"pageLoginLiterals.rememberUser\"\n            [p-label-on]=\"pageLoginLiterals.rememberUser\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n          >\n          </po-switch>\n\n          <div\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\n            class=\"po-page-login-info-icon-container po-page-login-info-icon-remember-user\"\n            [class.po-page-login-info-icon-container-dynamic]=\"!pageLoginLiterals.rememberUserHint\"\n          >\n            <span\n              *ngIf=\"pageLoginLiterals.rememberUserHint\"\n              class=\"po-icon po-field-icon po-icon-info\"\n              p-tooltip-position=\"right\"\n              [p-tooltip]=\"pageLoginLiterals.rememberUserHint\"\n            >\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <po-button\n        [class.po-page-login-button-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\n        class=\"po-lg-12 po-page-login-button po-page-login-field-size\"\n        p-kind=\"primary\"\n        [p-disabled]=\"loginForm.invalid\"\n        [p-label]=\"loading ? pageLoginLiterals.submittedLabel : pageLoginLiterals.submitLabel\"\n        [p-loading]=\"loading\"\n        (p-click)=\"onLoginSubmit()\"\n      >\n      </po-button>\n\n      <div *ngIf=\"recovery\" class=\"po-page-login-recovery-link\">\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(recovery)\">{{ pageLoginLiterals.forgotPassword }}</a>\n      </div>\n\n      <div *ngIf=\"registerUrl\" class=\"po-page-login-register-link\">\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(registerUrl)\">{{ pageLoginLiterals.registerUrl }}</a>\n      </div>\n    </div>\n  </form>\n</po-page-background>\n","import { AbstractControl, NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  IterableDiffers,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { PoLanguageService } from '@po-ui/ng-components';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoComponentInjectorService } from '@po-ui/ng-components';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport {\n  PoPageLoginBaseComponent,\n  poPageLoginLiteralIn,\n  poPageLoginLiteralsDefault\n} from './po-page-login-base.component';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @docsExtends PoPageLoginBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-login-basic\" title=\"PO Page Login Basic\">\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-labs\" title=\"PO Page Login Labs\">\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-human-resources\" title=\"PO Page Login - Human Resources\">\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-automatic-service\" title=\"PO Page Login - Automatic Service\">\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-login',\n  templateUrl: './po-page-login.component.html'\n})\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\n\n  initialSelectLanguage: string;\n\n  private componentRef: ComponentRef<any> = null;\n  private differ: any;\n  private readonly customPasswordError = { custom: false };\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private poComponentInjector: PoComponentInjectorService,\n    differs: IterableDiffers,\n    loginService: PoPageLoginService,\n    router: Router,\n    poLanguageService: PoLanguageService\n  ) {\n    super(loginService, router, poLanguageService);\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewChecked() {\n    if (this.differ) {\n      this.validateArrayChanges(this.differ, [\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\n      ]);\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n    this.selectedLanguage = this.initializeLanguage();\n    this.initialSelectLanguage = this.selectedLanguage;\n  }\n\n  activateSupport() {\n    switch (typeof this.support) {\n      case 'string': {\n        this.setUrlRedirect(this.support);\n        break;\n      }\n      case 'function': {\n        this.support();\n        break;\n      }\n    }\n  }\n\n  changeLoginModel() {\n    if (this.authenticationUrl) {\n      this.loginErrors = [];\n    } else {\n      this.setLoginErrors(this.loginErrors);\n      this.loginChange.emit(this.login);\n    }\n  }\n\n  changePasswordModel() {\n    if (this.authenticationUrl) {\n      this.passwordErrors = [];\n    } else {\n      this.setPasswordErrors(this.passwordErrors);\n      this.passwordChange.emit(this.password);\n    }\n  }\n\n  onSelectedLanguage(language: string) {\n    this.languageChange.emit(this.languagesList.find(languageItem => languageItem.language === language));\n    this.selectedLanguage = language;\n  }\n\n  openUrl(recovery: any): void {\n    switch (typeof recovery) {\n      case 'string': {\n        this.setUrlRedirect(recovery);\n        break;\n      }\n      case 'function': {\n        recovery();\n        break;\n      }\n      case 'object': {\n        this.createModalPasswordRecoveryComponent(recovery);\n        break;\n      }\n    }\n  }\n\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\n\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\n  }\n\n  protected setLoginErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['login'];\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\n  }\n\n  protected setPasswordErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['password'];\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\n    }\n  }\n\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\n  }\n\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\n  }\n\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private generateLoginError() {\n    if (this.loginErrors && this.loginErrors.length) {\n      this.setLoginErrors(this.loginErrors);\n    } else {\n      const control = this.loginForm.form.controls['login'];\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private generatePasswordError() {\n    if (this.passwordErrors && this.passwordErrors.length) {\n      this.setPasswordErrors(this.passwordErrors);\n    } else {\n      const control = this.loginForm.form.controls['password'];\n\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private resetControl(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\n    if (control) {\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\n\n      if (errors && errors.length && (control.valid || control.pristine)) {\n        control.markAsTouched();\n        control.markAsDirty();\n        control.setErrors(this.customPasswordError);\n      }\n    }\n  }\n\n  private setUrlRedirect(url) {\n    isExternalLink(url) ? window.open(url, '_blank') : this.router.navigate([url]);\n  }\n\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>; callback: any }>) {\n    array.forEach(element => {\n      const changes = differ.diff(element.array);\n      if (changes) {\n        element.callback();\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  private initializeLanguage() {\n    const language = this.languagesList.find(languageItem => languageItem.language === this.language);\n    return language?.language || this.languagesList[0].language;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@po-ui/ng-components';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageLoginComponent } from './po-page-login.component';\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @description\n *\n * Módulo do template do po-page-login.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule, PoPageBackgroundModule, PoModule],\n  declarations: [PoPageLoginComponent, PoPageLoginPopoverComponent],\n  exports: [PoPageLoginComponent],\n  providers: [PoPageLoginService]\n})\nexport class PoPageLoginModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\n\n@NgModule({\n  imports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ],\n  exports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ]\n})\nexport class PoComponentsModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from './po-page-dynamic/po-page-dynamic.module';\n\n@NgModule({\n  imports: [PoPageCustomizationModule, PoPageDynamicModule],\n  exports: [PoPageCustomizationModule, PoPageDynamicModule]\n})\nexport class PoServicesModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoServicesModule } from './services/services.module';\n\n@NgModule({\n  imports: [PoComponentsModule, PoServicesModule],\n  exports: [PoComponentsModule, PoServicesModule]\n})\nexport class PoTemplatesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i3.PoModalPasswordRecoveryService","_c0","i2.PoPageChangePasswordService","i3","_c2","i3.PoPageDynamicService","i4.PoPageDynamicDetailActionsService","i5.PoPageCustomizationService","i4.PoPageCustomizationService","i5.PoPageDynamicEditActionsService","i2.PoPageCustomizationService","util.convertToInt","util.mapObjectByProperties","util.valuesFromObject","util.removeKeysProperties","util.mapArrayByProperties","i5.PoPageDynamicTableActionsService","i1.PoPageJobSchedulerService","i2.PoPageJobSchedulerLookupService","i1.PoPageJobSchedulerLookupService","i2","i4.PoPageJobSchedulerService","i1.PoPageLoginService","i3.PoPageLoginService"],"mappings":"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"}