import { NgModule } from '@angular/core';
import { PoActiveOverlayModule } from './po-active-overlay/po-active-overlay.module';
import { PoColorPaletteModule } from './po-color-palette/po-color-palette.module';
import { PoComponentInjectorModule } from './po-component-injector/po-component-injector.module';
import { PoControlPositionModule } from './po-control-position/po-control-position.module';
import { PoDateTimeModule } from './po-date/po-date.module';
import { PoDialogModule } from './po-dialog/po-dialog.module';
import { PoI18nPipe } from './po-i18n/po-i18n.pipe';
import { PoLanguageModule } from './po-language/po-language.module';
import { PoNotificationModule } from './po-notification/po-notification.module';
import * as i0 from "@angular/core";
export class PoServicesModule {
}
PoServicesModule.ɵfac = function PoServicesModule_Factory(t) { return new (t || PoServicesModule)(); };
PoServicesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PoServicesModule });
PoServicesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [PoActiveOverlayModule,
        PoColorPaletteModule,
        PoComponentInjectorModule,
        PoControlPositionModule,
        PoDateTimeModule,
        PoDialogModule,
        PoLanguageModule,
        PoNotificationModule, PoActiveOverlayModule,
        PoColorPaletteModule,
        PoComponentInjectorModule,
        PoControlPositionModule,
        PoDateTimeModule,
        PoDialogModule,
        PoNotificationModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoServicesModule, [{
        type: NgModule,
        args: [{
                declarations: [PoI18nPipe],
                imports: [
                    PoActiveOverlayModule,
                    PoColorPaletteModule,
                    PoComponentInjectorModule,
                    PoControlPositionModule,
                    PoDateTimeModule,
                    PoDialogModule,
                    PoLanguageModule,
                    PoNotificationModule
                ],
                exports: [
                    PoActiveOverlayModule,
                    PoColorPaletteModule,
                    PoComponentInjectorModule,
                    PoControlPositionModule,
                    PoDateTimeModule,
                    PoDialogModule,
                    PoI18nPipe,
                    PoNotificationModule
                ],
                providers: [],
                bootstrap: []
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(PoServicesModule, { declarations: [PoI18nPipe], imports: [PoActiveOverlayModule,
        PoColorPaletteModule,
        PoComponentInjectorModule,
        PoControlPositionModule,
        PoDateTimeModule,
        PoDialogModule,
        PoLanguageModule,
        PoNotificationModule], exports: [PoActiveOverlayModule,
        PoColorPaletteModule,
        PoComponentInjectorModule,
        PoControlPositionModule,
        PoDateTimeModule,
        PoDialogModule,
        PoI18nPipe,
        PoNotificationModule] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9zZXJ2aWNlcy9zZXJ2aWNlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNyRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUNqRyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOztBQTJCaEYsTUFBTSxPQUFPLGdCQUFnQjs7Z0ZBQWhCLGdCQUFnQjtrRUFBaEIsZ0JBQWdCO3NFQXRCekIscUJBQXFCO1FBQ3JCLG9CQUFvQjtRQUNwQix5QkFBeUI7UUFDekIsdUJBQXVCO1FBQ3ZCLGdCQUFnQjtRQUNoQixjQUFjO1FBQ2QsZ0JBQWdCO1FBQ2hCLG9CQUFvQixFQUdwQixxQkFBcUI7UUFDckIsb0JBQW9CO1FBQ3BCLHlCQUF5QjtRQUN6Qix1QkFBdUI7UUFDdkIsZ0JBQWdCO1FBQ2hCLGNBQWM7UUFFZCxvQkFBb0I7dUZBS1gsZ0JBQWdCO2NBekI1QixRQUFRO2VBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUMxQixPQUFPLEVBQUU7b0JBQ1AscUJBQXFCO29CQUNyQixvQkFBb0I7b0JBQ3BCLHlCQUF5QjtvQkFDekIsdUJBQXVCO29CQUN2QixnQkFBZ0I7b0JBQ2hCLGNBQWM7b0JBQ2QsZ0JBQWdCO29CQUNoQixvQkFBb0I7aUJBQ3JCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIseUJBQXlCO29CQUN6Qix1QkFBdUI7b0JBQ3ZCLGdCQUFnQjtvQkFDaEIsY0FBYztvQkFDZCxVQUFVO29CQUNWLG9CQUFvQjtpQkFDckI7Z0JBQ0QsU0FBUyxFQUFFLEVBQUU7Z0JBQ2IsU0FBUyxFQUFFLEVBQUU7YUFDZDs7d0ZBQ1ksZ0JBQWdCLG1CQXhCWixVQUFVLGFBRXZCLHFCQUFxQjtRQUNyQixvQkFBb0I7UUFDcEIseUJBQXlCO1FBQ3pCLHVCQUF1QjtRQUN2QixnQkFBZ0I7UUFDaEIsY0FBYztRQUNkLGdCQUFnQjtRQUNoQixvQkFBb0IsYUFHcEIscUJBQXFCO1FBQ3JCLG9CQUFvQjtRQUNwQix5QkFBeUI7UUFDekIsdUJBQXVCO1FBQ3ZCLGdCQUFnQjtRQUNoQixjQUFjO1FBQ2QsVUFBVTtRQUNWLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQWN0aXZlT3ZlcmxheU1vZHVsZSB9IGZyb20gJy4vcG8tYWN0aXZlLW92ZXJsYXkvcG8tYWN0aXZlLW92ZXJsYXkubW9kdWxlJztcbmltcG9ydCB7IFBvQ29sb3JQYWxldHRlTW9kdWxlIH0gZnJvbSAnLi9wby1jb2xvci1wYWxldHRlL3BvLWNvbG9yLXBhbGV0dGUubW9kdWxlJztcbmltcG9ydCB7IFBvQ29tcG9uZW50SW5qZWN0b3JNb2R1bGUgfSBmcm9tICcuL3BvLWNvbXBvbmVudC1pbmplY3Rvci9wby1jb21wb25lbnQtaW5qZWN0b3IubW9kdWxlJztcbmltcG9ydCB7IFBvQ29udHJvbFBvc2l0aW9uTW9kdWxlIH0gZnJvbSAnLi9wby1jb250cm9sLXBvc2l0aW9uL3BvLWNvbnRyb2wtcG9zaXRpb24ubW9kdWxlJztcbmltcG9ydCB7IFBvRGF0ZVRpbWVNb2R1bGUgfSBmcm9tICcuL3BvLWRhdGUvcG8tZGF0ZS5tb2R1bGUnO1xuaW1wb3J0IHsgUG9EaWFsb2dNb2R1bGUgfSBmcm9tICcuL3BvLWRpYWxvZy9wby1kaWFsb2cubW9kdWxlJztcbmltcG9ydCB7IFBvSTE4blBpcGUgfSBmcm9tICcuL3BvLWkxOG4vcG8taTE4bi5waXBlJztcbmltcG9ydCB7IFBvTGFuZ3VhZ2VNb2R1bGUgfSBmcm9tICcuL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLm1vZHVsZSc7XG5pbXBvcnQgeyBQb05vdGlmaWNhdGlvbk1vZHVsZSB9IGZyb20gJy4vcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5tb2R1bGUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtQb0kxOG5QaXBlXSxcbiAgaW1wb3J0czogW1xuICAgIFBvQWN0aXZlT3ZlcmxheU1vZHVsZSxcbiAgICBQb0NvbG9yUGFsZXR0ZU1vZHVsZSxcbiAgICBQb0NvbXBvbmVudEluamVjdG9yTW9kdWxlLFxuICAgIFBvQ29udHJvbFBvc2l0aW9uTW9kdWxlLFxuICAgIFBvRGF0ZVRpbWVNb2R1bGUsXG4gICAgUG9EaWFsb2dNb2R1bGUsXG4gICAgUG9MYW5ndWFnZU1vZHVsZSxcbiAgICBQb05vdGlmaWNhdGlvbk1vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgUG9BY3RpdmVPdmVybGF5TW9kdWxlLFxuICAgIFBvQ29sb3JQYWxldHRlTW9kdWxlLFxuICAgIFBvQ29tcG9uZW50SW5qZWN0b3JNb2R1bGUsXG4gICAgUG9Db250cm9sUG9zaXRpb25Nb2R1bGUsXG4gICAgUG9EYXRlVGltZU1vZHVsZSxcbiAgICBQb0RpYWxvZ01vZHVsZSxcbiAgICBQb0kxOG5QaXBlLFxuICAgIFBvTm90aWZpY2F0aW9uTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIGJvb3RzdHJhcDogW11cbn0pXG5leHBvcnQgY2xhc3MgUG9TZXJ2aWNlc01vZHVsZSB7fVxuIl19