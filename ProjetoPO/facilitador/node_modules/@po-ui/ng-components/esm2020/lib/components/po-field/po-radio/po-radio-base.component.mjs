import { __decorate } from "tslib";
import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { InputBoolean } from '../../../decorators';
import { uuid } from './../../../utils/util';
import { PoRadioSize } from './po-radio-size.enum';
import * as i0 from "@angular/core";
/**
 * @docsPrivate
 *
 * @description
 *
 * O componente `po-radio` é um componente interno e deve ser utilizado em conjunto com o componente `po-radio-group`.
 */
export class PoRadioBaseComponent {
    constructor() {
        /** Define o status do *radio* */
        this.radioValue = false;
        /**
         * @optional
         *
         * @description
         *
         * Define o estado do *radio* como desabilitado;
         *
         * @default `false`
         */
        this.disabled = false;
        /**
         * @optional
         *
         * @description
         *
         * Evento disparado quando o valor do *radio* for alterado.
         */
        this.change = new EventEmitter();
        this.id = uuid();
        this._size = PoRadioSize.medium;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho do *radio*
     * @default `medium`
     */
    set size(value) {
        this._size = PoRadioSize[value] ? PoRadioSize[value] : PoRadioSize.medium;
    }
    get size() {
        return this._size;
    }
    changeValue() {
        if (this.propagateChange) {
            this.propagateChange(this.radioValue);
        }
        this.change.emit(this.radioValue);
    }
    checkOption(value) {
        if (this.disabled) {
            return;
        }
        this.changeModelValue(true);
        this.changeValue();
    }
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    writeValue(value) {
        if (value !== this.radioValue) {
            this.changeModelValue(value);
        }
    }
}
PoRadioBaseComponent.ɵfac = function PoRadioBaseComponent_Factory(t) { return new (t || PoRadioBaseComponent)(); };
PoRadioBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoRadioBaseComponent, inputs: { name: "name", label: ["p-label", "label"], radioValue: ["p-checked", "radioValue"], disabled: ["p-disabled", "disabled"], size: ["p-size", "size"] }, outputs: { change: "p-change" } });
__decorate([
    InputBoolean()
], PoRadioBaseComponent.prototype, "disabled", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoRadioBaseComponent, [{
        type: Directive
    }], null, { name: [{
            type: Input,
            args: ['name']
        }], label: [{
            type: Input,
            args: ['p-label']
        }], radioValue: [{
            type: Input,
            args: ['p-checked']
        }], disabled: [{
            type: Input,
            args: ['p-disabled']
        }], change: [{
            type: Output,
            args: ['p-change']
        }], size: [{
            type: Input,
            args: ['p-size']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcmFkaW8tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tcmFkaW8vcG8tcmFkaW8tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM3QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBRW5EOzs7Ozs7R0FNRztBQUdILE1BQU0sT0FBZ0Isb0JBQW9CO0lBRDFDO1FBUUUsaUNBQWlDO1FBQ2IsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUVoRDs7Ozs7Ozs7V0FRRztRQUNrQyxhQUFRLEdBQVksS0FBSyxDQUFDO1FBRS9EOzs7Ozs7V0FNRztRQUNpQixXQUFNLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFeEUsT0FBRSxHQUFHLElBQUksRUFBRSxDQUFDO1FBSUosVUFBSyxHQUFnQixXQUFXLENBQUMsTUFBTSxDQUFDO0tBaURqRDtJQS9DQzs7Ozs7OztPQU9HO0lBQ0gsSUFBcUIsSUFBSSxDQUFDLEtBQWE7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQztJQUM1RSxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ3ZDO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxXQUFXLENBQUMsS0FBYztRQUN4QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsRUFBTztRQUN0QixJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQsaUJBQWlCLENBQUMsRUFBTztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsVUFBVSxDQUFDLEtBQVU7UUFDbkIsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUM3QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDOUI7SUFDSCxDQUFDOzt3RkFoRm1CLG9CQUFvQjt1RUFBcEIsb0JBQW9CO0FBbUJIO0lBQWYsWUFBWSxFQUFFO3NEQUEyQjt1RkFuQjNDLG9CQUFvQjtjQUR6QyxTQUFTO2dCQUdPLElBQUk7a0JBQWxCLEtBQUs7bUJBQUMsTUFBTTtZQUdLLEtBQUs7a0JBQXRCLEtBQUs7bUJBQUMsU0FBUztZQUdJLFVBQVU7a0JBQTdCLEtBQUs7bUJBQUMsV0FBVztZQVdtQixRQUFRO2tCQUE1QyxLQUFLO21CQUFDLFlBQVk7WUFTQyxNQUFNO2tCQUF6QixNQUFNO21CQUFDLFVBQVU7WUFnQkcsSUFBSTtrQkFBeEIsS0FBSzttQkFBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi9kZWNvcmF0b3JzJztcbmltcG9ydCB7IHV1aWQgfSBmcm9tICcuLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuaW1wb3J0IHsgUG9SYWRpb1NpemUgfSBmcm9tICcuL3BvLXJhZGlvLXNpemUuZW51bSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1yYWRpb2Agw6kgdW0gY29tcG9uZW50ZSBpbnRlcm5vIGUgZGV2ZSBzZXIgdXRpbGl6YWRvIGVtIGNvbmp1bnRvIGNvbSBvIGNvbXBvbmVudGUgYHBvLXJhZGlvLWdyb3VwYC5cbiAqL1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb1JhZGlvQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgLyoqIERlZmluZSBvIG5vbWUgZG8gKnJhZGlvKi4gKi9cbiAgQElucHV0KCduYW1lJykgbmFtZTogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkZSBleGliacOnw6NvIGRvICpyYWRpbyogKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqIERlZmluZSBvIHN0YXR1cyBkbyAqcmFkaW8qICovXG4gIEBJbnB1dCgncC1jaGVja2VkJykgcmFkaW9WYWx1ZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBvIGVzdGFkbyBkbyAqcmFkaW8qIGNvbW8gZGVzYWJpbGl0YWRvO1xuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBASW5wdXRCb29sZWFuKCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIHF1YW5kbyBvIHZhbG9yIGRvICpyYWRpbyogZm9yIGFsdGVyYWRvLlxuICAgKi9cbiAgQE91dHB1dCgncC1jaGFuZ2UnKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgaWQgPSB1dWlkKCk7XG4gIHByb3BhZ2F0ZUNoYW5nZTogYW55O1xuICBvblRvdWNoZWQ7XG5cbiAgcHJpdmF0ZSBfc2l6ZTogUG9SYWRpb1NpemUgPSBQb1JhZGlvU2l6ZS5tZWRpdW07XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIG8gdGFtYW5obyBkbyAqcmFkaW8qXG4gICAqIEBkZWZhdWx0IGBtZWRpdW1gXG4gICAqL1xuICBASW5wdXQoJ3Atc2l6ZScpIHNldCBzaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9zaXplID0gUG9SYWRpb1NpemVbdmFsdWVdID8gUG9SYWRpb1NpemVbdmFsdWVdIDogUG9SYWRpb1NpemUubWVkaXVtO1xuICB9XG5cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gIH1cblxuICBjaGFuZ2VWYWx1ZSgpIHtcbiAgICBpZiAodGhpcy5wcm9wYWdhdGVDaGFuZ2UpIHtcbiAgICAgIHRoaXMucHJvcGFnYXRlQ2hhbmdlKHRoaXMucmFkaW9WYWx1ZSk7XG4gICAgfVxuXG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLnJhZGlvVmFsdWUpO1xuICB9XG5cbiAgY2hlY2tPcHRpb24odmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmNoYW5nZU1vZGVsVmFsdWUodHJ1ZSk7XG4gICAgdGhpcy5jaGFuZ2VWYWx1ZSgpO1xuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5wcm9wYWdhdGVDaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uVG91Y2hlZCA9IGZuO1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLnJhZGlvVmFsdWUpIHtcbiAgICAgIHRoaXMuY2hhbmdlTW9kZWxWYWx1ZSh2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IGNoYW5nZU1vZGVsVmFsdWUodmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpO1xufVxuIl19