import { Component, Input, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
const _c0 = ["pointer"];
const _c1 = ["po-gauge-pointer", ""];
export class PoGaugePointerComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.afterViewInit = false;
    }
    set coordinates(value) {
        this._coordinates = value;
        if (this._coordinates?.radius) {
            this.calculateRadiusScale(this.coordinates.radius);
        }
        if (this._coordinates?.hasOwnProperty('pointerDegrees') && this.afterViewInit) {
            this.applyPointerRotation(this.coordinates.pointerDegrees);
        }
    }
    get coordinates() {
        return this._coordinates;
    }
    ngAfterViewInit() {
        if (this._coordinates?.pointerDegrees) {
            this.applyPointerRotation(this.coordinates.pointerDegrees);
        }
        this.afterViewInit = true;
    }
    calculateRadiusScale(radius) {
        const scale = radius / 20;
        const maxScaleValue = 24;
        this.radiusScale = scale < maxScaleValue ? scale : maxScaleValue;
    }
    applyPointerRotation(degrees) {
        this.renderer.setStyle(this.pointer.nativeElement, 'transformOrigin', `${this.coordinates.radius}px ${this.coordinates.radius}px`);
        this.renderer.setStyle(this.pointer.nativeElement, 'transform', `rotate(${degrees}deg)`);
    }
}
PoGaugePointerComponent.ɵfac = function PoGaugePointerComponent_Factory(t) { return new (t || PoGaugePointerComponent)(i0.ɵɵdirectiveInject(i0.Renderer2)); };
PoGaugePointerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoGaugePointerComponent, selectors: [["", "po-gauge-pointer", ""]], viewQuery: function PoGaugePointerComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pointer = _t.first);
    } }, inputs: { coordinates: ["p-coordinates", "coordinates"] }, attrs: _c1, decls: 4, vars: 4, consts: [[1, "po-gauge-pointer"], ["pointer", ""], [1, "po-gauge-pointer-circle"]], template: function PoGaugePointerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵnamespaceSVG();
        i0.ɵɵelementStart(0, "g");
        i0.ɵɵelement(1, "path", 0, 1)(3, "circle", 2);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵattribute("d", ctx.coordinates == null ? null : ctx.coordinates.coordinates);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("cx", ctx.coordinates == null ? null : ctx.coordinates.radius)("cy", ctx.coordinates == null ? null : ctx.coordinates.radius)("r", ctx.radiusScale);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoGaugePointerComponent, [{
        type: Component,
        args: [{ selector: '[po-gauge-pointer]', template: "<svg:g>\n  <svg:path #pointer\n    class=\"po-gauge-pointer\"\n    [attr.d]=\"coordinates?.coordinates\"\n  >\n  </svg:path> \n\n  <svg:circle \n    class=\"po-gauge-pointer-circle\" \n    [attr.cx]=\"coordinates?.radius\" \n    [attr.cy]=\"coordinates?.radius\" \n    [attr.r]=\"radiusScale\"\n  >\n  </svg:circle>\n</svg:g>" }]
    }], function () { return [{ type: i0.Renderer2 }]; }, { pointer: [{
            type: ViewChild,
            args: ['pointer']
        }], coordinates: [{
            type: Input,
            args: ['p-coordinates']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ2F1Z2UtcG9pbnRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZ2F1Z2UvcG8tZ2F1Z2Utc3ZnL3BvLWdhdWdlLXBvaW50ZXIvcG8tZ2F1Z2UtcG9pbnRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZ2F1Z2UvcG8tZ2F1Z2Utc3ZnL3BvLWdhdWdlLXBvaW50ZXIvcG8tZ2F1Z2UtcG9pbnRlci5jb21wb25lbnQuc3ZnIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFjLEtBQUssRUFBYSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFPbEcsTUFBTSxPQUFPLHVCQUF1QjtJQXlCbEMsWUFBb0IsUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQWxCL0Isa0JBQWEsR0FBRyxLQUFLLENBQUM7SUFrQlksQ0FBQztJQWhCM0MsSUFBNEIsV0FBVyxDQUFDLEtBQXlCO1FBQy9ELElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBRTFCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRSxNQUFNLEVBQUU7WUFDN0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEQ7UUFFRCxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsY0FBYyxDQUFDLGdCQUFnQixDQUFDLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUM3RSxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUlELGVBQWU7UUFDYixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsY0FBYyxFQUFFO1lBQ3JDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQztJQUVPLG9CQUFvQixDQUFDLE1BQU07UUFDakMsTUFBTSxLQUFLLEdBQUcsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUMxQixNQUFNLGFBQWEsR0FBRyxFQUFFLENBQUM7UUFFekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQztJQUNuRSxDQUFDO0lBRU8sb0JBQW9CLENBQUMsT0FBZTtRQUMxQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQzFCLGlCQUFpQixFQUNqQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLENBQzVELENBQUM7UUFDRixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxXQUFXLEVBQUUsVUFBVSxPQUFPLE1BQU0sQ0FBQyxDQUFDO0lBQzNGLENBQUM7OzhGQWpEVSx1QkFBdUI7MEVBQXZCLHVCQUF1Qjs7Ozs7O1FDUHBDLG1CQUFPO1FBQVAseUJBQU87UUFDTCw2QkFJVyxnQkFBQTtRQVNiLGlCQUFROztRQVhKLGVBQW1DO1FBQW5DLGlGQUFtQztRQU1uQyxlQUErQjtRQUEvQiw2RUFBK0IsK0RBQUEsc0JBQUE7O3VGREZ0Qix1QkFBdUI7Y0FKbkMsU0FBUzsyQkFDRSxvQkFBb0I7NERBSVIsT0FBTztrQkFBNUIsU0FBUzttQkFBQyxTQUFTO1lBUVEsV0FBVztrQkFBdEMsS0FBSzttQkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvR2F1Z2VDb29yZGluYXRlcyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvcG8tZ2F1Z2UtY29vcmRpbmF0ZXMuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW3BvLWdhdWdlLXBvaW50ZXJdJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLWdhdWdlLXBvaW50ZXIuY29tcG9uZW50LnN2Zydcbn0pXG5leHBvcnQgY2xhc3MgUG9HYXVnZVBvaW50ZXJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQFZpZXdDaGlsZCgncG9pbnRlcicpIHBvaW50ZXI6IEVsZW1lbnRSZWY7XG5cbiAgcmFkaXVzU2NhbGU6IG51bWJlcjtcblxuICBwcml2YXRlIF9jb29yZGluYXRlczogUG9HYXVnZUNvb3JkaW5hdGVzO1xuXG4gIHByaXZhdGUgYWZ0ZXJWaWV3SW5pdCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgncC1jb29yZGluYXRlcycpIHNldCBjb29yZGluYXRlcyh2YWx1ZTogUG9HYXVnZUNvb3JkaW5hdGVzKSB7XG4gICAgdGhpcy5fY29vcmRpbmF0ZXMgPSB2YWx1ZTtcblxuICAgIGlmICh0aGlzLl9jb29yZGluYXRlcz8ucmFkaXVzKSB7XG4gICAgICB0aGlzLmNhbGN1bGF0ZVJhZGl1c1NjYWxlKHRoaXMuY29vcmRpbmF0ZXMucmFkaXVzKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fY29vcmRpbmF0ZXM/Lmhhc093blByb3BlcnR5KCdwb2ludGVyRGVncmVlcycpICYmIHRoaXMuYWZ0ZXJWaWV3SW5pdCkge1xuICAgICAgdGhpcy5hcHBseVBvaW50ZXJSb3RhdGlvbih0aGlzLmNvb3JkaW5hdGVzLnBvaW50ZXJEZWdyZWVzKTtcbiAgICB9XG4gIH1cblxuICBnZXQgY29vcmRpbmF0ZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Nvb3JkaW5hdGVzO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5fY29vcmRpbmF0ZXM/LnBvaW50ZXJEZWdyZWVzKSB7XG4gICAgICB0aGlzLmFwcGx5UG9pbnRlclJvdGF0aW9uKHRoaXMuY29vcmRpbmF0ZXMucG9pbnRlckRlZ3JlZXMpO1xuICAgIH1cblxuICAgIHRoaXMuYWZ0ZXJWaWV3SW5pdCA9IHRydWU7XG4gIH1cblxuICBwcml2YXRlIGNhbGN1bGF0ZVJhZGl1c1NjYWxlKHJhZGl1cykge1xuICAgIGNvbnN0IHNjYWxlID0gcmFkaXVzIC8gMjA7XG4gICAgY29uc3QgbWF4U2NhbGVWYWx1ZSA9IDI0O1xuXG4gICAgdGhpcy5yYWRpdXNTY2FsZSA9IHNjYWxlIDwgbWF4U2NhbGVWYWx1ZSA/IHNjYWxlIDogbWF4U2NhbGVWYWx1ZTtcbiAgfVxuXG4gIHByaXZhdGUgYXBwbHlQb2ludGVyUm90YXRpb24oZGVncmVlczogbnVtYmVyKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShcbiAgICAgIHRoaXMucG9pbnRlci5uYXRpdmVFbGVtZW50LFxuICAgICAgJ3RyYW5zZm9ybU9yaWdpbicsXG4gICAgICBgJHt0aGlzLmNvb3JkaW5hdGVzLnJhZGl1c31weCAke3RoaXMuY29vcmRpbmF0ZXMucmFkaXVzfXB4YFxuICAgICk7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLnBvaW50ZXIubmF0aXZlRWxlbWVudCwgJ3RyYW5zZm9ybScsIGByb3RhdGUoJHtkZWdyZWVzfWRlZylgKTtcbiAgfVxufVxuIiwiPHN2ZzpnPlxuICA8c3ZnOnBhdGggI3BvaW50ZXJcbiAgICBjbGFzcz1cInBvLWdhdWdlLXBvaW50ZXJcIlxuICAgIFthdHRyLmRdPVwiY29vcmRpbmF0ZXM/LmNvb3JkaW5hdGVzXCJcbiAgPlxuICA8L3N2ZzpwYXRoPiBcblxuICA8c3ZnOmNpcmNsZSBcbiAgICBjbGFzcz1cInBvLWdhdWdlLXBvaW50ZXItY2lyY2xlXCIgXG4gICAgW2F0dHIuY3hdPVwiY29vcmRpbmF0ZXM/LnJhZGl1c1wiIFxuICAgIFthdHRyLmN5XT1cImNvb3JkaW5hdGVzPy5yYWRpdXNcIiBcbiAgICBbYXR0ci5yXT1cInJhZGl1c1NjYWxlXCJcbiAgPlxuICA8L3N2ZzpjaXJjbGU+XG48L3N2ZzpnPiJdfQ==