import { Component, EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import * as i0 from "@angular/core";
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por manipular os botões de aba.
 */
export class PoTabButtonComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        // Função sera emitida quando a tab ficar ativada
        this.activated = new EventEmitter();
        // Função sera emitida quando a tab ficar desabilitada ou escondida
        this.changeState = new EventEmitter();
        // Método recebido do usuário para ser disparado quando clicar na aba
        this.click = new EventEmitter();
    }
    // Ativa o botão
    set active(value) {
        this._active = value;
        this.emitActivated();
    }
    get active() {
        return this._active;
    }
    // Oculta o botão
    set hide(value) {
        this._hide = convertToBoolean(value);
        this.setDisplayOnHide();
    }
    get hide() {
        return this._hide;
    }
    ngOnChanges(changes) {
        if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {
            this.changeState.emit(this);
        }
    }
    onClick() {
        if (!this.disabled) {
            this.click.emit(this.id);
        }
    }
    emitActivated() {
        if (this.active) {
            this.activated.emit(this);
        }
    }
    setDisplayOnHide() {
        this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';
    }
}
PoTabButtonComponent.ɵfac = function PoTabButtonComponent_Factory(t) { return new (t || PoTabButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
PoTabButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoTabButtonComponent, selectors: [["po-tab-button"]], inputs: { disabled: ["p-disabled", "disabled"], id: ["p-id", "id"], label: ["p-label", "label"], small: ["p-small", "small"], active: ["p-active", "active"], hide: ["p-hide", "hide"] }, outputs: { activated: "p-activated", changeState: "p-change-state", click: "p-click" }, features: [i0.ɵɵNgOnChangesFeature], decls: 3, vars: 8, consts: [[1, "po-tab-button-md", 3, "click", "keyup.enter"], [1, "po-tab-button-label", "po-text-ellipsis"]], template: function PoTabButtonComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵlistener("click", function PoTabButtonComponent_Template_div_click_0_listener() { return ctx.onClick(); })("keyup.enter", function PoTabButtonComponent_Template_div_keyup_enter_0_listener() { return ctx.onClick(); });
        i0.ɵɵelementStart(1, "span", 1);
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        i0.ɵɵclassProp("po-tab-button-active", ctx.active)("po-tab-button-disabled", ctx.disabled)("po-tab-button-sm", ctx.small);
        i0.ɵɵattribute("tabindex", ctx.disabled ? null : 0);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.label, " ");
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoTabButtonComponent, [{
        type: Component,
        args: [{ selector: 'po-tab-button', template: "<div\n  class=\"po-tab-button-md\"\n  [attr.tabindex]=\"disabled ? null : 0\"\n  [class.po-tab-button-active]=\"active\"\n  [class.po-tab-button-disabled]=\"disabled\"\n  [class.po-tab-button-sm]=\"small\"\n  (click)=\"onClick()\"\n  (keyup.enter)=\"onClick()\"\n>\n  <span class=\"po-tab-button-label po-text-ellipsis\">\n    {{ label }}\n  </span>\n</div>\n" }]
    }], function () { return [{ type: i0.ElementRef }]; }, { disabled: [{
            type: Input,
            args: ['p-disabled']
        }], id: [{
            type: Input,
            args: ['p-id']
        }], label: [{
            type: Input,
            args: ['p-label']
        }], small: [{
            type: Input,
            args: ['p-small']
        }], activated: [{
            type: Output,
            args: ['p-activated']
        }], changeState: [{
            type: Output,
            args: ['p-change-state']
        }], click: [{
            type: Output,
            args: ['p-click']
        }], active: [{
            type: Input,
            args: ['p-active']
        }], hide: [{
            type: Input,
            args: ['p-hide']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tdGFicy9wby10YWItYnV0dG9uL3BvLXRhYi1idXR0b24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYnMvcG8tdGFiLWJ1dHRvbi9wby10YWItYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWMsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTdHLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQUV2RDs7Ozs7O0dBTUc7QUFLSCxNQUFNLE9BQU8sb0JBQW9CO0lBK0MvQixZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBbEMxQyxpREFBaUQ7UUFDMUIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEQsbUVBQW1FO1FBQ3pDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUUzRCxxRUFBcUU7UUFDbEQsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUEyQkQsQ0FBQztJQXRCOUMsZ0JBQWdCO0lBQ2hCLElBQXVCLE1BQU0sQ0FBQyxLQUFjO1FBQzFDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBRXJCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxpQkFBaUI7SUFDakIsSUFBcUIsSUFBSSxDQUFDLEtBQWM7UUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVyQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFJRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUN0RyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQztJQUVPLGFBQWE7UUFDbkIsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRU8sZ0JBQWdCO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDeEUsQ0FBQzs7d0ZBckVVLG9CQUFvQjt1RUFBcEIsb0JBQW9CO1FDZmpDLDhCQVFDO1FBRkMsOEZBQVMsYUFBUyxJQUFDLDZGQUNKLGFBQVMsSUFETDtRQUduQiwrQkFBbUQ7UUFDakQsWUFDRjtRQUFBLGlCQUFPLEVBQUE7O1FBUlAsa0RBQXFDLHdDQUFBLCtCQUFBO1FBRHJDLG1EQUFxQztRQVFuQyxlQUNGO1FBREUsMENBQ0Y7O3VGRElXLG9CQUFvQjtjQUpoQyxTQUFTOzJCQUNFLGVBQWU7NkRBS0osUUFBUTtrQkFBNUIsS0FBSzttQkFBQyxZQUFZO1lBR0osRUFBRTtrQkFBaEIsS0FBSzttQkFBQyxNQUFNO1lBR0ssS0FBSztrQkFBdEIsS0FBSzttQkFBQyxTQUFTO1lBR0UsS0FBSztrQkFBdEIsS0FBSzttQkFBQyxTQUFTO1lBR08sU0FBUztrQkFBL0IsTUFBTTttQkFBQyxhQUFhO1lBR0ssV0FBVztrQkFBcEMsTUFBTTttQkFBQyxnQkFBZ0I7WUFHTCxLQUFLO2tCQUF2QixNQUFNO21CQUFDLFNBQVM7WUFNTSxNQUFNO2tCQUE1QixLQUFLO21CQUFDLFVBQVU7WUFXSSxJQUFJO2tCQUF4QixLQUFLO21CQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgbWFuaXB1bGFyIG9zIGJvdMO1ZXMgZGUgYWJhLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWItYnV0dG9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYi1idXR0b24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFiQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgLy8gRGVzYWJpbGl0YSBvIGJvdMOjb1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvLyBJZGVudGlmaWNhZG9yIGRvIGNvbXBvbmVudGVcbiAgQElucHV0KCdwLWlkJykgaWQ6IHN0cmluZztcblxuICAvLyBSw7N0dWxvIGRvIGJvdMOjb1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8vIERpbWludWkgbyB0YW1hbmhvIGRvIGJvdMOjb1xuICBASW5wdXQoJ3Atc21hbGwnKSBzbWFsbDogYm9vbGVhbjtcblxuICAvLyBGdW7Dp8OjbyBzZXJhIGVtaXRpZGEgcXVhbmRvIGEgdGFiIGZpY2FyIGF0aXZhZGFcbiAgQE91dHB1dCgncC1hY3RpdmF0ZWQnKSBhY3RpdmF0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gRnVuw6fDo28gc2VyYSBlbWl0aWRhIHF1YW5kbyBhIHRhYiBmaWNhciBkZXNhYmlsaXRhZGEgb3UgZXNjb25kaWRhXG4gIEBPdXRwdXQoJ3AtY2hhbmdlLXN0YXRlJykgY2hhbmdlU3RhdGUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gTcOpdG9kbyByZWNlYmlkbyBkbyB1c3XDoXJpbyBwYXJhIHNlciBkaXNwYXJhZG8gcXVhbmRvIGNsaWNhciBuYSBhYmFcbiAgQE91dHB1dCgncC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHByaXZhdGUgX2FjdGl2ZTogYm9vbGVhbjtcbiAgcHJpdmF0ZSBfaGlkZTogYm9vbGVhbjtcblxuICAvLyBBdGl2YSBvIGJvdMOjb1xuICBASW5wdXQoJ3AtYWN0aXZlJykgc2V0IGFjdGl2ZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2FjdGl2ZSA9IHZhbHVlO1xuXG4gICAgdGhpcy5lbWl0QWN0aXZhdGVkKCk7XG4gIH1cblxuICBnZXQgYWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLl9hY3RpdmU7XG4gIH1cblxuICAvLyBPY3VsdGEgbyBib3TDo29cbiAgQElucHV0KCdwLWhpZGUnKSBzZXQgaGlkZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2hpZGUgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcblxuICAgIHRoaXMuc2V0RGlzcGxheU9uSGlkZSgpO1xuICB9XG5cbiAgZ2V0IGhpZGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2hpZGU7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICgoY2hhbmdlcy5oaWRlICYmIGNoYW5nZXMuaGlkZS5jdXJyZW50VmFsdWUpIHx8IChjaGFuZ2VzLmRpc2FibGVkICYmIGNoYW5nZXMuZGlzYWJsZWQuY3VycmVudFZhbHVlKSkge1xuICAgICAgdGhpcy5jaGFuZ2VTdGF0ZS5lbWl0KHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNsaWNrLmVtaXQodGhpcy5pZCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBlbWl0QWN0aXZhdGVkKCkge1xuICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgdGhpcy5hY3RpdmF0ZWQuZW1pdCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldERpc3BsYXlPbkhpZGUoKSB7XG4gICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IHRoaXMuaGlkZSA/ICdub25lJyA6ICcnO1xuICB9XG59XG4iLCI8ZGl2XG4gIGNsYXNzPVwicG8tdGFiLWJ1dHRvbi1tZFwiXG4gIFthdHRyLnRhYmluZGV4XT1cImRpc2FibGVkID8gbnVsbCA6IDBcIlxuICBbY2xhc3MucG8tdGFiLWJ1dHRvbi1hY3RpdmVdPVwiYWN0aXZlXCJcbiAgW2NsYXNzLnBvLXRhYi1idXR0b24tZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICBbY2xhc3MucG8tdGFiLWJ1dHRvbi1zbV09XCJzbWFsbFwiXG4gIChjbGljayk9XCJvbkNsaWNrKClcIlxuICAoa2V5dXAuZW50ZXIpPVwib25DbGljaygpXCJcbj5cbiAgPHNwYW4gY2xhc3M9XCJwby10YWItYnV0dG9uLWxhYmVsIHBvLXRleHQtZWxsaXBzaXNcIj5cbiAgICB7eyBsYWJlbCB9fVxuICA8L3NwYW4+XG48L2Rpdj5cbiJdfQ==