import { Input, Directive } from '@angular/core';
import { convertToBoolean, convertToInt } from '../../utils/util';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais
 * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a
 * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),
 * assim possibilitando o tratamento para diferentes resoluções.
 */
export class PoContainerBaseComponent {
    constructor() {
        this._noBorder = false;
        this._noPadding = false;
        this._noShadow = false;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-container`.
     *
     * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
     */
    set height(value) {
        this._height = convertToInt(value);
    }
    get height() {
        return this._height;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a borda e a sombra em torno do `po-container`.
     *
     * @default `false`
     */
    set noBorder(value) {
        this._noBorder = convertToBoolean(value);
    }
    get noBorder() {
        return this._noBorder;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o espaçamento interno do `po-container`.
     *
     * @default `false`
     */
    set noPadding(value) {
        this._noPadding = convertToBoolean(value);
    }
    get noPadding() {
        return this._noPadding;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o sombreamento em torno do `po-container`.
     *
     * @default `false`
     */
    set noShadow(value) {
        this._noShadow = convertToBoolean(value);
    }
    get noShadow() {
        return this._noShadow;
    }
}
PoContainerBaseComponent.ɵfac = function PoContainerBaseComponent_Factory(t) { return new (t || PoContainerBaseComponent)(); };
PoContainerBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoContainerBaseComponent, inputs: { height: ["p-height", "height"], noBorder: ["p-no-border", "noBorder"], noPadding: ["p-no-padding", "noPadding"], noShadow: ["p-no-shadow", "noShadow"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoContainerBaseComponent, [{
        type: Directive
    }], null, { height: [{
            type: Input,
            args: ['p-height']
        }], noBorder: [{
            type: Input,
            args: ['p-no-border']
        }], noPadding: [{
            type: Input,
            args: ['p-no-padding']
        }], noShadow: [{
            type: Input,
            args: ['p-no-shadow']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29udGFpbmVyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNvbnRhaW5lci9wby1jb250YWluZXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVsRTs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sT0FBTyx3QkFBd0I7SUFEckM7UUFHVSxjQUFTLEdBQWEsS0FBSyxDQUFDO1FBQzVCLGVBQVUsR0FBYSxLQUFLLENBQUM7UUFDN0IsY0FBUyxHQUFhLEtBQUssQ0FBQztLQXFFckM7SUFuRUM7Ozs7Ozs7O09BUUc7SUFDSCxJQUF1QixNQUFNLENBQUMsS0FBYTtRQUN6QyxJQUFJLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7Ozs7Ozs7T0FRRztJQUNILElBQTBCLFFBQVEsQ0FBQyxLQUFjO1FBQy9DLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDSCxJQUEyQixTQUFTLENBQUMsS0FBYztRQUNqRCxJQUFJLENBQUMsVUFBVSxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ0gsSUFBMEIsUUFBUSxDQUFDLEtBQWM7UUFDL0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7O2dHQXhFVSx3QkFBd0I7MkVBQXhCLHdCQUF3Qjt1RkFBeEIsd0JBQXdCO2NBRHBDLFNBQVM7Z0JBZ0JlLE1BQU07a0JBQTVCLEtBQUs7bUJBQUMsVUFBVTtZQWlCUyxRQUFRO2tCQUFqQyxLQUFLO21CQUFDLGFBQWE7WUFpQk8sU0FBUztrQkFBbkMsS0FBSzttQkFBQyxjQUFjO1lBaUJLLFFBQVE7a0JBQWpDLEtBQUs7bUJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgY29udmVydFRvSW50IH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBgcG8tY29udGFpbmVyYCDDqSB1bSBjb21wb25lbnRlIHF1ZSB2aXNhIGZhY2lsaXRhciBvIGFncnVwYW1lbnRvIGRlIGNvbnRlw7pkb3MuXG4gKiBQb3IgcGFkcsOjbyBvIG1lc21vIGV4aWJlIHVtYSBib3JkYSwgdW0gZWZlaXRvIGRlIHNvbWJyYSBhbyBzZXUgcmVkb3IgZSB1bSBlc3Bhw6dhbWVudG8gZW0gc3VhIHBhcnRlIGludGVybmEsIG9zIHF1YWlzXG4gKiBwb2RlbSBzZXIgZGVzYWJpbGl0YWRvcy4gQW8gcmVtb3ZlciBzdWEgYm9yZGEgYSBzb21icmEgdGFtYsOpbSBzZXLDoSByZW1vdmlkYS4gQWzDqW0gZGlzc28sIHN1YSBhbHR1cmEgYWNvbXBhbmhhIGFcbiAqIHF1YW50aWRhZGUgZG8gY29udGXDumRvLCBwb3LDqW0gcG9kZSBzZXIgZml4YWRhLiBQYXJhIGNvbnRyb2xhciBzdWEgbGFyZ3VyYSwgdXRpbGl6ZSBvIFtHcmlkIFN5c3RlbV0oL2d1aWRlcy9ncmlkLXN5c3RlbSksXG4gKiBhc3NpbSBwb3NzaWJpbGl0YW5kbyBvIHRyYXRhbWVudG8gcGFyYSBkaWZlcmVudGVzIHJlc29sdcOnw7Vlcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9Db250YWluZXJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfaGVpZ2h0PzogbnVtYmVyO1xuICBwcml2YXRlIF9ub0JvcmRlcj86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfbm9QYWRkaW5nPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9ub1NoYWRvdz86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgYSBhbHR1cmEgZG8gYHBvLWNvbnRhaW5lcmAuXG4gICAqXG4gICAqID4gQ2FzbyBuw6NvIHNlamEgZGVmaW5pZG8gdW0gdmFsb3IsIGEgYWx0dXJhIHNlIGFqdXN0YXLDoSBkZSBhY29yZG8gY29tIG8gY29udGXDumRvLlxuICAgKi9cbiAgQElucHV0KCdwLWhlaWdodCcpIHNldCBoZWlnaHQodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX2hlaWdodCA9IGNvbnZlcnRUb0ludCh2YWx1ZSk7XG4gIH1cblxuICBnZXQgaGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2hlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlc2FiaWxpdGEgYSBib3JkYSBlIGEgc29tYnJhIGVtIHRvcm5vIGRvIGBwby1jb250YWluZXJgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Atbm8tYm9yZGVyJykgc2V0IG5vQm9yZGVyKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fbm9Cb3JkZXIgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBub0JvcmRlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbm9Cb3JkZXI7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIG8gZXNwYcOnYW1lbnRvIGludGVybm8gZG8gYHBvLWNvbnRhaW5lcmAuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1uby1wYWRkaW5nJykgc2V0IG5vUGFkZGluZyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25vUGFkZGluZyA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IG5vUGFkZGluZygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbm9QYWRkaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVzYWJpbGl0YSBvIHNvbWJyZWFtZW50byBlbSB0b3JubyBkbyBgcG8tY29udGFpbmVyYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLW5vLXNoYWRvdycpIHNldCBub1NoYWRvdyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25vU2hhZG93ID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbm9TaGFkb3coKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25vU2hhZG93O1xuICB9XG59XG4iXX0=