import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { PoChartType } from '../enums/po-chart-type.enum';
import * as i0 from "@angular/core";
import * as i1 from "../services/po-chart-maths.service";
import * as i2 from "@angular/common";
import * as i3 from "./po-chart-line/po-chart-area/po-chart-area.component";
import * as i4 from "./po-chart-axis/po-chart-axis.component";
import * as i5 from "./po-chart-line/po-chart-line.component";
import * as i6 from "./po-chart-circular/po-chart-pie/po-chart-pie.component";
import * as i7 from "./po-chart-circular/po-chart-donut/po-chart-donut.component";
import * as i8 from "./po-chart-bar/po-chart-bar.component";
import * as i9 from "./po-chart-bar/po-chart-column/po-chart-column.component";
const _c0 = ["svgELement"];
function PoChartContainerComponent__svg_g_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 9);
    i0.ɵɵlistener("p-categories-coordinates", function PoChartContainerComponent__svg_g_2_Template__svg_g_p_categories_coordinates_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.getCategoriesCoordinates($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-align-by-the-corners", ctx_r1.alignByTheCorners)("p-range", ctx_r1.range)("p-type", ctx_r1.type)("p-series", ctx_r1.series)("p-container-size", ctx_r1.containerSize)("p-options", ctx_r1.axisOptions)("p-categories", ctx_r1.categories);
} }
function PoChartContainerComponent__svg_g_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 10);
    i0.ɵɵlistener("p-bar-hover", function PoChartContainerComponent__svg_g_3_Template__svg_g_p_bar_hover_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onSerieHover($event)); })("p-bar-click", function PoChartContainerComponent__svg_g_3_Template__svg_g_p_bar_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-align-by-the-corners", ctx_r2.alignByTheCorners)("p-svg-space", ctx_r2.svgSpace)("p-categories", ctx_r2.categories)("p-categories-coordinates", ctx_r2.categoriesCoordinates)("p-range", ctx_r2.range)("p-series", ctx_r2.seriesByType["area"])("p-container-size", ctx_r2.containerSize);
} }
function PoChartContainerComponent__svg_g_4_Template(rf, ctx) { if (rf & 1) {
    const _r14 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 11);
    i0.ɵɵlistener("p-bar-hover", function PoChartContainerComponent__svg_g_4_Template__svg_g_p_bar_hover_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.onSerieHover($event)); })("p-bar-click", function PoChartContainerComponent__svg_g_4_Template__svg_g_p_bar_click_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-categories", ctx_r3.categories)("p-range", ctx_r3.range)("p-series", ctx_r3.seriesByType["column"])("p-container-size", ctx_r3.containerSize);
} }
function PoChartContainerComponent__svg_g_5_Template(rf, ctx) { if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 12);
    i0.ɵɵlistener("p-point-hover", function PoChartContainerComponent__svg_g_5_Template__svg_g_p_point_hover_0_listener($event) { i0.ɵɵrestoreView(_r17); const ctx_r16 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r16.onSerieHover($event)); })("p-point-click", function PoChartContainerComponent__svg_g_5_Template__svg_g_p_point_click_0_listener($event) { i0.ɵɵrestoreView(_r17); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-categories", ctx_r4.categories)("p-range", ctx_r4.range)("p-series", ctx_r4.seriesByType["line"])("p-container-size", ctx_r4.containerSize);
} }
function PoChartContainerComponent__svg_g_6_Template(rf, ctx) { if (rf & 1) {
    const _r20 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 13);
    i0.ɵɵlistener("p-bar-hover", function PoChartContainerComponent__svg_g_6_Template__svg_g_p_bar_hover_0_listener($event) { i0.ɵɵrestoreView(_r20); const ctx_r19 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r19.onSerieHover($event)); })("p-bar-click", function PoChartContainerComponent__svg_g_6_Template__svg_g_p_bar_click_0_listener($event) { i0.ɵɵrestoreView(_r20); const ctx_r21 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r21.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-categories", ctx_r5.categories)("p-range", ctx_r5.range)("p-series", ctx_r5.seriesByType["bar"])("p-container-size", ctx_r5.containerSize);
} }
function PoChartContainerComponent__svg_g_7_Template(rf, ctx) { if (rf & 1) {
    const _r23 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 14);
    i0.ɵɵlistener("p-circular-hover", function PoChartContainerComponent__svg_g_7_Template__svg_g_p_circular_hover_0_listener($event) { i0.ɵɵrestoreView(_r23); const ctx_r22 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r22.onSerieHover($event)); })("p-circular-click", function PoChartContainerComponent__svg_g_7_Template__svg_g_p_circular_click_0_listener($event) { i0.ɵɵrestoreView(_r23); const ctx_r24 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r24.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-series", ctx_r6.seriesByType["pie"])("p-container-size", ctx_r6.containerSize);
} }
function PoChartContainerComponent__svg_g_8_Template(rf, ctx) { if (rf & 1) {
    const _r26 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 15);
    i0.ɵɵlistener("p-circular-hover", function PoChartContainerComponent__svg_g_8_Template__svg_g_p_circular_hover_0_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r25.onSerieHover($event)); })("p-circular-click", function PoChartContainerComponent__svg_g_8_Template__svg_g_p_circular_click_0_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r27 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r27.onSerieClick($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-options", ctx_r7.options)("p-series", ctx_r7.seriesByType["donut"])("p-container-size", ctx_r7.containerSize);
} }
export class PoChartContainerComponent {
    constructor(mathsService) {
        this.mathsService = mathsService;
        this.serieClick = new EventEmitter();
        this.serieHover = new EventEmitter();
        this._series = [];
    }
    set options(value) {
        if (value instanceof Object && !(value instanceof Array)) {
            this._options = value;
            this.verifyAxisOptions(this._options);
        }
    }
    get options() {
        return this._options;
    }
    set series(data) {
        this._series = data;
        this.setAlignByTheCorners(this._series);
        this.setSeriesByType(this._series);
        this.setRange(this._series, this.options);
    }
    get series() {
        return this._series;
    }
    get isTypeCircular() {
        return this.type === PoChartType.Pie || this.type === PoChartType.Donut;
    }
    ngOnChanges(changes) {
        if (changes.type || changes.containerSize) {
            this.setViewBox();
            this.setSvgSpace();
        }
    }
    getCategoriesCoordinates(value) {
        this.categoriesCoordinates = value;
    }
    onSerieClick(event) {
        this.serieClick.emit(event);
    }
    onSerieHover(event) {
        this.serieHover.emit(event);
    }
    getRange(series, options = {}) {
        const domain = this.mathsService.calculateMinAndMaxValues(series);
        const minValue = !options.axis?.minRange && domain.minValue > 0
            ? 0
            : options.axis?.minRange < domain.minValue
                ? options.axis.minRange
                : domain.minValue;
        const maxValue = options.axis?.maxRange > domain.maxValue ? options.axis.maxRange : domain.maxValue;
        const updatedDomainValues = { minValue, maxValue };
        return { ...domain, ...updatedDomainValues };
    }
    setSvgSpace() {
        // Representa um ponto 2D dentro do viewport do SVG. Ele é a representação do cursor do mouse para comparação de coordenadas com cada dado de série.
        const svgPoint = this.svgELement.nativeElement.createSVGPoint();
        // Retorna um DOMMatrix representando as matrizes 2D e 3D transformadas a partir das coordenadas do elemento, em relação ao document, para coordenadas relativas ao viewport do SVG.
        // É utilizado nos gráficos do tipo área para que seja possível equiparar as coordenadas do evento com cada dado de série, para assim ativar o ponto de dado equivalente.
        const svgDomMatrix = this.svgELement.nativeElement.getScreenCTM()?.inverse();
        this.svgSpace = { svgPoint, svgDomMatrix };
    }
    setAlignByTheCorners(series) {
        this.alignByTheCorners = series.every(serie => serie.type === PoChartType.Area || serie.type === PoChartType.Bar);
    }
    setRange(series, options = {}) {
        if (!this.isTypeCircular) {
            this.range = this.getRange(series, options);
        }
    }
    setSeriesByType(series) {
        this.seriesByType = {
            [PoChartType.Area]: series.filter(serie => serie.type === PoChartType.Area),
            [PoChartType.Column]: series.filter(serie => serie.type === PoChartType.Column),
            [PoChartType.Bar]: series.filter(serie => serie.type === PoChartType.Bar),
            [PoChartType.Line]: series.filter(serie => serie.type === PoChartType.Line),
            [PoChartType.Donut]: series.filter(serie => serie.type === PoChartType.Donut),
            [PoChartType.Pie]: series.filter(serie => serie.type === PoChartType.Pie)
        };
    }
    setViewBox() {
        const { svgWidth, svgHeight } = this.containerSize;
        const viewBoxWidth = this.isTypeCircular ? svgHeight : svgWidth;
        // Tratamento necessário para que não corte o vetor nas extremidades
        const offsetXY = 1;
        this.viewBox = `${offsetXY} -${offsetXY} ${viewBoxWidth} ${this.containerSize.svgHeight}`;
    }
    verifyAxisOptions(options) {
        if (!this.isTypeCircular && options.hasOwnProperty('axis')) {
            this.range = this.getRange(this.series, this.options);
            this.axisOptions = {
                ...this.axisOptions,
                ...options.axis
            };
        }
    }
}
PoChartContainerComponent.ɵfac = function PoChartContainerComponent_Factory(t) { return new (t || PoChartContainerComponent)(i0.ɵɵdirectiveInject(i1.PoChartMathsService)); };
PoChartContainerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoChartContainerComponent, selectors: [["po-chart-container"]], viewQuery: function PoChartContainerComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgELement = _t.first);
    } }, inputs: { categories: ["p-categories", "categories"], type: ["p-type", "type"], containerSize: ["p-container-size", "containerSize"], options: ["p-options", "options"], series: ["p-series", "series"] }, outputs: { serieClick: "p-serie-click", serieHover: "p-serie-hover" }, features: [i0.ɵɵNgOnChangesFeature], decls: 9, vars: 10, consts: [["preserveAspectRatio", "xMidYMin meet", 1, "po-chart-svg-element"], ["svgELement", ""], ["po-chart-axis", "", 3, "p-align-by-the-corners", "p-range", "p-type", "p-series", "p-container-size", "p-options", "p-categories", "p-categories-coordinates", 4, "ngIf"], ["po-chart-area", "", 3, "p-align-by-the-corners", "p-svg-space", "p-categories", "p-categories-coordinates", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click", 4, "ngIf"], ["po-chart-column", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click", 4, "ngIf"], ["po-chart-line", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-point-hover", "p-point-click", 4, "ngIf"], ["po-chart-bar", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click", 4, "ngIf"], ["po-chart-pie", "", 3, "p-series", "p-container-size", "p-circular-hover", "p-circular-click", 4, "ngIf"], ["po-chart-donut", "", 3, "p-options", "p-series", "p-container-size", "p-circular-hover", "p-circular-click", 4, "ngIf"], ["po-chart-axis", "", 3, "p-align-by-the-corners", "p-range", "p-type", "p-series", "p-container-size", "p-options", "p-categories", "p-categories-coordinates"], ["po-chart-area", "", 3, "p-align-by-the-corners", "p-svg-space", "p-categories", "p-categories-coordinates", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click"], ["po-chart-column", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click"], ["po-chart-line", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-point-hover", "p-point-click"], ["po-chart-bar", "", 3, "p-categories", "p-range", "p-series", "p-container-size", "p-bar-hover", "p-bar-click"], ["po-chart-pie", "", 3, "p-series", "p-container-size", "p-circular-hover", "p-circular-click"], ["po-chart-donut", "", 3, "p-options", "p-series", "p-container-size", "p-circular-hover", "p-circular-click"]], template: function PoChartContainerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵnamespaceSVG();
        i0.ɵɵelementStart(0, "svg", 0, 1);
        i0.ɵɵtemplate(2, PoChartContainerComponent__svg_g_2_Template, 1, 7, "g", 2);
        i0.ɵɵtemplate(3, PoChartContainerComponent__svg_g_3_Template, 1, 7, "g", 3);
        i0.ɵɵtemplate(4, PoChartContainerComponent__svg_g_4_Template, 1, 4, "g", 4);
        i0.ɵɵtemplate(5, PoChartContainerComponent__svg_g_5_Template, 1, 4, "g", 5);
        i0.ɵɵtemplate(6, PoChartContainerComponent__svg_g_6_Template, 1, 4, "g", 6);
        i0.ɵɵtemplate(7, PoChartContainerComponent__svg_g_7_Template, 1, 2, "g", 7);
        i0.ɵɵtemplate(8, PoChartContainerComponent__svg_g_8_Template, 1, 3, "g", 8);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵattribute("viewBox", ctx.viewBox)("width", ctx.containerSize.svgWidth)("height", ctx.containerSize.svgHeight);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.isTypeCircular);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", (ctx.type === "area" || ctx.type === "line" || ctx.type === "column") && ctx.seriesByType["area"].length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", (ctx.type === "area" || ctx.type === "line" || ctx.type === "column") && ctx.seriesByType["column"].length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", (ctx.type === "area" || ctx.type === "line" || ctx.type === "column") && ctx.seriesByType["line"].length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "bar");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "pie");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "donut");
    } }, dependencies: [i2.NgIf, i3.PoChartAreaComponent, i4.PoChartAxisComponent, i5.PoChartLineComponent, i6.PoChartPieComponent, i7.PoChartDonutComponent, i8.PoChartBarComponent, i9.PoChartColumnComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoChartContainerComponent, [{
        type: Component,
        args: [{ selector: 'po-chart-container', template: "<svg:svg\n  #svgELement\n  class=\"po-chart-svg-element\"\n  preserveAspectRatio=\"xMidYMin meet\"\n  [attr.viewBox]=\"viewBox\"\n  [attr.width]=\"containerSize.svgWidth\"\n  [attr.height]=\"containerSize.svgHeight\"\n>\n  <!-- axis -->\n  <svg:g\n    *ngIf=\"!isTypeCircular\"\n    po-chart-axis\n    [p-align-by-the-corners]=\"alignByTheCorners\"\n    [p-range]=\"range\"\n    [p-type]=\"type\"\n    [p-series]=\"series\"\n    [p-container-size]=\"containerSize\"\n    [p-options]=\"axisOptions\"\n    [p-categories]=\"categories\"\n    (p-categories-coordinates)=\"getCategoriesCoordinates($event)\"\n  ></svg:g>\n\n  <!-- chart area -->\n  <svg:g\n    *ngIf=\"(type === 'area' || type === 'line' || type === 'column') && seriesByType['area'].length\"\n    po-chart-area\n    [p-align-by-the-corners]=\"alignByTheCorners\"\n    [p-svg-space]=\"svgSpace\"\n    [p-categories]=\"categories\"\n    [p-categories-coordinates]=\"categoriesCoordinates\"\n    [p-range]=\"range\"\n    [p-series]=\"seriesByType['area']\"\n    [p-container-size]=\"containerSize\"\n    (p-bar-hover)=\"onSerieHover($event)\"\n    (p-bar-click)=\"onSerieClick($event)\"\n  ></svg:g>\n\n  <!-- chart column -->\n  <svg:g\n    *ngIf=\"(type === 'area' || type === 'line' || type === 'column') && seriesByType['column'].length\"\n    po-chart-column\n    [p-categories]=\"categories\"\n    [p-range]=\"range\"\n    [p-series]=\"seriesByType['column']\"\n    [p-container-size]=\"containerSize\"\n    (p-bar-hover)=\"onSerieHover($event)\"\n    (p-bar-click)=\"onSerieClick($event)\"\n  ></svg:g>\n\n  <!-- chart line -->\n  <svg:g\n    *ngIf=\"(type === 'area' || type === 'line' || type === 'column') && seriesByType['line'].length\"\n    po-chart-line\n    [p-categories]=\"categories\"\n    [p-range]=\"range\"\n    [p-series]=\"seriesByType['line']\"\n    [p-container-size]=\"containerSize\"\n    (p-point-hover)=\"onSerieHover($event)\"\n    (p-point-click)=\"onSerieClick($event)\"\n  ></svg:g>\n\n  <!-- chart bar -->\n  <svg:g\n    *ngIf=\"type === 'bar'\"\n    po-chart-bar\n    [p-categories]=\"categories\"\n    [p-range]=\"range\"\n    [p-series]=\"seriesByType['bar']\"\n    [p-container-size]=\"containerSize\"\n    (p-bar-hover)=\"onSerieHover($event)\"\n    (p-bar-click)=\"onSerieClick($event)\"\n  ></svg:g>\n\n  <svg:g\n    *ngIf=\"type === 'pie'\"\n    po-chart-pie\n    [p-series]=\"seriesByType['pie']\"\n    [p-container-size]=\"containerSize\"\n    (p-circular-hover)=\"onSerieHover($event)\"\n    (p-circular-click)=\"onSerieClick($event)\"\n  ></svg:g>\n\n  <svg:g\n    *ngIf=\"type === 'donut'\"\n    po-chart-donut\n    [p-options]=\"options\"\n    [p-series]=\"seriesByType['donut']\"\n    [p-container-size]=\"containerSize\"\n    (p-circular-hover)=\"onSerieHover($event)\"\n    (p-circular-click)=\"onSerieClick($event)\"\n  ></svg:g>\n</svg:svg>\n" }]
    }], function () { return [{ type: i1.PoChartMathsService }]; }, { categories: [{
            type: Input,
            args: ['p-categories']
        }], type: [{
            type: Input,
            args: ['p-type']
        }], containerSize: [{
            type: Input,
            args: ['p-container-size']
        }], serieClick: [{
            type: Output,
            args: ['p-serie-click']
        }], serieHover: [{
            type: Output,
            args: ['p-serie-hover']
        }], svgELement: [{
            type: ViewChild,
            args: ['svgELement', { static: true }]
        }], options: [{
            type: Input,
            args: ['p-options']
        }], series: [{
            type: Input,
            args: ['p-series']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,