import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @usedBy PoListViewComponent
 *
 * @description
 *
 * Esta diretiva permite que sejam apresentadas informações essenciais de cada item.
 *
 * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.
 *  - Item: `item` determina o item da linha corrente.
 *  - Índice: `index` determina o índice da linha corrente.
 *
 * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-list-view
 *   p-property-title="name"
 *   [p-items]="[{id: 1, name: "Register", email: register@po-ui.com}]">
 *
 *   <ng-template p-list-view-content-template let-item let-code="index">
 *     <div class="po-row">
 *       <po-info class="po-md-6" p-label="Code" [p-value]="code"></po-info>
 *       <po-info class="po-md-6" p-label="Email" [p-value]="item.email"></po-info>
 *     </div>
 *   </ng-template>
 *
 * </po-list-view>
 *
 * ...
 * ```
 *
 * ```
 * ...
 * <po-list-view
 *    p-property-title="name"
 *    [p-items]="[{id: 1, name: "Register", email: register@po-ui.com}]">
 *
 *    <div *p-list-view-content-template="let item, let i=index" class="po-row">
 *      <po-info class="po-md-12" p-label="Email" [p-value]="item.email"></po-info>
 *    </div>
 * </po-list-view>
 * ...
 *
 * ```
 *
 * A diretiva **p-list-view-content-template**, possibilita também alterar o título dos itens. Para isto,
 * é necessário atribuir a referência da função que faz a alteração, à propriedade `p-title`,
 * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:
 *
 * ```
 * ...
 * @Component({
 *    selector: 'app-root',
 *    template: `
 *      ...
 *      <po-list-view
 *        [p-items]="items">
 *        <ng-template p-list-view-content-template let-item [p-title]="customTitle">
 *          <div class="po-row">
 *            <po-info class="po-md-12" p-label="Customer" [p-value]="item.customer"></po-info>
 *          </div>
 *        </ng-template>
 *      ...
 *    `
 * })
 * export class AppComponent {
 *    public items = [{
 *      code: 1200,
 *      product: 'Rice',
 *      customer: 'Supermarket 1',
 *    }, {
 *      code: 1355,
 *      product: 'Bean',
 *      customer: 'Supermarket 2'
 *    }];
 *
 *    customTitle(item) {
 *      return `${item.code} - ${item.product}`;
 *    }
 * }
 * ```
 */
export class PoListViewContentTemplateDirective {
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
PoListViewContentTemplateDirective.ɵfac = function PoListViewContentTemplateDirective_Factory(t) { return new (t || PoListViewContentTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef)); };
PoListViewContentTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoListViewContentTemplateDirective, selectors: [["", "p-list-view-content-template", ""]], inputs: { title: ["p-title", "title"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoListViewContentTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[p-list-view-content-template]'
            }]
    }], function () { return [{ type: i0.TemplateRef }]; }, { title: [{
            type: Input,
            args: ['p-title']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWxpc3Qtdmlldy9wby1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZS9wby1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7O0FBRTlEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpRkc7QUFJSCxNQUFNLE9BQU8sa0NBQWtDO0lBWTdDLHNFQUFzRTtJQUN0RSxZQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7SUFBRyxDQUFDOztvSEFiekMsa0NBQWtDO3FGQUFsQyxrQ0FBa0M7dUZBQWxDLGtDQUFrQztjQUg5QyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdDQUFnQzthQUMzQzs4REFXbUIsS0FBSztrQkFBdEIsS0FBSzttQkFBQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAdXNlZEJ5IFBvTGlzdFZpZXdDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RhIGRpcmV0aXZhIHBlcm1pdGUgcXVlIHNlamFtIGFwcmVzZW50YWRhcyBpbmZvcm1hw6fDtWVzIGVzc2VuY2lhaXMgZGUgY2FkYSBpdGVtLlxuICpcbiAqIERldmUtc2UgdXRpbGl6YXIgY29tbyBwYXLDom1ldHJvIGEgcmVmZXLDqm5jaWEgZG8gaXRlbSBlL291IMOtbmRpY2UsIHNlbmRvIHBvciBwYWRyw6NvIG8gaXRlbS5cbiAqICAtIEl0ZW06IGBpdGVtYCBkZXRlcm1pbmEgbyBpdGVtIGRhIGxpbmhhIGNvcnJlbnRlLlxuICogIC0gw41uZGljZTogYGluZGV4YCBkZXRlcm1pbmEgbyDDrW5kaWNlIGRhIGxpbmhhIGNvcnJlbnRlLlxuICpcbiAqIEVzdGEgZGlyZXRpdmEgcG9kZSBzZXIgdXNhZGEgZGUgZHVhcyBmb3JtYXM6IGV4cGzDrWNpdGEgb3UgKnN5bnRheCBzdWdhciouIFZlamEgYSBzZWd1aXIgYW1ib3MsIHJlc3BlY3RpdmFtZW50ZTpcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPHBvLWxpc3Qtdmlld1xuICogICBwLXByb3BlcnR5LXRpdGxlPVwibmFtZVwiXG4gKiAgIFtwLWl0ZW1zXT1cIlt7aWQ6IDEsIG5hbWU6IFwiUmVnaXN0ZXJcIiwgZW1haWw6IHJlZ2lzdGVyQHBvLXVpLmNvbX1dXCI+XG4gKlxuICogICA8bmctdGVtcGxhdGUgcC1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZSBsZXQtaXRlbSBsZXQtY29kZT1cImluZGV4XCI+XG4gKiAgICAgPGRpdiBjbGFzcz1cInBvLXJvd1wiPlxuICogICAgICAgPHBvLWluZm8gY2xhc3M9XCJwby1tZC02XCIgcC1sYWJlbD1cIkNvZGVcIiBbcC12YWx1ZV09XCJjb2RlXCI+PC9wby1pbmZvPlxuICogICAgICAgPHBvLWluZm8gY2xhc3M9XCJwby1tZC02XCIgcC1sYWJlbD1cIkVtYWlsXCIgW3AtdmFsdWVdPVwiaXRlbS5lbWFpbFwiPjwvcG8taW5mbz5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9uZy10ZW1wbGF0ZT5cbiAqXG4gKiA8L3BvLWxpc3Qtdmlldz5cbiAqXG4gKiAuLi5cbiAqIGBgYFxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tbGlzdC12aWV3XG4gKiAgICBwLXByb3BlcnR5LXRpdGxlPVwibmFtZVwiXG4gKiAgICBbcC1pdGVtc109XCJbe2lkOiAxLCBuYW1lOiBcIlJlZ2lzdGVyXCIsIGVtYWlsOiByZWdpc3RlckBwby11aS5jb219XVwiPlxuICpcbiAqICAgIDxkaXYgKnAtbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGU9XCJsZXQgaXRlbSwgbGV0IGk9aW5kZXhcIiBjbGFzcz1cInBvLXJvd1wiPlxuICogICAgICA8cG8taW5mbyBjbGFzcz1cInBvLW1kLTEyXCIgcC1sYWJlbD1cIkVtYWlsXCIgW3AtdmFsdWVdPVwiaXRlbS5lbWFpbFwiPjwvcG8taW5mbz5cbiAqICAgIDwvZGl2PlxuICogPC9wby1saXN0LXZpZXc+XG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqXG4gKiBBIGRpcmV0aXZhICoqcC1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZSoqLCBwb3NzaWJpbGl0YSB0YW1iw6ltIGFsdGVyYXIgbyB0w610dWxvIGRvcyBpdGVucy4gUGFyYSBpc3RvLFxuICogw6kgbmVjZXNzw6FyaW8gYXRyaWJ1aXIgYSByZWZlcsOqbmNpYSBkYSBmdW7Dp8OjbyBxdWUgZmF6IGEgYWx0ZXJhw6fDo28sIMOgIHByb3ByaWVkYWRlIGBwLXRpdGxlYCxcbiAqIGEgbWVzbWEgZGV2ZSByZXRvcm5hciB1bSB2YWxvciBkbyB0aXBvICpzdHJpbmcqLiBWZWphIG8gZXhlbXBsbyBhIHNlZ3VpcjpcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogQENvbXBvbmVudCh7XG4gKiAgICBzZWxlY3RvcjogJ2FwcC1yb290JyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgIC4uLlxuICogICAgICA8cG8tbGlzdC12aWV3XG4gKiAgICAgICAgW3AtaXRlbXNdPVwiaXRlbXNcIj5cbiAqICAgICAgICA8bmctdGVtcGxhdGUgcC1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZSBsZXQtaXRlbSBbcC10aXRsZV09XCJjdXN0b21UaXRsZVwiPlxuICogICAgICAgICAgPGRpdiBjbGFzcz1cInBvLXJvd1wiPlxuICogICAgICAgICAgICA8cG8taW5mbyBjbGFzcz1cInBvLW1kLTEyXCIgcC1sYWJlbD1cIkN1c3RvbWVyXCIgW3AtdmFsdWVdPVwiaXRlbS5jdXN0b21lclwiPjwvcG8taW5mbz5cbiAqICAgICAgICAgIDwvZGl2PlxuICogICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIC4uLlxuICogICAgYFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgcHVibGljIGl0ZW1zID0gW3tcbiAqICAgICAgY29kZTogMTIwMCxcbiAqICAgICAgcHJvZHVjdDogJ1JpY2UnLFxuICogICAgICBjdXN0b21lcjogJ1N1cGVybWFya2V0IDEnLFxuICogICAgfSwge1xuICogICAgICBjb2RlOiAxMzU1LFxuICogICAgICBwcm9kdWN0OiAnQmVhbicsXG4gKiAgICAgIGN1c3RvbWVyOiAnU3VwZXJtYXJrZXQgMidcbiAqICAgIH1dO1xuICpcbiAqICAgIGN1c3RvbVRpdGxlKGl0ZW0pIHtcbiAqICAgICAgcmV0dXJuIGAke2l0ZW0uY29kZX0gLSAke2l0ZW0ucHJvZHVjdH1gO1xuICogICAgfVxuICogfVxuICogYGBgXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twLWxpc3Qtdmlldy1jb250ZW50LXRlbXBsYXRlXSdcbn0pXG5leHBvcnQgY2xhc3MgUG9MaXN0Vmlld0NvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEZ1bsOnw6NvIHF1ZSBkZXZlIHJldG9ybmFyIHVtIHZhbG9yIGRvIHRpcG8gYHN0cmluZ2AsIHF1ZSBzZXLDoSB1dGlsaXphZG8gY29tbyBvIHTDrXR1bG8gZGUgY2FkYSBpdGVtIGRhIGxpc3RhLlxuICAgKlxuICAgKiA+IFBvciBwYXLDom1ldHJvIHNlcsOhIGVudmlhZG8gbyBpdGVtIGNvcnJlbnRlLCBvbmRlIHBvZGVyw6EgdXRpbGl6w6EtbG8gcGFyYSByZWN1cGVyYXIgZGFkb3Mgc29icmUgbyBtZXNtby5cbiAgICovXG4gIEBJbnB1dCgncC10aXRsZScpIHRpdGxlOiAoaXRlbSkgPT4gc3RyaW5nO1xuXG4gIC8vIE5lY2Vzc8OhcmlvIG1hbnRlciB0ZW1wbGF0ZVJlZiBwYXJhIG8gZnVuY2lvbmFtZW50byBkbyByb3cgdGVtcGxhdGUuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cbiJdfQ==