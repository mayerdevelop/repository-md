import { ChangeDetectionStrategy, Component, forwardRef, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoRadioBaseComponent } from './po-radio-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["radioLabel"];
const _c1 = function (a0) { return { "po-radio-large": a0 }; };
const _c2 = function (a0) { return { "po-radio-label-disabled": a0 }; };
/**
 * @docsPrivate
 *
 * @docsExtends PoRadioBaseComponent
 */
export class PoRadioComponent extends PoRadioBaseComponent {
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
    }
    /**
     * Função que atribui foco ao *radio*.
     *
     * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:
     *
     * ```
     * import { ViewChild } from '@angular/core';
     * import { PoRadioComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoRadioComponent, { static: true }) radio: PoRadioComponent;
     *
     * focusRadio() {
     * this.radio.focus();
     * }
     * ```
     *
     */
    focus() {
        if (this.radioLabel && !this.disabled) {
            this.radioLabel.nativeElement.focus();
        }
    }
    onBlur() {
        this.onTouched?.();
    }
    onKeyDown(event, value) {
        if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {
            this.checkOption(value);
            event.preventDefault();
        }
    }
    changeModelValue(value) {
        this.radioValue = typeof value === 'boolean' ? value : false;
        this.changeDetector.detectChanges();
    }
}
PoRadioComponent.ɵfac = function PoRadioComponent_Factory(t) { return new (t || PoRadioComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
PoRadioComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoRadioComponent, selectors: [["po-radio"]], viewQuery: function PoRadioComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioLabel = _t.first);
    } }, features: [i0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => PoRadioComponent),
                multi: true
            }
        ]), i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 15, consts: [[1, "po-radio-container", 3, "click", "keydown"], ["type", "radio", "role", "radio", 1, "po-radio", 3, "ngClass", "id", "tabindex", "disabled"], ["tabindex", "-1", 1, "po-radio-label", 3, "for", "ngClass"], ["radioLabel", ""]], template: function PoRadioComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵlistener("click", function PoRadioComponent_Template_div_click_0_listener() { return ctx.checkOption(ctx.radioValue); })("keydown", function PoRadioComponent_Template_div_keydown_0_listener($event) { return ctx.onKeyDown($event, ctx.radioValue); });
        i0.ɵɵelement(1, "input", 1);
        i0.ɵɵelementStart(2, "label", 2, 3);
        i0.ɵɵtext(4);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        i0.ɵɵattribute("checked", ctx.radioValue);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(11, _c1, ctx.size === "large"))("id", ctx.id)("tabindex", ctx.disabled ? -1 : 0)("disabled", ctx.disabled);
        i0.ɵɵattribute("aria-checked", ctx.radioValue)("aria-label", ctx.label)("aria-disabled", ctx.disabled);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("for", ctx.id)("ngClass", i0.ɵɵpureFunction1(13, _c2, ctx.disabled));
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.label, " ");
    } }, dependencies: [i1.NgClass], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoRadioComponent, [{
        type: Component,
        args: [{ selector: 'po-radio', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoRadioComponent),
                        multi: true
                    }
                ], template: "<div\n  class=\"po-radio-container\"\n  [attr.checked]=\"radioValue\"\n  (click)=\"checkOption(radioValue)\"\n  (keydown)=\"onKeyDown($event, radioValue)\"\n>\n  <input\n    type=\"radio\"\n    [ngClass]=\"{ 'po-radio-large': size === 'large' }\"\n    [attr.aria-checked]=\"radioValue\"\n    [attr.aria-label]=\"label\"\n    [id]=\"id\"\n    class=\"po-radio\"\n    role=\"radio\"\n    [attr.aria-disabled]=\"disabled\"\n    [tabindex]=\"disabled ? -1 : 0\"\n    [disabled]=\"disabled\"\n  />\n  <label\n    #radioLabel\n    [for]=\"id\"\n    class=\"po-radio-label\"\n    [ngClass]=\"{ 'po-radio-label-disabled': disabled }\"\n    tabindex=\"-1\"\n  >\n    {{ label }}\n  </label>\n</div>\n" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { radioLabel: [{
            type: ViewChild,
            args: ['radioLabel', { static: true }]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXJhZGlvL3BvLXJhZGlvLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1maWVsZC9wby1yYWRpby9wby1yYWRpby5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBRXZCLFNBQVMsRUFFVCxVQUFVLEVBQ1YsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7O0FBRWpFOzs7O0dBSUc7QUFhSCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsb0JBQW9CO0lBR3hELFlBQW9CLGNBQWlDO1FBQ25ELEtBQUssRUFBRSxDQUFDO1FBRFUsbUJBQWMsR0FBZCxjQUFjLENBQW1CO0lBRXJELENBQUM7SUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O09Ba0JHO0lBQ0gsS0FBSztRQUNILElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDckMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDdkM7SUFDSCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBb0IsRUFBRSxLQUFjO1FBQzVDLElBQUksS0FBSyxDQUFDLEtBQUssS0FBSyxhQUFhLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxPQUFPLEtBQUssYUFBYSxDQUFDLEtBQUssRUFBRTtZQUNoRixJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBRXhCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN4QjtJQUNILENBQUM7SUFFUyxnQkFBZ0IsQ0FBQyxLQUF1QjtRQUNoRCxJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDN0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnRkEvQ1UsZ0JBQWdCO21FQUFoQixnQkFBZ0I7Ozs7OzBDQVJoQjtZQUNUO2dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0JBQy9DLEtBQUssRUFBRSxJQUFJO2FBQ1o7U0FDRjtRQzVCSCw4QkFLQztRQUZDLDBGQUFTLCtCQUF1QixJQUFDLHVGQUN0QixxQ0FBNkIsSUFEUDtRQUdqQywyQkFXRTtRQUNGLG1DQU1DO1FBQ0MsWUFDRjtRQUFBLGlCQUFRLEVBQUE7O1FBeEJSLHlDQUEyQjtRQU16QixlQUFrRDtRQUFsRCwyRUFBa0QsY0FBQSxtQ0FBQSwwQkFBQTtRQUNsRCw4Q0FBZ0MseUJBQUEsK0JBQUE7UUFXaEMsZUFBVTtRQUFWLDRCQUFVLHNEQUFBO1FBS1YsZUFDRjtRQURFLDBDQUNGOzt1RkRJVyxnQkFBZ0I7Y0FaNUIsU0FBUzsyQkFDRSxVQUFVLG1CQUVILHVCQUF1QixDQUFDLE1BQU0sYUFDcEM7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUM7d0JBQy9DLEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGO29FQUcwQyxVQUFVO2tCQUFwRCxTQUFTO21CQUFDLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgZm9yd2FyZFJlZixcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IFBvS2V5Q29kZUVudW0gfSBmcm9tICcuLy4uLy4uLy4uL2VudW1zL3BvLWtleS1jb2RlLmVudW0nO1xuaW1wb3J0IHsgUG9SYWRpb0Jhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXJhZGlvLWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZG9jc0V4dGVuZHMgUG9SYWRpb0Jhc2VDb21wb25lbnRcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tcmFkaW8nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tcmFkaW8uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb1JhZGlvQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFBvUmFkaW9Db21wb25lbnQgZXh0ZW5kcyBQb1JhZGlvQmFzZUNvbXBvbmVudCB7XG4gIEBWaWV3Q2hpbGQoJ3JhZGlvTGFiZWwnLCB7IHN0YXRpYzogdHJ1ZSB9KSByYWRpb0xhYmVsOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvICpyYWRpbyouXG4gICAqXG4gICAqIFBhcmEgdXRpbGl6w6EtbGEgw6kgbmVjZXNzw6FyaW8gY2FwdHVyYXIgYSByZWZlcsOqbmNpYSBkbyBjb21wb25lbnRlIG5vIERPTSBhdHJhdsOpcyBkbyBgVmlld0NoaWxkYCwgY29tbyBwb3IgZXhlbXBsbzpcbiAgICpcbiAgICogYGBgXG4gICAqIGltcG9ydCB7IFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICAgKiBpbXBvcnQgeyBQb1JhZGlvQ29tcG9uZW50IH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuICAgKlxuICAgKiAuLi5cbiAgICpcbiAgICogQFZpZXdDaGlsZChQb1JhZGlvQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSByYWRpbzogUG9SYWRpb0NvbXBvbmVudDtcbiAgICpcbiAgICogZm9jdXNSYWRpbygpIHtcbiAgICogdGhpcy5yYWRpby5mb2N1cygpO1xuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKi9cbiAgZm9jdXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucmFkaW9MYWJlbCAmJiAhdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5yYWRpb0xhYmVsLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgdGhpcy5vblRvdWNoZWQ/LigpO1xuICB9XG5cbiAgb25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50LCB2YWx1ZTogYm9vbGVhbikge1xuICAgIGlmIChldmVudC53aGljaCA9PT0gUG9LZXlDb2RlRW51bS5zcGFjZSB8fCBldmVudC5rZXlDb2RlID09PSBQb0tleUNvZGVFbnVtLnNwYWNlKSB7XG4gICAgICB0aGlzLmNoZWNrT3B0aW9uKHZhbHVlKTtcblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgY2hhbmdlTW9kZWxWYWx1ZSh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZykge1xuICAgIHRoaXMucmFkaW9WYWx1ZSA9IHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nID8gdmFsdWUgOiBmYWxzZTtcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgfVxufVxuIiwiPGRpdlxuICBjbGFzcz1cInBvLXJhZGlvLWNvbnRhaW5lclwiXG4gIFthdHRyLmNoZWNrZWRdPVwicmFkaW9WYWx1ZVwiXG4gIChjbGljayk9XCJjaGVja09wdGlvbihyYWRpb1ZhbHVlKVwiXG4gIChrZXlkb3duKT1cIm9uS2V5RG93bigkZXZlbnQsIHJhZGlvVmFsdWUpXCJcbj5cbiAgPGlucHV0XG4gICAgdHlwZT1cInJhZGlvXCJcbiAgICBbbmdDbGFzc109XCJ7ICdwby1yYWRpby1sYXJnZSc6IHNpemUgPT09ICdsYXJnZScgfVwiXG4gICAgW2F0dHIuYXJpYS1jaGVja2VkXT1cInJhZGlvVmFsdWVcIlxuICAgIFthdHRyLmFyaWEtbGFiZWxdPVwibGFiZWxcIlxuICAgIFtpZF09XCJpZFwiXG4gICAgY2xhc3M9XCJwby1yYWRpb1wiXG4gICAgcm9sZT1cInJhZGlvXCJcbiAgICBbYXR0ci5hcmlhLWRpc2FibGVkXT1cImRpc2FibGVkXCJcbiAgICBbdGFiaW5kZXhdPVwiZGlzYWJsZWQgPyAtMSA6IDBcIlxuICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gIC8+XG4gIDxsYWJlbFxuICAgICNyYWRpb0xhYmVsXG4gICAgW2Zvcl09XCJpZFwiXG4gICAgY2xhc3M9XCJwby1yYWRpby1sYWJlbFwiXG4gICAgW25nQ2xhc3NdPVwieyAncG8tcmFkaW8tbGFiZWwtZGlzYWJsZWQnOiBkaXNhYmxlZCB9XCJcbiAgICB0YWJpbmRleD1cIi0xXCJcbiAgPlxuICAgIHt7IGxhYmVsIH19XG4gIDwvbGFiZWw+XG48L2Rpdj5cbiJdfQ==