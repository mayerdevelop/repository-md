import { Input, Directive } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * O componente `po-tabs` é responsável por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,
 * ideal para facilitar a organização de conteúdos.
 *
 * Em dispositivos móveis o componente exibirá tadas as abas de maneira linear gerando um *scroll* na horizontal. Já em telas telas com
 * resoluções maiores, o componente exibirá até cinco abas normalmente, porém, à partir de seis abas o componente automaticamente torna
 * visível apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.
 *
 * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.
 *
 * É possível realizar a navegação entre as abas através da tecla TAB do teclado.
 * Caso uma aba estiver desabilitada, não receberá foco de navegação.
 *
 * #### Boas práticas
 *
 * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;
 * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.
 */
export class PoTabsBaseComponent {
    constructor() {
        this._small = false;
    }
    /**
     * @optinal
     *
     * @description
     *
     * Diminui o tamanho das abas.
     *
     * @default `false`
     */
    set small(value) {
        this._small = convertToBoolean(value);
    }
    get small() {
        return this._small;
    }
}
PoTabsBaseComponent.ɵfac = function PoTabsBaseComponent_Factory(t) { return new (t || PoTabsBaseComponent)(); };
PoTabsBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoTabsBaseComponent, inputs: { small: ["p-small", "small"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoTabsBaseComponent, [{
        type: Directive
    }], null, { small: [{
            type: Input,
            args: ['p-small']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFicy1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10YWJzL3BvLXRhYnMtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBRXBEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBRUgsTUFBTSxPQUFPLG1CQUFtQjtJQURoQztRQUVVLFdBQU0sR0FBYSxLQUFLLENBQUM7S0FrQmxDO0lBaEJDOzs7Ozs7OztPQVFHO0lBQ0gsSUFBc0IsS0FBSyxDQUFDLEtBQWM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7O3NGQWxCVSxtQkFBbUI7c0VBQW5CLG1CQUFtQjt1RkFBbkIsbUJBQW1CO2NBRC9CLFNBQVM7Z0JBYWMsS0FBSztrQkFBMUIsS0FBSzttQkFBQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10YWJzYCDDqSByZXNwb25zw6F2ZWwgcG9yIGFncnVwYXIgW2FiYXNdKC9kb2N1bWVudGF0aW9uL3BvLXRhYikgZGlzcG9zdGFzIG51bWEgbGluaGEgaG9yaXpvbnRhbCxcbiAqIGlkZWFsIHBhcmEgZmFjaWxpdGFyIGEgb3JnYW5pemHDp8OjbyBkZSBjb250ZcO6ZG9zLlxuICpcbiAqIEVtIGRpc3Bvc2l0aXZvcyBtw7N2ZWlzIG8gY29tcG9uZW50ZSBleGliaXLDoSB0YWRhcyBhcyBhYmFzIGRlIG1hbmVpcmEgbGluZWFyIGdlcmFuZG8gdW0gKnNjcm9sbCogbmEgaG9yaXpvbnRhbC4gSsOhIGVtIHRlbGFzIHRlbGFzIGNvbVxuICogcmVzb2x1w6fDtWVzIG1haW9yZXMsIG8gY29tcG9uZW50ZSBleGliaXLDoSBhdMOpIGNpbmNvIGFiYXMgbm9ybWFsbWVudGUsIHBvcsOpbSwgw6AgcGFydGlyIGRlIHNlaXMgYWJhcyBvIGNvbXBvbmVudGUgYXV0b21hdGljYW1lbnRlIHRvcm5hXG4gKiB2aXPDrXZlbCBhcGVuYXMgYXMgcXVhdHJvIHByaW1laXJhcywgYWdydXBhbmRvIGFzIHN1YnNlcXVlbnRlcyBuYSBxdWludGEgYWJhIHJvdHVsYWRhIGRlICoqTWFpcyoqLlxuICpcbiAqID4gQXMgYWJhcyBxdWUgZXN0aXZlcmVtIGFncnVwYWRhcyBzZXLDo28gZGlzcG9zdGFzIG51bWEgY2FzY2F0YSBzdXNwZW5zYSBxdWUgc2Vyw6EgZXhpYmlkYSBhbyBjbGljYXIgbm8gYm90w6NvICoqTWFpcyoqLlxuICpcbiAqIMOJIHBvc3PDrXZlbCByZWFsaXphciBhIG5hdmVnYcOnw6NvIGVudHJlIGFzIGFiYXMgYXRyYXbDqXMgZGEgdGVjbGEgVEFCIGRvIHRlY2xhZG8uXG4gKiBDYXNvIHVtYSBhYmEgZXN0aXZlciBkZXNhYmlsaXRhZGEsIG7Do28gcmVjZWJlcsOhIGZvY28gZGUgbmF2ZWdhw6fDo28uXG4gKlxuICogIyMjIyBCb2FzIHByw6F0aWNhc1xuICpcbiAqIC0gRXZpdGUgdXRpbGl6YXIgdW1hIHF1YW50aWRhZGUgZXhjZXNzaXZhIGRlIGFiYXMsIHBvaXMgaXLDoSBnZXJhciB1bSAqc2Nyb2xsKiBtdWl0byBsb25nbyBubyBgZHJvcGRvd25gO1xuICogLSBFdml0ZSBgbGFiZWxzYCBleHRlbnNvcyBwYXJhIGFzIGB0YWJzYCBwb2lzIHBvZGVtIHF1ZWJyYXIgc2V1ICpsYXlvdXQqLCB1c2UgYGxhYmVsc2AgZGlyZXRvcywgY3VydG9zIGUgaW50dWl0aXZvcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9UYWJzQmFzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX3NtYWxsPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW5hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGltaW51aSBvIHRhbWFuaG8gZGFzIGFiYXMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1zbWFsbCcpIHNldCBzbWFsbCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3NtYWxsID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgc21hbGwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3NtYWxsO1xuICB9XG59XG4iXX0=