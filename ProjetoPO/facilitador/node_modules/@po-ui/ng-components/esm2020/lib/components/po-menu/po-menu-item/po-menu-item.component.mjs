import { Component, Input, ViewChild } from '@angular/core';
import { convertToInt, convertToBoolean } from '../../../utils/util';
import * as i0 from "@angular/core";
import * as i1 from "../services/po-menu-items.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "../../po-badge/po-badge.component";
import * as i5 from "../../po-icon/po-icon.component";
const _c0 = ["menuSubItems"];
function PoMenuItemComponent_a_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoMenuItemComponent_a_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 5);
    i0.ɵɵtemplate(1, PoMenuItemComponent_a_0_ng_container_1_Template, 1, 0, "ng-container", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵproperty("routerLink", ctx_r0.link);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function PoMenuItemComponent_a_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoMenuItemComponent_a_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 7);
    i0.ɵɵtemplate(1, PoMenuItemComponent_a_1_ng_container_1_Template, 1, 0, "ng-container", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵproperty("href", ctx_r1.link, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function PoMenuItemComponent_a_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoMenuItemComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 8);
    i0.ɵɵtemplate(1, PoMenuItemComponent_a_2_ng_container_1_Template, 1, 0, "ng-container", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function PoMenuItemComponent_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoMenuItemComponent_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "po-menu-item", 13);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const subItem_r12 = ctx.$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("p-action", subItem_r12.action)("p-badge-alert", subItem_r12.badgeAlert)("p-badge-color", subItem_r12.badge ? subItem_r12.badge.color : undefined)("p-badge-value", subItem_r12.badge ? subItem_r12.badge.value : undefined)("p-id", subItem_r12.id)("p-label", subItem_r12.label)("p-level", subItem_r12.level)("p-link", subItem_r12.link)("p-sub-items", subItem_r12.subItems)("p-type", subItem_r12.type);
} }
function PoMenuItemComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 9);
    i0.ɵɵtemplate(1, PoMenuItemComponent_div_3_ng_container_1_Template, 1, 0, "ng-container", 6);
    i0.ɵɵelementStart(2, "div", 10, 11);
    i0.ɵɵtemplate(4, PoMenuItemComponent_div_3_div_4_Template, 2, 10, "div", 12);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4);
    i0.ɵɵadvance(1);
    i0.ɵɵstyleProp("max-height", ctx_r3.maxHeight, "px");
    i0.ɵɵproperty("hidden", ctx_r3.collapsedMenu);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.subItems);
} }
function PoMenuItemComponent_ng_template_4_po_badge_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-badge", 20);
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", !ctx_r13.collapsedMenu ? "po-menu-badge-align" : "po-menu-badge-align-collapsed")("p-color", ctx_r13.badgeColor)("p-value", ctx_r13.badgeValue);
} }
function PoMenuItemComponent_ng_template_4_po_icon_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 21);
} if (rf & 2) {
    const ctx_r14 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("p-icon", ctx_r14.icon);
} }
function PoMenuItemComponent_ng_template_4_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 22);
} if (rf & 2) {
    const ctx_r15 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", !ctx_r15.collapsedMenu ? "po-menu-badge-alert" : "po-menu-badge-alert-collapsed");
} }
function PoMenuItemComponent_ng_template_4_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 23);
} if (rf & 2) {
    const ctx_r16 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("po-icon-arrow-up", ctx_r16.isOpened)("po-icon-arrow-down", !ctx_r16.isOpened);
} }
function PoMenuItemComponent_ng_template_4_div_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r17.shortLabel);
} }
function PoMenuItemComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 14);
    i0.ɵɵlistener("click", function PoMenuItemComponent_ng_template_4_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.clickMenuItem($event)); });
    i0.ɵɵtemplate(1, PoMenuItemComponent_ng_template_4_po_badge_1_Template, 1, 3, "po-badge", 15);
    i0.ɵɵtemplate(2, PoMenuItemComponent_ng_template_4_po_icon_2_Template, 1, 1, "po-icon", 16);
    i0.ɵɵtemplate(3, PoMenuItemComponent_ng_template_4_div_3_Template, 1, 1, "div", 17);
    i0.ɵɵtemplate(4, PoMenuItemComponent_ng_template_4_span_4_Template, 1, 4, "span", 18);
    i0.ɵɵelementStart(5, "div");
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(7, PoMenuItemComponent_ng_template_4_div_7_Template, 2, 1, "div", 19);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-menu-icon-container", ctx_r5.level === 1 && ctx_r5.icon)("po-menu-item-selected", ctx_r5.isSelected)("po-menu-item-level-two", ctx_r5.level === 2)("po-menu-item-level-three", ctx_r5.level === 3)("po-menu-item-level-four", ctx_r5.level === 4)("po-menu-item-grouper-up", ctx_r5.type === "subItems" && ctx_r5.isOpened)("po-menu-item-grouper-down", ctx_r5.type === "subItems" && !ctx_r5.isOpened)("po-menu-sub-item-selected", ctx_r5.isSelectedSubItem);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r5.canShowBadge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r5.level === 1 && ctx_r5.icon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r5.badgeAlert);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r5.type === "subItems" && !ctx_r5.collapsedMenu);
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("po-menu-icon-label", ctx_r5.level === 1 && ctx_r5.icon);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r5.label, " ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r5.collapsedMenu);
} }
// valor para que caibam 3 linhas de `label`
const poMenuItemSubItemSize = 98;
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que implementa cada item do po-menu.
 */
export class PoMenuItemComponent {
    constructor(menuItemsService) {
        this.menuItemsService = menuItemsService;
        this.maxHeight = 0;
        this._isSelected = false;
        this._isSubItem = false;
    }
    // Valor do badge.
    set badgeValue(badgeValue) {
        this._badgeValue = convertToInt(badgeValue);
    }
    get badgeValue() {
        return this._badgeValue;
    }
    // Indica se o item está selecionado.
    set isSelected(value) {
        this._isSelected = convertToBoolean(value);
        this.isSelectedSubItem = this.isSelected && this.isSubItem;
    }
    get isSelected() {
        return this._isSelected;
    }
    // Indica se o item é um sub item
    set isSubItem(value) {
        this._isSubItem = convertToBoolean(value);
    }
    get isSubItem() {
        return this._isSubItem;
    }
    // Lista de sub-items.
    set subItems(subitems) {
        this._subItems = subitems;
        if (this.isOpened) {
            this.calcMenuSubItemsMaxHeight();
        }
    }
    get subItems() {
        return this._subItems;
    }
    get canShowBadge() {
        return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;
    }
    ngOnDestroy() {
        this.itemSubscription.unsubscribe();
    }
    ngOnInit() {
        // subscribe to menu component messages
        this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {
            this.processMenuItem(menu);
        });
    }
    clickMenuItem(event) {
        if (!(event.ctrlKey || event.metaKey)) {
            event.preventDefault();
            // Emmit to parent
            this.menuItemsService.sendToParentMenuClicked({
                link: this.link,
                action: this.action,
                id: this.id,
                icon: this.icon,
                label: this.label,
                level: this.level,
                subItems: this.subItems,
                isSelected: this.isSelected,
                isOpened: this.isOpened,
                shortLabel: this.shortLabel,
                type: this.type
            });
        }
    }
    accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute) {
        if (this.id === menuOpened['id']) {
            this.maxHeight = this.subItems.length * poMenuItemSubItemSize;
        }
        if (hasSubItemOpened) {
            this.maxHeight = menuOpened['isOpened']
                ? this.maxHeight + menuOpened.subItems.length * poMenuItemSubItemSize
                : this.maxHeight - menuOpened.subItems.length * poMenuItemSubItemSize;
            if (activatedByRoute) {
                this.maxHeight = this.getMinimumHeight(0, this, menuActive);
            }
        }
    }
    activateMenu(menu) {
        this.isSelected = menu && this.id === menu.id;
    }
    calcMenuSubItemsMaxHeight() {
        setTimeout(() => {
            const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.po-menu-item'));
            subItems.forEach((menuItem) => (this.maxHeight += menuItem.offsetHeight));
        });
    }
    getMinimumHeight(minimumHeight, menuItem, menuActive) {
        minimumHeight += poMenuItemSubItemSize;
        if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {
            for (let index = 0; index < menuItem.subItems.length; index++) {
                minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);
            }
        }
        return minimumHeight;
    }
    groupedMenu(menuActive, menuOpened, activatedByRoute = false) {
        const hasSubItemOpened = menuOpened && this.id !== menuOpened['id'] ? this.hasSubItem(this.subItems, menuOpened['id']) : false;
        this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);
        this.isSelected = menuActive && !this.isOpened ? this.hasSubItem(this.subItems, menuActive['id']) : false;
        if (!this.isOpened) {
            this.maxHeight = 0;
            return;
        }
        this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);
    }
    hasSubItem(subItems, id) {
        if (subItems) {
            return subItems.some(item => (item['id'] === id ? true : this.hasSubItem(item.subItems, id)));
        }
    }
    isMenuOpened(menuOpened, hasSubItemOpened) {
        if (menuOpened) {
            return this.id === menuOpened['id'] ? menuOpened['isOpened'] : hasSubItemOpened;
        }
        return false;
    }
    processMenuItem(menu) {
        if (this.type === 'internalLink') {
            this.activateMenu(menu.active);
            return;
        }
        if (this.type === 'subItems') {
            this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);
        }
    }
}
PoMenuItemComponent.ɵfac = function PoMenuItemComponent_Factory(t) { return new (t || PoMenuItemComponent)(i0.ɵɵdirectiveInject(i1.PoMenuItemsService)); };
PoMenuItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoMenuItemComponent, selectors: [["po-menu-item"]], viewQuery: function PoMenuItemComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuSubItems = _t.first);
    } }, inputs: { action: ["p-action", "action"], badgeAlert: ["p-badge-alert", "badgeAlert"], badgeColor: ["p-badge-color", "badgeColor"], collapsedMenu: ["p-collapsed-menu", "collapsedMenu"], icon: ["p-icon", "icon"], id: ["p-id", "id"], isOpened: ["p-is-opened", "isOpened"], label: ["p-label", "label"], level: ["p-level", "level"], link: ["p-link", "link"], shortLabel: ["p-short-label", "shortLabel"], type: ["p-type", "type"], badgeValue: ["p-badge-value", "badgeValue"], isSelected: ["p-is-selected", "isSelected"], isSubItem: ["p-is-sub-item", "isSubItem"], subItems: ["p-sub-items", "subItems"] }, decls: 6, vars: 4, consts: [["class", "po-menu-item-link", 3, "routerLink", 4, "ngIf"], ["class", "po-menu-item-link", 3, "href", 4, "ngIf"], ["class", "po-menu-item-link", "href", "javascript:;", 4, "ngIf"], ["class", "po-menu-item-link po-clickable", 4, "ngIf"], ["menuItemTemplate", ""], [1, "po-menu-item-link", 3, "routerLink"], [4, "ngTemplateOutlet"], [1, "po-menu-item-link", 3, "href"], ["href", "javascript:;", 1, "po-menu-item-link"], [1, "po-menu-item-link", "po-clickable"], [1, "po-menu-sub-items", 3, "hidden"], ["menuSubItems", ""], [4, "ngFor", "ngForOf"], ["p-is-sub-item", "", 3, "p-action", "p-badge-alert", "p-badge-color", "p-badge-value", "p-id", "p-label", "p-level", "p-link", "p-sub-items", "p-type"], [1, "po-menu-item", 3, "click"], [3, "ngClass", "p-color", "p-value", 4, "ngIf"], ["class", "po-menu-icon-item", 3, "p-icon", 4, "ngIf"], ["class", "po-color-07", 3, "ngClass", 4, "ngIf"], ["class", "po-icon po-menu-group-icon", 3, "po-icon-arrow-up", "po-icon-arrow-down", 4, "ngIf"], ["class", "po-menu-short-label", 4, "ngIf"], [3, "ngClass", "p-color", "p-value"], [1, "po-menu-icon-item", 3, "p-icon"], [1, "po-color-07", 3, "ngClass"], [1, "po-icon", "po-menu-group-icon"], [1, "po-menu-short-label"]], template: function PoMenuItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, PoMenuItemComponent_a_0_Template, 2, 2, "a", 0);
        i0.ɵɵtemplate(1, PoMenuItemComponent_a_1_Template, 2, 2, "a", 1);
        i0.ɵɵtemplate(2, PoMenuItemComponent_a_2_Template, 2, 1, "a", 2);
        i0.ɵɵtemplate(3, PoMenuItemComponent_div_3_Template, 5, 5, "div", 3);
        i0.ɵɵtemplate(4, PoMenuItemComponent_ng_template_4_Template, 8, 24, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.type === "internalLink");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "externalLink");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "noLink");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.type === "subItems");
    } }, dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i3.RouterLinkWithHref, i4.PoBadgeComponent, i5.PoIconComponent, PoMenuItemComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoMenuItemComponent, [{
        type: Component,
        args: [{ selector: 'po-menu-item', template: "<!-- menu com link interno -->\n<a *ngIf=\"type === 'internalLink'\" class=\"po-menu-item-link\" [routerLink]=\"link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu com link externo -->\n<a *ngIf=\"type === 'externalLink'\" class=\"po-menu-item-link\" [href]=\"link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu sem link -->\n<a *ngIf=\"type === 'noLink'\" class=\"po-menu-item-link\" href=\"javascript:;\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu com sub itens -->\n<div *ngIf=\"type === 'subItems'\" class=\"po-menu-item-link po-clickable\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n  <div #menuSubItems class=\"po-menu-sub-items\" [hidden]=\"collapsedMenu\" [style.maxHeight.px]=\"maxHeight\">\n    <div *ngFor=\"let subItem of subItems\">\n      <po-menu-item\n        p-is-sub-item\n        [p-action]=\"subItem.action\"\n        [p-badge-alert]=\"subItem.badgeAlert\"\n        [p-badge-color]=\"subItem.badge ? subItem.badge.color : undefined\"\n        [p-badge-value]=\"subItem.badge ? subItem.badge.value : undefined\"\n        [p-id]=\"subItem.id\"\n        [p-label]=\"subItem.label\"\n        [p-level]=\"subItem.level\"\n        [p-link]=\"subItem.link\"\n        [p-sub-items]=\"subItem.subItems\"\n        [p-type]=\"subItem.type\"\n      >\n      </po-menu-item>\n    </div>\n  </div>\n</div>\n\n<ng-template #menuItemTemplate>\n  <div\n    class=\"po-menu-item\"\n    [class.po-menu-icon-container]=\"level === 1 && icon\"\n    [class.po-menu-item-selected]=\"isSelected\"\n    [class.po-menu-item-level-two]=\"level === 2\"\n    [class.po-menu-item-level-three]=\"level === 3\"\n    [class.po-menu-item-level-four]=\"level === 4\"\n    [class.po-menu-item-grouper-up]=\"type === 'subItems' && isOpened\"\n    [class.po-menu-item-grouper-down]=\"type === 'subItems' && !isOpened\"\n    [class.po-menu-sub-item-selected]=\"isSelectedSubItem\"\n    (click)=\"clickMenuItem($event)\"\n  >\n    <po-badge\n      *ngIf=\"canShowBadge\"\n      [ngClass]=\"!collapsedMenu ? 'po-menu-badge-align' : 'po-menu-badge-align-collapsed'\"\n      [p-color]=\"badgeColor\"\n      [p-value]=\"badgeValue\"\n    >\n    </po-badge>\n    <po-icon *ngIf=\"level === 1 && icon\" class=\"po-menu-icon-item\" [p-icon]=\"icon\"></po-icon>\n    <div\n      *ngIf=\"badgeAlert\"\n      class=\"po-color-07\"\n      [ngClass]=\"!collapsedMenu ? 'po-menu-badge-alert' : 'po-menu-badge-alert-collapsed'\"\n    ></div>\n    <span\n      *ngIf=\"type === 'subItems' && !collapsedMenu\"\n      class=\"po-icon po-menu-group-icon\"\n      [class.po-icon-arrow-up]=\"isOpened\"\n      [class.po-icon-arrow-down]=\"!isOpened\"\n    >\n    </span>\n    <div [class.po-menu-icon-label]=\"level === 1 && icon\">\n      {{ label }}\n    </div>\n    <div *ngIf=\"collapsedMenu\" class=\"po-menu-short-label\">{{ shortLabel }}</div>\n  </div>\n</ng-template>\n" }]
    }], function () { return [{ type: i1.PoMenuItemsService }]; }, { action: [{
            type: Input,
            args: ['p-action']
        }], badgeAlert: [{
            type: Input,
            args: ['p-badge-alert']
        }], badgeColor: [{
            type: Input,
            args: ['p-badge-color']
        }], collapsedMenu: [{
            type: Input,
            args: ['p-collapsed-menu']
        }], icon: [{
            type: Input,
            args: ['p-icon']
        }], id: [{
            type: Input,
            args: ['p-id']
        }], isOpened: [{
            type: Input,
            args: ['p-is-opened']
        }], label: [{
            type: Input,
            args: ['p-label']
        }], level: [{
            type: Input,
            args: ['p-level']
        }], link: [{
            type: Input,
            args: ['p-link']
        }], shortLabel: [{
            type: Input,
            args: ['p-short-label']
        }], type: [{
            type: Input,
            args: ['p-type']
        }], menuSubItems: [{
            type: ViewChild,
            args: ['menuSubItems']
        }], badgeValue: [{
            type: Input,
            args: ['p-badge-value']
        }], isSelected: [{
            type: Input,
            args: ['p-is-selected']
        }], isSubItem: [{
            type: Input,
            args: ['p-is-sub-item']
        }], subItems: [{
            type: Input,
            args: ['p-sub-items']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,