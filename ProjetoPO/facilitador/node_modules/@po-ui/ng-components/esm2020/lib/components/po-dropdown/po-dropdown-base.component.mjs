import { Input, Directive } from '@angular/core';
import { convertToBoolean } from './../../utils/util';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * O componente `po-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.
 *
 * > Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`
 * no módulo principal para o correto funcionamento deste componente:
 *
 * ```
 * import { RouterModule } from '@angular/router';
 *
 * @NgModule({
 *   imports: [
 *     ...
 *     RouterModule.forRoot([]),
 *     PoModule
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   exports: [],
 *   providers: [],
 *   bootstrap: [
 *     AppComponent
 *   ]
 * })
 * export class AppModule { }
 * ```
 * > Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando
 * [/Configurando as rotas do po-menu](/guides/getting-started).
 */
export class PoDropdownBaseComponent {
    constructor() {
        this.icon = 'po-icon-arrow-down';
        this.open = false;
        this._disabled = false;
    }
    /** Lista de ações que serão exibidas no componente. */
    set actions(value) {
        this._actions = Array.isArray(value) ? value : [];
    }
    get actions() {
        return this._actions;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o campo.
     *
     * @default `false`
     */
    set disabled(value) {
        this._disabled = convertToBoolean(value);
    }
    get disabled() {
        return this._disabled;
    }
}
PoDropdownBaseComponent.ɵfac = function PoDropdownBaseComponent_Factory(t) { return new (t || PoDropdownBaseComponent)(); };
PoDropdownBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoDropdownBaseComponent, inputs: { label: ["p-label", "label"], actions: ["p-actions", "actions"], disabled: ["p-disabled", "disabled"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDropdownBaseComponent, [{
        type: Directive
    }], null, { label: [{
            type: Input,
            args: ['p-label']
        }], actions: [{
            type: Input,
            args: ['p-actions']
        }], disabled: [{
            type: Input,
            args: ['p-disabled']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHJvcGRvd24tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZHJvcGRvd24vcG8tZHJvcGRvd24tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBSXREOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4Qkc7QUFHSCxNQUFNLE9BQU8sdUJBQXVCO0lBRHBDO1FBS0UsU0FBSSxHQUFXLG9CQUFvQixDQUFDO1FBQ3BDLFNBQUksR0FBWSxLQUFLLENBQUM7UUFHZCxjQUFTLEdBQVksS0FBSyxDQUFDO0tBMkJwQztJQXpCQyx1REFBdUQ7SUFDdkQsSUFBd0IsT0FBTyxDQUFDLEtBQThCO1FBQzVELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDcEQsQ0FBQztJQUVELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDSCxJQUF5QixRQUFRLENBQUMsS0FBYztRQUM5QyxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7OEZBbENVLHVCQUF1QjswRUFBdkIsdUJBQXVCO3VGQUF2Qix1QkFBdUI7Y0FEbkMsU0FBUztnQkFHVSxLQUFLO2tCQUF0QixLQUFLO21CQUFDLFNBQVM7WUFTUSxPQUFPO2tCQUE5QixLQUFLO21CQUFDLFdBQVc7WUFpQk8sUUFBUTtrQkFBaEMsS0FBSzttQkFBQyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Ecm9wZG93bkFjdGlvbiB9IGZyb20gJy4vcG8tZHJvcGRvd24tYWN0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1kcm9wZG93bmAgcG9kZSBzZXIgdXRpbGl6YWRvIGNvbW8gdW0gYWdydXBhZG9yIGRlIGHDp8O1ZXMgZSAvIG91IG9ww6fDtWVzLlxuICpcbiAqID4gQ2FzbyBuw6NvIGhhamEgY29uZmlndXJhw6fDo28gZGUgcm90YXMgZW0gc3VhIGFwbGljYcOnw6NvLCBzZSBmYXogbmVjZXNzw6FyaW8gaW1wb3J0YXIgbyBgUm91dGVyTW9kdWxlYFxuICogbm8gbcOzZHVsbyBwcmluY2lwYWwgcGFyYSBvIGNvcnJldG8gZnVuY2lvbmFtZW50byBkZXN0ZSBjb21wb25lbnRlOlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLi4uXG4gKiAgICAgUm91dGVyTW9kdWxlLmZvclJvb3QoW10pLFxuICogICAgIFBvTW9kdWxlXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudFxuICogICBdLFxuICogICBleHBvcnRzOiBbXSxcbiAqICAgcHJvdmlkZXJzOiBbXSxcbiAqICAgYm9vdHN0cmFwOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50XG4gKiAgIF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKiA+IFBhcmEgbWFpb3JlcyBkw7p2aWRhcyByZWZlcmVudGUgw6AgY29uZmlndXJhw6fDo28gZGUgcm90YXMsIGFjZXNzZSBlbSBub3NzbyBwb3J0YWwgL0d1aWFzIC9Db21lw6dhbmRvXG4gKiBbL0NvbmZpZ3VyYW5kbyBhcyByb3RhcyBkbyBwby1tZW51XSgvZ3VpZGVzL2dldHRpbmctc3RhcnRlZCkuXG4gKi9cblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9Ecm9wZG93bkJhc2VDb21wb25lbnQge1xuICAvKiogQWRpY2lvbmEgdW0gcsOzdHVsbyBhbyBgZHJvcGRvd25gLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIGljb246IHN0cmluZyA9ICdwby1pY29uLWFycm93LWRvd24nO1xuICBvcGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfYWN0aW9uczogQXJyYXk8UG9Ecm9wZG93bkFjdGlvbj47XG4gIHByaXZhdGUgX2Rpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIExpc3RhIGRlIGHDp8O1ZXMgcXVlIHNlcsOjbyBleGliaWRhcyBubyBjb21wb25lbnRlLiAqL1xuICBASW5wdXQoJ3AtYWN0aW9ucycpIHNldCBhY3Rpb25zKHZhbHVlOiBBcnJheTxQb0Ryb3Bkb3duQWN0aW9uPikge1xuICAgIHRoaXMuX2FjdGlvbnMgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW107XG4gIH1cblxuICBnZXQgYWN0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fYWN0aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlc2FiaWxpdGEgbyBjYW1wby5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLWRpc2FibGVkJykgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQ7XG4gIH1cbn1cbiJdfQ==