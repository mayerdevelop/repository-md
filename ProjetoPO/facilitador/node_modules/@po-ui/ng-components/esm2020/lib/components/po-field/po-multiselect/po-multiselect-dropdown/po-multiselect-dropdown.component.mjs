import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
const _c0 = ["container"];
const _c1 = ["ulElement"];
const _c2 = ["searchElement"];
function PoMultiselectDropdownComponent_po_multiselect_search_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-multiselect-search", 8, 9);
    i0.ɵɵlistener("p-change", function PoMultiselectDropdownComponent_po_multiselect_search_2_Template_po_multiselect_search_p_change_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.callChangeSearch($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-literals", ctx_r1.literals)("p-placeholder", ctx_r1.placeholderSearch);
} }
function PoMultiselectDropdownComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", ctx_r3.literals.noData, "");
} }
function PoMultiselectDropdownComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11);
    i0.ɵɵelement(1, "po-loading");
    i0.ɵɵelementEnd();
} }
function PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-multiselect-item", 14);
    i0.ɵɵlistener("p-change", function PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_1_Template_po_multiselect_item_p_change_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r11.onClickSelectAll()); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("p-label", ctx_r9.literals == null ? null : ctx_r9.literals.selectAll)("p-selected", ctx_r9.getStateSelectAll());
} }
function PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_2_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-multiselect-item", 14);
    i0.ɵɵlistener("p-change", function PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_2_Template_po_multiselect_item_p_change_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r15); const option_r13 = restoredCtx.$implicit; const ctx_r14 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r14.clickItem($event, option_r13)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r13 = ctx.$implicit;
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("p-label", option_r13.label)("p-selected", ctx_r10.isSelectedItem(option_r13));
} }
function PoMultiselectDropdownComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_1_Template, 1, 2, "po-multiselect-item", 12);
    i0.ɵɵtemplate(2, PoMultiselectDropdownComponent_ng_container_7_po_multiselect_item_2_Template, 1, 2, "po-multiselect-item", 13);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !(ctx_r5.searchElement == null ? null : ctx_r5.searchElement.inputValue) && ctx_r5.visibleOptions.length && !ctx_r5.hideSelectAll);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r5.visibleOptions);
} }
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.
 */
export class PoMultiselectDropdownComponent {
    constructor(cd) {
        this.cd = cd;
        /** Propriedade que indica se deve exibir o loading. */
        this.isServerSearching = false;
        /** Propriedade que indica se o campo de pesquisa deverá ser escondido. */
        this.hideSearch = false;
        /** Propriedade que recebe a lista de opções selecionadas. */
        this.selectedOptions = [];
        /** Propriedade que recebe a lista com todas as opções. */
        this.options = [];
        /** Propriedade que recebe a lista de opções que deverão ser criadas no dropdown. */
        this.visibleOptions = [];
        /** Propriedade que indica se o campo "Selecionar todos" deverá ser escondido. */
        this.hideSelectAll = false;
        /** Evento disparado a cada tecla digitada na pesquisa. */
        this.changeSearch = new EventEmitter();
        /** Evento disparado a cada alteração na lista das opções selecionadas. */
        this.change = new EventEmitter();
        /**
         * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.
         * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento
         * para notificar o componente principal que deve fechar o dropdown.
         */
        this.closeDropdown = new EventEmitter();
        this.scrollTop = 0;
        this.show = false;
    }
    get hasOptions() {
        return !!this.options?.length;
    }
    onKeydown(event) {
        if (event.keyCode === 9) {
            this.closeDropdown.emit();
        }
    }
    scrollTo(index) {
        this.scrollTop = index <= 2 ? 0 : index * 44 - 88;
        this.cd.markForCheck();
    }
    isSelectedItem(option) {
        return this.selectedOptions.some(selectedItem => selectedItem.value === option.value);
    }
    clickItem(check, option) {
        this.updateSelectedValues(check, option);
        if (!this.hideSearch) {
            this.searchElement.setFocus();
        }
    }
    onClickSelectAll() {
        const selectedValues = this.selectedOptions.map(({ value }) => value);
        if (this.everyVisibleOptionsSelected(selectedValues)) {
            this.selectedOptions = [];
        }
        else {
            this.selectedOptions = this.uniqueSelectedOptions(selectedValues);
        }
        this.change.emit(this.selectedOptions);
    }
    updateSelectedValues(checked, option) {
        if (checked) {
            this.selectedOptions.push(option);
        }
        else {
            this.selectedOptions = this.selectedOptions.filter(selectedOption => selectedOption.value !== option.value);
        }
        this.change.emit(this.selectedOptions);
    }
    everyVisibleOptionsSelected(selectedValues) {
        return this.visibleOptions.every(visibleOption => selectedValues.includes(visibleOption.value));
    }
    someVisibleOptionsSelected(selectedValues) {
        return this.visibleOptions.some(visibleOption => selectedValues.includes(visibleOption.value));
    }
    getStateSelectAll() {
        const selectedValues = this.selectedOptions.map(({ value }) => value);
        if (this.everyVisibleOptionsSelected(selectedValues)) {
            return true;
        }
        else if (this.someVisibleOptionsSelected(selectedValues)) {
            return null;
        }
        else {
            return false;
        }
    }
    callChangeSearch(event) {
        this.changeSearch.emit(event);
    }
    controlVisibility(toOpen) {
        this.show = toOpen;
        setTimeout(() => {
            if (toOpen && this.searchElement && !this.hideSearch) {
                this.searchElement.setFocus();
                this.searchElement.clean();
            }
        });
        this.cd.markForCheck();
    }
    uniqueSelectedOptions(selectedValues) {
        const newSelectedOptions = [...this.selectedOptions];
        for (const visibleOption of this.visibleOptions) {
            if (!selectedValues.includes(visibleOption.value)) {
                newSelectedOptions.push(visibleOption);
            }
        }
        return newSelectedOptions;
    }
}
PoMultiselectDropdownComponent.ɵfac = function PoMultiselectDropdownComponent_Factory(t) { return new (t || PoMultiselectDropdownComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
PoMultiselectDropdownComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoMultiselectDropdownComponent, selectors: [["po-multiselect-dropdown"]], viewQuery: function PoMultiselectDropdownComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7, ElementRef);
        i0.ɵɵviewQuery(_c1, 7, ElementRef);
        i0.ɵɵviewQuery(_c2, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ulElement = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchElement = _t.first);
    } }, hostBindings: function PoMultiselectDropdownComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("keydown", function PoMultiselectDropdownComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });
    } }, inputs: { isServerSearching: ["p-searching", "isServerSearching"], hideSearch: ["p-hide-search", "hideSearch"], literals: ["p-literals", "literals"], placeholderSearch: ["p-placeholder-search", "placeholderSearch"], selectedOptions: ["p-selected-options", "selectedOptions"], options: ["p-options", "options"], visibleOptions: ["p-visible-options", "visibleOptions"], hideSelectAll: ["p-hide-select-all", "hideSelectAll"] }, outputs: { changeSearch: "p-change-search", change: "p-change", closeDropdown: "p-close-dropdown" }, decls: 8, vars: 6, consts: [[1, "po-multiselect-container", 3, "hidden"], ["container", ""], [3, "p-literals", "p-placeholder", "p-change", 4, "ngIf"], [1, "po-multiselect-items-container", 3, "scrollTop"], ["ulElement", ""], ["class", "po-multiselect-container-no-data po-text-center", 4, "ngIf"], ["class", "po-multiselect-container-loading po-text-center", 4, "ngIf"], [4, "ngIf"], [3, "p-literals", "p-placeholder", "p-change"], ["searchElement", ""], [1, "po-multiselect-container-no-data", "po-text-center"], [1, "po-multiselect-container-loading", "po-text-center"], [3, "p-label", "p-selected", "p-change", 4, "ngIf"], [3, "p-label", "p-selected", "p-change", 4, "ngFor", "ngForOf"], [3, "p-label", "p-selected", "p-change"]], template: function PoMultiselectDropdownComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0, 1);
        i0.ɵɵtemplate(2, PoMultiselectDropdownComponent_po_multiselect_search_2_Template, 2, 2, "po-multiselect-search", 2);
        i0.ɵɵelementStart(3, "ul", 3, 4);
        i0.ɵɵtemplate(5, PoMultiselectDropdownComponent_div_5_Template, 3, 1, "div", 5);
        i0.ɵɵtemplate(6, PoMultiselectDropdownComponent_div_6_Template, 2, 0, "div", 6);
        i0.ɵɵtemplate(7, PoMultiselectDropdownComponent_ng_container_7_Template, 3, 2, "ng-container", 7);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        i0.ɵɵproperty("hidden", !ctx.show);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.hideSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("scrollTop", ctx.scrollTop);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.visibleOptions.length && !ctx.isServerSearching);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.isServerSearching);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.isServerSearching);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoMultiselectDropdownComponent, [{
        type: Component,
        args: [{ selector: 'po-multiselect-dropdown', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div #container class=\"po-multiselect-container\" [hidden]=\"!show\">\n  <po-multiselect-search\n    #searchElement\n    *ngIf=\"!hideSearch\"\n    [p-literals]=\"literals\"\n    [p-placeholder]=\"placeholderSearch\"\n    (p-change)=\"callChangeSearch($event)\"\n  >\n  </po-multiselect-search>\n\n  <ul class=\"po-multiselect-items-container\" [scrollTop]=\"scrollTop\" #ulElement>\n    <div *ngIf=\"!visibleOptions.length && !isServerSearching\" class=\"po-multiselect-container-no-data po-text-center\">\n      <span> {{ literals.noData }}</span>\n    </div>\n\n    <div *ngIf=\"isServerSearching\" class=\"po-multiselect-container-loading po-text-center\">\n      <po-loading></po-loading>\n    </div>\n\n    <ng-container *ngIf=\"!isServerSearching\">\n      <po-multiselect-item\n        *ngIf=\"!searchElement?.inputValue && visibleOptions.length && !hideSelectAll\"\n        [p-label]=\"literals?.selectAll\"\n        [p-selected]=\"getStateSelectAll()\"\n        (p-change)=\"onClickSelectAll()\"\n      >\n      </po-multiselect-item>\n\n      <po-multiselect-item\n        *ngFor=\"let option of visibleOptions\"\n        [p-label]=\"option.label\"\n        [p-selected]=\"isSelectedItem(option)\"\n        (p-change)=\"clickItem($event, option)\"\n      >\n      </po-multiselect-item>\n    </ng-container>\n  </ul>\n</div>\n" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { isServerSearching: [{
            type: Input,
            args: ['p-searching']
        }], hideSearch: [{
            type: Input,
            args: ['p-hide-search']
        }], literals: [{
            type: Input,
            args: ['p-literals']
        }], placeholderSearch: [{
            type: Input,
            args: ['p-placeholder-search']
        }], selectedOptions: [{
            type: Input,
            args: ['p-selected-options']
        }], options: [{
            type: Input,
            args: ['p-options']
        }], visibleOptions: [{
            type: Input,
            args: ['p-visible-options']
        }], hideSelectAll: [{
            type: Input,
            args: ['p-hide-select-all']
        }], changeSearch: [{
            type: Output,
            args: ['p-change-search']
        }], change: [{
            type: Output,
            args: ['p-change']
        }], closeDropdown: [{
            type: Output,
            args: ['p-close-dropdown']
        }], container: [{
            type: ViewChild,
            args: ['container', { read: ElementRef, static: true }]
        }], ulElement: [{
            type: ViewChild,
            args: ['ulElement', { read: ElementRef, static: true }]
        }], searchElement: [{
            type: ViewChild,
            args: ['searchElement']
        }], onKeydown: [{
            type: HostListener,
            args: ['keydown', ['$event']]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLW11bHRpc2VsZWN0L3BvLW11bHRpc2VsZWN0LWRyb3Bkb3duL3BvLW11bHRpc2VsZWN0LWRyb3Bkb3duLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1maWVsZC9wby1tdWx0aXNlbGVjdC9wby1tdWx0aXNlbGVjdC1kcm9wZG93bi9wby1tdWx0aXNlbGVjdC1kcm9wZG93bi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBRXZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQzs7Ozs7OztJQ1RyQixtREFNQztJQURDLHdOQUFZLGVBQUEsK0JBQXdCLENBQUEsSUFBQztJQUV2QyxpQkFBd0I7OztJQUp0Qiw0Q0FBdUIsMkNBQUE7OztJQU92QiwrQkFBa0gsV0FBQTtJQUN6RyxZQUFxQjtJQUFBLGlCQUFPLEVBQUE7OztJQUE1QixlQUFxQjtJQUFyQixzREFBcUI7OztJQUc5QiwrQkFBdUY7SUFDckYsNkJBQXlCO0lBQzNCLGlCQUFNOzs7O0lBR0osK0NBS0M7SUFEQyxnT0FBWSxlQUFBLDBCQUFrQixDQUFBLElBQUM7SUFFakMsaUJBQXNCOzs7SUFKcEIsb0ZBQStCLDBDQUFBOzs7O0lBTWpDLCtDQUtDO0lBREMsb1NBQVksZUFBQSxxQ0FBeUIsQ0FBQSxJQUFDO0lBRXhDLGlCQUFzQjs7OztJQUpwQiwwQ0FBd0Isa0RBQUE7OztJQVg1Qiw2QkFBeUM7SUFDdkMsK0hBTXNC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QUF0QyxLQUFLO21CQUFDLGFBQWE7WUFHSSxVQUFVO2tCQUFqQyxLQUFLO21CQUFDLGVBQWU7WUFHRCxRQUFRO2tCQUE1QixLQUFLO21CQUFDLFlBQVk7WUFHWSxpQkFBaUI7a0JBQS9DLEtBQUs7bUJBQUMsc0JBQXNCO1lBR0EsZUFBZTtrQkFBM0MsS0FBSzttQkFBQyxvQkFBb0I7WUFHUCxPQUFPO2tCQUExQixLQUFLO21CQUFDLFdBQVc7WUFHVSxjQUFjO2tCQUF6QyxLQUFLO21CQUFDLG1CQUFtQjtZQUdFLGFBQWE7a0JBQXhDLEtBQUs7bUJBQUMsbUJBQW1CO1lBR0MsWUFBWTtrQkFBdEMsTUFBTTttQkFBQyxpQkFBaUI7WUFHTCxNQUFNO2tCQUF6QixNQUFNO21CQUFDLFVBQVU7WUFPVSxhQUFhO2tCQUF4QyxNQUFNO21CQUFDLGtCQUFrQjtZQUVrQyxTQUFTO2tCQUFwRSxTQUFTO21CQUFDLFdBQVcsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtZQUNFLFNBQVM7a0JBQXBFLFNBQVM7bUJBQUMsV0FBVyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO1lBQzlCLGFBQWE7a0JBQXhDLFNBQVM7bUJBQUMsZUFBZTtZQVkxQixTQUFTO2tCQURSLFlBQVk7bUJBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSG9zdExpc3RlbmVyLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvTXVsdGlzZWxlY3RMaXRlcmFscyB9IGZyb20gJy4uLy4uL2luZGV4JztcbmltcG9ydCB7IFBvTXVsdGlzZWxlY3RPcHRpb24gfSBmcm9tICcuLi9wby1tdWx0aXNlbGVjdC1vcHRpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTXVsdGlzZWxlY3RTZWFyY2hDb21wb25lbnQgfSBmcm9tICcuLy4uL3BvLW11bHRpc2VsZWN0LXNlYXJjaC9wby1tdWx0aXNlbGVjdC1zZWFyY2guY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSBjb25zdHJ1w61yYSBvIGRyb3Bkb3duLCBjb250ZW5kbyBvIGNhbXBvIGRlIHBlc3F1aXNhIGUgb3MgaXRlbnMgcGFyYSBzZWxlw6fDo28uXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLW11bHRpc2VsZWN0LWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW11bHRpc2VsZWN0LWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9NdWx0aXNlbGVjdERyb3Bkb3duQ29tcG9uZW50IHtcbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSBpbmRpY2Egc2UgZGV2ZSBleGliaXIgbyBsb2FkaW5nLiAqL1xuICBASW5wdXQoJ3Atc2VhcmNoaW5nJykgaXNTZXJ2ZXJTZWFyY2hpbmc/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSBpbmRpY2Egc2UgbyBjYW1wbyBkZSBwZXNxdWlzYSBkZXZlcsOhIHNlciBlc2NvbmRpZG8uICovXG4gIEBJbnB1dCgncC1oaWRlLXNlYXJjaCcpIGhpZGVTZWFyY2g/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSBxdWUgcmVjZWJlIGFzIGxpdGVyYWlzIGRlZmluaWRhcyBubyBjb21wb25lbnRlIGBwby1tdWx0aXNlbGVjdGAuICovXG4gIEBJbnB1dCgncC1saXRlcmFscycpIGxpdGVyYWxzPzogUG9NdWx0aXNlbGVjdExpdGVyYWxzO1xuXG4gIC8qKiBQbGFjZWhvbGRlciBkbyBjYW1wbyBkZSBwZXNxdWlzYS4gKi9cbiAgQElucHV0KCdwLXBsYWNlaG9sZGVyLXNlYXJjaCcpIHBsYWNlaG9sZGVyU2VhcmNoOiBzdHJpbmc7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYSBsaXN0YSBkZSBvcMOnw7VlcyBzZWxlY2lvbmFkYXMuICovXG4gIEBJbnB1dCgncC1zZWxlY3RlZC1vcHRpb25zJykgc2VsZWN0ZWRPcHRpb25zOiBBcnJheTxhbnk+ID0gW107XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYSBsaXN0YSBjb20gdG9kYXMgYXMgb3DDp8O1ZXMuICovXG4gIEBJbnB1dCgncC1vcHRpb25zJykgb3B0aW9uczogQXJyYXk8UG9NdWx0aXNlbGVjdE9wdGlvbj4gPSBbXTtcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhIGxpc3RhIGRlIG9ww6fDtWVzIHF1ZSBkZXZlcsOjbyBzZXIgY3JpYWRhcyBubyBkcm9wZG93bi4gKi9cbiAgQElucHV0KCdwLXZpc2libGUtb3B0aW9ucycpIHZpc2libGVPcHRpb25zOiBBcnJheTxQb011bHRpc2VsZWN0T3B0aW9uPiA9IFtdO1xuXG4gIC8qKiBQcm9wcmllZGFkZSBxdWUgaW5kaWNhIHNlIG8gY2FtcG8gXCJTZWxlY2lvbmFyIHRvZG9zXCIgZGV2ZXLDoSBzZXIgZXNjb25kaWRvLiAqL1xuICBASW5wdXQoJ3AtaGlkZS1zZWxlY3QtYWxsJykgaGlkZVNlbGVjdEFsbD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogRXZlbnRvIGRpc3BhcmFkbyBhIGNhZGEgdGVjbGEgZGlnaXRhZGEgbmEgcGVzcXVpc2EuICovXG4gIEBPdXRwdXQoJ3AtY2hhbmdlLXNlYXJjaCcpIGNoYW5nZVNlYXJjaCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAvKiogRXZlbnRvIGRpc3BhcmFkbyBhIGNhZGEgYWx0ZXJhw6fDo28gbmEgbGlzdGEgZGFzIG9ww6fDtWVzIHNlbGVjaW9uYWRhcy4gKi9cbiAgQE91dHB1dCgncC1jaGFuZ2UnKSBjaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqXG4gICAqIEV2ZW50byBkaXNwYXJhZG8gcXVhbmRvIGZvciBkZXRlY3RhZGEgdW1hIGHDp8OjbyBxdWUgbmVjZXNzaXRlIGZlY2hhciBvIGRyb3Bkb3duLlxuICAgKiBQb3IgZXhlbXBsbywgbm8gY2FzbyBkZSBzZXIgdGVjbGFkbyBUQUIgZGVudHJvIGRvIGRyb3Bkb3duLCBlbnTDo28gw6kgZGlzcGFyYWRvIGVzdGUgZXZlbnRvXG4gICAqIHBhcmEgbm90aWZpY2FyIG8gY29tcG9uZW50ZSBwcmluY2lwYWwgcXVlIGRldmUgZmVjaGFyIG8gZHJvcGRvd24uXG4gICAqL1xuICBAT3V0cHV0KCdwLWNsb3NlLWRyb3Bkb3duJykgY2xvc2VEcm9wZG93biA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBjb250YWluZXI6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3VsRWxlbWVudCcsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiB0cnVlIH0pIHVsRWxlbWVudDogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZCgnc2VhcmNoRWxlbWVudCcpIHNlYXJjaEVsZW1lbnQ6IFBvTXVsdGlzZWxlY3RTZWFyY2hDb21wb25lbnQ7XG5cbiAgc2Nyb2xsVG9wID0gMDtcbiAgc2hvdzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2Q6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIGdldCBoYXNPcHRpb25zKCkge1xuICAgIHJldHVybiAhIXRoaXMub3B0aW9ucz8ubGVuZ3RoO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bicsIFsnJGV2ZW50J10pXG4gIG9uS2V5ZG93bihldmVudDogYW55KSB7XG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDkpIHtcbiAgICAgIHRoaXMuY2xvc2VEcm9wZG93bi5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgc2Nyb2xsVG8oaW5kZXgpIHtcbiAgICB0aGlzLnNjcm9sbFRvcCA9IGluZGV4IDw9IDIgPyAwIDogaW5kZXggKiA0NCAtIDg4O1xuICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICBpc1NlbGVjdGVkSXRlbShvcHRpb246IFBvTXVsdGlzZWxlY3RPcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3RlZE9wdGlvbnMuc29tZShzZWxlY3RlZEl0ZW0gPT4gc2VsZWN0ZWRJdGVtLnZhbHVlID09PSBvcHRpb24udmFsdWUpO1xuICB9XG5cbiAgY2xpY2tJdGVtKGNoZWNrLCBvcHRpb24pIHtcbiAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkVmFsdWVzKGNoZWNrLCBvcHRpb24pO1xuXG4gICAgaWYgKCF0aGlzLmhpZGVTZWFyY2gpIHtcbiAgICAgIHRoaXMuc2VhcmNoRWxlbWVudC5zZXRGb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2xpY2tTZWxlY3RBbGwoKSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRWYWx1ZXMgPSB0aGlzLnNlbGVjdGVkT3B0aW9ucy5tYXAoKHsgdmFsdWUgfSkgPT4gdmFsdWUpO1xuXG4gICAgaWYgKHRoaXMuZXZlcnlWaXNpYmxlT3B0aW9uc1NlbGVjdGVkKHNlbGVjdGVkVmFsdWVzKSkge1xuICAgICAgdGhpcy5zZWxlY3RlZE9wdGlvbnMgPSBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZWxlY3RlZE9wdGlvbnMgPSB0aGlzLnVuaXF1ZVNlbGVjdGVkT3B0aW9ucyhzZWxlY3RlZFZhbHVlcyk7XG4gICAgfVxuICAgIHRoaXMuY2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZE9wdGlvbnMpO1xuICB9XG5cbiAgdXBkYXRlU2VsZWN0ZWRWYWx1ZXMoY2hlY2tlZCwgb3B0aW9uKSB7XG4gICAgaWYgKGNoZWNrZWQpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25zLnB1c2gob3B0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZWxlY3RlZE9wdGlvbnMgPSB0aGlzLnNlbGVjdGVkT3B0aW9ucy5maWx0ZXIoc2VsZWN0ZWRPcHRpb24gPT4gc2VsZWN0ZWRPcHRpb24udmFsdWUgIT09IG9wdGlvbi52YWx1ZSk7XG4gICAgfVxuICAgIHRoaXMuY2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZE9wdGlvbnMpO1xuICB9XG5cbiAgZXZlcnlWaXNpYmxlT3B0aW9uc1NlbGVjdGVkKHNlbGVjdGVkVmFsdWVzKSB7XG4gICAgcmV0dXJuIHRoaXMudmlzaWJsZU9wdGlvbnMuZXZlcnkodmlzaWJsZU9wdGlvbiA9PiBzZWxlY3RlZFZhbHVlcy5pbmNsdWRlcyh2aXNpYmxlT3B0aW9uLnZhbHVlKSk7XG4gIH1cblxuICBzb21lVmlzaWJsZU9wdGlvbnNTZWxlY3RlZChzZWxlY3RlZFZhbHVlcykge1xuICAgIHJldHVybiB0aGlzLnZpc2libGVPcHRpb25zLnNvbWUodmlzaWJsZU9wdGlvbiA9PiBzZWxlY3RlZFZhbHVlcy5pbmNsdWRlcyh2aXNpYmxlT3B0aW9uLnZhbHVlKSk7XG4gIH1cblxuICBnZXRTdGF0ZVNlbGVjdEFsbCgpIHtcbiAgICBjb25zdCBzZWxlY3RlZFZhbHVlcyA9IHRoaXMuc2VsZWN0ZWRPcHRpb25zLm1hcCgoeyB2YWx1ZSB9KSA9PiB2YWx1ZSk7XG5cbiAgICBpZiAodGhpcy5ldmVyeVZpc2libGVPcHRpb25zU2VsZWN0ZWQoc2VsZWN0ZWRWYWx1ZXMpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc29tZVZpc2libGVPcHRpb25zU2VsZWN0ZWQoc2VsZWN0ZWRWYWx1ZXMpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGNhbGxDaGFuZ2VTZWFyY2goZXZlbnQpIHtcbiAgICB0aGlzLmNoYW5nZVNlYXJjaC5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIGNvbnRyb2xWaXNpYmlsaXR5KHRvT3Blbikge1xuICAgIHRoaXMuc2hvdyA9IHRvT3BlbjtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKHRvT3BlbiAmJiB0aGlzLnNlYXJjaEVsZW1lbnQgJiYgIXRoaXMuaGlkZVNlYXJjaCkge1xuICAgICAgICB0aGlzLnNlYXJjaEVsZW1lbnQuc2V0Rm9jdXMoKTtcbiAgICAgICAgdGhpcy5zZWFyY2hFbGVtZW50LmNsZWFuKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5jZC5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIHByaXZhdGUgdW5pcXVlU2VsZWN0ZWRPcHRpb25zKHNlbGVjdGVkVmFsdWVzKSB7XG4gICAgY29uc3QgbmV3U2VsZWN0ZWRPcHRpb25zID0gWy4uLnRoaXMuc2VsZWN0ZWRPcHRpb25zXTtcblxuICAgIGZvciAoY29uc3QgdmlzaWJsZU9wdGlvbiBvZiB0aGlzLnZpc2libGVPcHRpb25zKSB7XG4gICAgICBpZiAoIXNlbGVjdGVkVmFsdWVzLmluY2x1ZGVzKHZpc2libGVPcHRpb24udmFsdWUpKSB7XG4gICAgICAgIG5ld1NlbGVjdGVkT3B0aW9ucy5wdXNoKHZpc2libGVPcHRpb24pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXdTZWxlY3RlZE9wdGlvbnM7XG4gIH1cbn1cbiIsIjxkaXYgI2NvbnRhaW5lciBjbGFzcz1cInBvLW11bHRpc2VsZWN0LWNvbnRhaW5lclwiIFtoaWRkZW5dPVwiIXNob3dcIj5cbiAgPHBvLW11bHRpc2VsZWN0LXNlYXJjaFxuICAgICNzZWFyY2hFbGVtZW50XG4gICAgKm5nSWY9XCIhaGlkZVNlYXJjaFwiXG4gICAgW3AtbGl0ZXJhbHNdPVwibGl0ZXJhbHNcIlxuICAgIFtwLXBsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVyU2VhcmNoXCJcbiAgICAocC1jaGFuZ2UpPVwiY2FsbENoYW5nZVNlYXJjaCgkZXZlbnQpXCJcbiAgPlxuICA8L3BvLW11bHRpc2VsZWN0LXNlYXJjaD5cblxuICA8dWwgY2xhc3M9XCJwby1tdWx0aXNlbGVjdC1pdGVtcy1jb250YWluZXJcIiBbc2Nyb2xsVG9wXT1cInNjcm9sbFRvcFwiICN1bEVsZW1lbnQ+XG4gICAgPGRpdiAqbmdJZj1cIiF2aXNpYmxlT3B0aW9ucy5sZW5ndGggJiYgIWlzU2VydmVyU2VhcmNoaW5nXCIgY2xhc3M9XCJwby1tdWx0aXNlbGVjdC1jb250YWluZXItbm8tZGF0YSBwby10ZXh0LWNlbnRlclwiPlxuICAgICAgPHNwYW4+IHt7IGxpdGVyYWxzLm5vRGF0YSB9fTwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgKm5nSWY9XCJpc1NlcnZlclNlYXJjaGluZ1wiIGNsYXNzPVwicG8tbXVsdGlzZWxlY3QtY29udGFpbmVyLWxvYWRpbmcgcG8tdGV4dC1jZW50ZXJcIj5cbiAgICAgIDxwby1sb2FkaW5nPjwvcG8tbG9hZGluZz5cbiAgICA8L2Rpdj5cblxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhaXNTZXJ2ZXJTZWFyY2hpbmdcIj5cbiAgICAgIDxwby1tdWx0aXNlbGVjdC1pdGVtXG4gICAgICAgICpuZ0lmPVwiIXNlYXJjaEVsZW1lbnQ/LmlucHV0VmFsdWUgJiYgdmlzaWJsZU9wdGlvbnMubGVuZ3RoICYmICFoaWRlU2VsZWN0QWxsXCJcbiAgICAgICAgW3AtbGFiZWxdPVwibGl0ZXJhbHM/LnNlbGVjdEFsbFwiXG4gICAgICAgIFtwLXNlbGVjdGVkXT1cImdldFN0YXRlU2VsZWN0QWxsKClcIlxuICAgICAgICAocC1jaGFuZ2UpPVwib25DbGlja1NlbGVjdEFsbCgpXCJcbiAgICAgID5cbiAgICAgIDwvcG8tbXVsdGlzZWxlY3QtaXRlbT5cblxuICAgICAgPHBvLW11bHRpc2VsZWN0LWl0ZW1cbiAgICAgICAgKm5nRm9yPVwibGV0IG9wdGlvbiBvZiB2aXNpYmxlT3B0aW9uc1wiXG4gICAgICAgIFtwLWxhYmVsXT1cIm9wdGlvbi5sYWJlbFwiXG4gICAgICAgIFtwLXNlbGVjdGVkXT1cImlzU2VsZWN0ZWRJdGVtKG9wdGlvbilcIlxuICAgICAgICAocC1jaGFuZ2UpPVwiY2xpY2tJdGVtKCRldmVudCwgb3B0aW9uKVwiXG4gICAgICA+XG4gICAgICA8L3BvLW11bHRpc2VsZWN0LWl0ZW0+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvdWw+XG48L2Rpdj5cbiJdfQ==