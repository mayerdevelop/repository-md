import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
/**
 * @docsPrivate
 *
 * @description
 *
 * O componente `po-radio` é um componente interno e deve ser utilizado em conjunto com o componente `po-radio-group`.
 */
export declare abstract class PoRadioBaseComponent implements ControlValueAccessor {
    /** Define o nome do *radio*. */
    name: string;
    /** Texto de exibição do *radio* */
    label?: string;
    /** Define o status do *radio* */
    radioValue: boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define o estado do *radio* como desabilitado;
     *
     * @default `false`
     */
    disabled: boolean;
    /**
     * @optional
     *
     * @description
     *
     * Evento disparado quando o valor do *radio* for alterado.
     */
    change: EventEmitter<any>;
    id: string;
    propagateChange: any;
    onTouched: any;
    private _size;
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho do *radio*
     * @default `medium`
     */
    set size(value: string);
    get size(): string;
    changeValue(): void;
    checkOption(value: boolean): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(value: any): void;
    protected abstract changeModelValue(value: boolean | string): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoRadioBaseComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PoRadioBaseComponent, never, never, { "name": "name"; "label": "p-label"; "radioValue": "p-checked"; "disabled": "p-disabled"; "size": "p-size"; }, { "change": "p-change"; }, never, never, false>;
}
